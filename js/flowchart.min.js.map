{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///flowchart.min.js","webpack:///webpack/bootstrap f87f23ba4eaf30bfafe1","webpack:///./index.js","webpack:///./src/flowchart.helpers.js","webpack:///./src/flowchart.symbol.js","webpack:///./src/flowchart.functions.js","webpack:///./src/flowchart.parse.js","webpack:///./src/flowchart.symbol.condition.js","webpack:///./src/flowchart.chart.js","webpack:///./src/flowchart.defaults.js","webpack:///./src/flowchart.shim.js","webpack:///./src/flowchart.symbol.cloud.js","webpack:///./src/flowchart.symbol.database.js","webpack:///./src/flowchart.symbol.end.js","webpack:///./src/flowchart.symbol.inputoutput.js","webpack:///./src/flowchart.symbol.operation.js","webpack:///./src/flowchart.symbol.start.js","webpack:///./src/flowchart.symbol.subroutine.js","webpack:///./src/jquery-plugin.js","webpack:///external \"Raphael\""],"names":["root","factory","exports","module","require","define","amd","a","i","this","__WEBPACK_EXTERNAL_MODULE_17__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","parse","FlowChart","window","flowchart","_defaults","options","defaultOptions","merged","attrname","_inherits","ctor","superCtor","Object","super_","prototype","create","constructor","value","enumerable","writable","configurable","TempCtor","defaults","inherits","Symbol","chart","symbol","group","paper","set","connectedTo","symbolType","flowstate","lineStyle","key","next_direction","next","undefined","text","node","setAttribute","getAttr","attr","text-anchor","x","fill","font-size","font","fontF","fontW","font-family","font-weight","link","target","maxWidth","words","split","tempText","ii","length","word","getBBox","width","substring","push","tmpMargin","stroke","stroke-width","height","insertBefore","y","initialize","drawAPI","drawLine","checkLineIntersection","attName","opt1","opt3","opt2","symbols","transform","getCenter","getX","getY","shiftX","setX","shiftY","setY","getTop","getBottom","getLeft","getRight","getLineLength","render","lineLength","rightPoint","isPositioned","self","shift","symb","hasSymbolUnder","len","diff","Math","abs","bottomPoint","renderLines","drawLineTo","origin","indexOf","line","top","right","bottom","left","symbolX","symbolY","symbolTop","symbolBottom","symbolRight","symbolLeft","isOnSameColumn","isOnSameLine","isUnder","isUpper","isLeft","isRight","maxX","lineWith","rightStart","topEnd","bottomStart","diffX","leftStart","leftEnd","rightEnd","l","llen","lines","otherLine","ePath","lPath","iP","lenP","newPath","line1_from_x","line1_from_y","line1_to_x","line1_to_y","lP","lenlP","newLinePath","line2_from_x","line2_from_y","line2_to_x","line2_to_y","res","onLine1","onLine2","newSegment","splice","maxXFromLine","drawPath","location","points","path","pathValues","from","to","toString","arrow-end","centerText","textPath","isHorizontal","firstTo","line1StartX","line1StartY","line1EndX","line1EndY","line2StartX","line2StartY","line2EndX","line2EndY","denominator","b","numerator1","numerator2","result","input","getStyle","s","startIndex","endIndex","getSymbol","getNextPath","flowSymb","trim","start","drawSVG","container","getDisplaySymbol","dispSymbols","Start","diagram","End","Operation","InputOutput","Subroutine","Condition","Database","Cloud","Error","clean","constructChart","prevDisp","prev","dispSymb","startWith","pathOk","yes","no","then","prevBreak","i0","i0len","line0","replace","substr","currentLine","parts","params","match","entries","entry","sub","join","txtAndState","pop","flowSymbols","lenS","realSymb","direction","condOpt","nextSymb","lineStyleSymbols","curSymb","JSON","textMargin","yes_direction","no_direction","direction_yes","direction_no","max","startX","startY","yes_symbol","no_symbol","bottom_symbol","right_symbol","Raphael","handle","flowChart","nextSymbol","maxHeight","maxY","minX","minY","x2","y2","scale","lineWidth","setSize","setViewBox","paperDom","canvas","parentNode","removeChild","line-width","line-length","text-margin","font-color","line-color","element-color","yes-text","no-text","class","end","condition","inputoutput","operation","subroutine","database","cloud","Array","searchElement","TypeError","t","n","arguments","Number","Infinity","floor","k","lastIndexOf","min","String","originX","originY","textWidth","textHeight","h","ngl","cos","coeff","r","topBubbleHeight","sin","r3","cv1r","cv1y1","cv1x","cv1y2","cv1","cv2","cv3","cv4","base","startRight","ellipseHeight","bottomEllipse","ellipse","textArea","rect","topEllipse","leftBorder","rightBorder","console","debug","innerWrap","jQuery","$","fn","each","$this","html"],"mappings":"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","file":"flowchart.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"Raphael\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"Raphael\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"Raphael\")) : factory(root[\"Raphael\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_17__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"Raphael\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"Raphael\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"Raphael\")) : factory(root[\"Raphael\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_17__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/*!******************!*\\\n  !*** ./index.js ***!\n  \\******************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(/*! ./src/flowchart.shim */ 8);\n\tvar parse = __webpack_require__(/*! ./src/flowchart.parse */ 4);\n\t__webpack_require__(/*! ./src/jquery-plugin */ 16);\n\t\n\tvar FlowChart = {\n\t\tparse: parse\n\t};\n\t\n\tif (typeof window !== 'undefined') {\n\t\twindow.flowchart = FlowChart;\n\t}\n\t\n\tmodule.exports = FlowChart;\n\n\n/***/ }),\n/* 1 */\n/*!**********************************!*\\\n  !*** ./src/flowchart.helpers.js ***!\n  \\**********************************/\n/***/ (function(module, exports) {\n\n\tfunction _defaults(options, defaultOptions) {\n\t  if (!options || typeof options === 'function') {\n\t    return defaultOptions;\n\t  }\n\t\n\t  var merged = {};\n\t  for (var attrname in defaultOptions) {\n\t    merged[attrname] = defaultOptions[attrname];\n\t  }\n\t\n\t  for (attrname in options) {\n\t    if (options[attrname]) {\n\t      if (typeof merged[attrname] === 'object') {\n\t        merged[attrname] = _defaults(merged[attrname], options[attrname]);\n\t      } else {\n\t        merged[attrname] = options[attrname];\n\t      }\n\t    }\n\t  }\n\t  return merged;\n\t}\n\t\n\tfunction _inherits(ctor, superCtor) {\n\t  if (typeof(Object.create) === 'function') {\n\t    // implementation from standard node.js 'util' module\n\t    ctor.super_ = superCtor;\n\t    ctor.prototype = Object.create(superCtor.prototype, {\n\t      constructor: {\n\t        value: ctor,\n\t        enumerable: false,\n\t        writable: true,\n\t        configurable: true\n\t      }\n\t    });\n\t  } else {\n\t    // old school shim for old browsers\n\t    ctor.super_ = superCtor;\n\t    var TempCtor = function () {};\n\t    TempCtor.prototype = superCtor.prototype;\n\t    ctor.prototype = new TempCtor();\n\t    ctor.prototype.constructor = ctor;\n\t  }\n\t}\n\t\n\t// move dependent functions to a container so that\n\t// they can be overriden easier in no jquery environment (node.js)\n\tmodule.exports = {\n\t  defaults: _defaults,\n\t  inherits: _inherits\n\t};\n\n\n/***/ }),\n/* 2 */\n/*!*********************************!*\\\n  !*** ./src/flowchart.symbol.js ***!\n  \\*********************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar drawAPI = __webpack_require__(/*! ./flowchart.functions */ 3);\n\tvar drawLine = drawAPI.drawLine;\n\tvar checkLineIntersection = drawAPI.checkLineIntersection;\n\t\n\tfunction Symbol(chart, options, symbol) {\n\t  this.chart = chart;\n\t  this.group = this.chart.paper.set();\n\t  this.symbol = symbol;\n\t  this.connectedTo = [];\n\t  this.symbolType = options.symbolType;\n\t  this.flowstate = (options.flowstate || 'future');\n\t  this.lineStyle = (options.lineStyle || {});\n\t  this.key = (options.key || '');\n\t\n\t  this.next_direction = options.next && options['direction_next'] ? options['direction_next'] : undefined;\n\t\n\t  this.text = this.chart.paper.text(0, 0, options.text);\n\t  //Raphael does not support the svg group tag so setting the text node id to the symbol node id plus t\n\t  if (options.key) { this.text.node.id = options.key + 't'; }\n\t  this.text.node.setAttribute('class', this.getAttr('class') + 't');\n\t\n\t  this.text.attr({\n\t    'text-anchor': 'start',\n\t    'x'          : this.getAttr('text-margin'),\n\t    'fill'       : this.getAttr('font-color'),\n\t    'font-size'  : this.getAttr('font-size')\n\t  });\n\t\n\t  var font  = this.getAttr('font');\n\t  var fontF = this.getAttr('font-family');\n\t  var fontW = this.getAttr('font-weight');\n\t\n\t  if (font) this.text.attr({ 'font': font });\n\t  if (fontF) this.text.attr({ 'font-family': fontF });\n\t  if (fontW) this.text.attr({ 'font-weight': fontW });\n\t\n\t  if (options.link) { this.text.attr('href', options.link); }\n\t  if (options.target) { this.text.attr('target', options.target); }\n\t\n\t  var maxWidth = this.getAttr('maxWidth');\n\t  if (maxWidth) {\n\t    // using this approach: http://stackoverflow.com/a/3153457/22466\n\t    var words = options.text.split(' ');\n\t    var tempText = \"\";\n\t    for (var i=0, ii=words.length; i<ii; i++) {\n\t      var word = words[i];\n\t      this.text.attr(\"text\", tempText + \" \" + word);\n\t      if (this.text.getBBox().width > maxWidth) {\n\t        tempText += \"\\n\" + word;\n\t      } else {\n\t        tempText += \" \" + word;\n\t      }\n\t    }\n\t    this.text.attr(\"text\", tempText.substring(1));\n\t  }\n\t\n\t  this.group.push(this.text);\n\t\n\t  if (symbol) {\n\t    var tmpMargin = this.getAttr('text-margin');\n\t\n\t    symbol.attr({\n\t      'fill' : this.getAttr('fill'),\n\t      'stroke' : this.getAttr('element-color'),\n\t      'stroke-width' : this.getAttr('line-width'),\n\t      'width' : this.text.getBBox().width + 2 * tmpMargin,\n\t      'height' : this.text.getBBox().height + 2 * tmpMargin\n\t    });\n\t\n\t    symbol.node.setAttribute('class', this.getAttr('class'));\n\t\n\t    if (options.link) { symbol.attr('href', options.link); }\n\t    if (options.target) { symbol.attr('target', options.target); }\n\t    if (options.key) { symbol.node.id = options.key; }\n\t\n\t    this.group.push(symbol);\n\t    symbol.insertBefore(this.text);\n\t\n\t    this.text.attr({\n\t      'y': symbol.getBBox().height/2\n\t    });\n\t\n\t    this.initialize();\n\t  }\n\t\n\t}\n\t\n\t/* Gets the attribute based on Flowstate, Symbol-Name and default, first found wins */\n\tSymbol.prototype.getAttr = function(attName) {\n\t  if (!this.chart) {\n\t    return undefined;\n\t  }\n\t  var opt3 = (this.chart.options) ? this.chart.options[attName] : undefined;\n\t  var opt2 = (this.chart.options.symbols) ? this.chart.options.symbols[this.symbolType][attName] : undefined;\n\t  var opt1;\n\t  if (this.chart.options.flowstate && this.chart.options.flowstate[this.flowstate]) {\n\t    opt1 = this.chart.options.flowstate[this.flowstate][attName];\n\t  }\n\t  return (opt1 || opt2 || opt3);\n\t};\n\t\n\tSymbol.prototype.initialize = function() {\n\t  this.group.transform('t' + this.getAttr('line-width') + ',' + this.getAttr('line-width'));\n\t\n\t  this.width = this.group.getBBox().width;\n\t  this.height = this.group.getBBox().height;\n\t};\n\t\n\tSymbol.prototype.getCenter = function() {\n\t  return {x: this.getX() + this.width/2,\n\t          y: this.getY() + this.height/2};\n\t};\n\t\n\tSymbol.prototype.getX = function() {\n\t  return this.group.getBBox().x;\n\t};\n\t\n\tSymbol.prototype.getY = function() {\n\t  return this.group.getBBox().y;\n\t};\n\t\n\tSymbol.prototype.shiftX = function(x) {\n\t  this.group.transform('t' + (this.getX() + x) + ',' + this.getY());\n\t};\n\t\n\tSymbol.prototype.setX = function(x) {\n\t  this.group.transform('t' + x + ',' + this.getY());\n\t};\n\t\n\tSymbol.prototype.shiftY = function(y) {\n\t  this.group.transform('t' + this.getX() + ',' + (this.getY() + y));\n\t};\n\t\n\tSymbol.prototype.setY = function(y) {\n\t  this.group.transform('t' + this.getX() + ',' + y);\n\t};\n\t\n\tSymbol.prototype.getTop = function() {\n\t  var y = this.getY();\n\t  var x = this.getX() + this.width/2;\n\t  return {x: x, y: y};\n\t};\n\t\n\tSymbol.prototype.getBottom = function() {\n\t  var y = this.getY() + this.height;\n\t  var x = this.getX() + this.width/2;\n\t  return {x: x, y: y};\n\t};\n\t\n\tSymbol.prototype.getLeft = function() {\n\t  var y = this.getY() + this.group.getBBox().height/2;\n\t  var x = this.getX();\n\t  return {x: x, y: y};\n\t};\n\t\n\tSymbol.prototype.getRight = function() {\n\t  var y = this.getY() + this.group.getBBox().height/2;\n\t  var x = this.getX() + this.group.getBBox().width;\n\t  return {x: x, y: y};\n\t};\n\t\n\tSymbol.prototype.getLineLength=function(){\n\t  return this.getAttr('line-length');\n\t}\n\t\n\tSymbol.prototype.render = function() {\n\t  if (this.next) {\n\t\n\t    var lineLength = this.getLineLength();// this.getAttr('line-length');\n\t\n\t    if (this.next_direction === 'right') {\n\t\n\t      var rightPoint = this.getRight();\n\t\n\t      if (!this.next.isPositioned) {\n\t\n\t        this.next.setY(rightPoint.y - this.next.height/2);\n\t        this.next.shiftX(this.group.getBBox().x + this.width + lineLength);\n\t\n\t        var self = this;\n\t        (function shift() {\n\t          var hasSymbolUnder = false;\n\t          var symb;\n\t          for (var i = 0, len = self.chart.symbols.length; i < len; i++) {\n\t            symb = self.chart.symbols[i];\n\t\n\t            var diff = Math.abs(symb.getCenter().x - self.next.getCenter().x);\n\t            if (symb.getCenter().y > self.next.getCenter().y && diff <= self.next.width/2) {\n\t              hasSymbolUnder = true;\n\t              break;\n\t            }\n\t          }\n\t\n\t          if (hasSymbolUnder) {\n\t            self.next.setX(symb.getX() + symb.width + lineLength);\n\t            shift();\n\t          }\n\t        })();\n\t\n\t        this.next.isPositioned = true;\n\t\n\t        this.next.render();\n\t      }\n\t    } else {\n\t      var bottomPoint = this.getBottom();\n\t\n\t      if (!this.next.isPositioned) {\n\t        this.next.shiftY(this.getY() + this.height + lineLength);\n\t        this.next.setX(bottomPoint.x - this.next.width/2);\n\t        this.next.isPositioned = true;\n\t\n\t        this.next.render();\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tSymbol.prototype.renderLines = function() {\n\t  if (this.next) {\n\t    if (this.next_direction) {\n\t      this.drawLineTo(this.next, '', this.next_direction);\n\t    } else {\n\t      this.drawLineTo(this.next);\n\t    }\n\t  }\n\t};\n\t\n\tSymbol.prototype.drawLineTo = function(symbol, text, origin) {\n\t  if (this.connectedTo.indexOf(symbol) < 0) {\n\t    this.connectedTo.push(symbol);\n\t  }\n\t\n\t  var x = this.getCenter().x,\n\t      y = this.getCenter().y,\n\t      top = this.getTop(),\n\t      right = this.getRight(),\n\t      bottom = this.getBottom(),\n\t      left = this.getLeft();\n\t\n\t  var symbolX = symbol.getCenter().x,\n\t      symbolY = symbol.getCenter().y,\n\t      symbolTop = symbol.getTop(),\n\t      symbolBottom = symbol.getBottom(),\n\t      symbolRight = symbol.getRight(),\n\t      symbolLeft = symbol.getLeft();\n\t\n\t  var isOnSameColumn = x === symbolX,\n\t      isOnSameLine = bottom.y > symbolTop.y && top.y < symbolBottom.y, // y === symbolY,\n\t      isUnder = bottom.y < symbolTop.y, // y < symbolY && symbolTop.y < bottom,\n\t      isUpper = y > symbolY || this === symbol,\n\t      isLeft = x > symbolX,\n\t      isRight = x < symbolX;\n\t\n\t  var maxX = 0,\n\t      line,\n\t      lineLength = this.getLineLength();// this.getAttr('line-length'),\n\t      lineWith = this.getAttr('line-width');\n\t\n\t  if ((!origin || origin === 'bottom') && isOnSameColumn && isUnder) {\n\t    line = drawLine(this.chart, bottom, symbolTop, text);\n\t    this.bottomStart = true;\n\t    symbol.topEnd = true;\n\t    maxX = bottom.x;\n\t  } else if ((!origin || origin === 'right') && isOnSameLine && isRight) {\n\t    line = drawLine(this.chart, right, symbolLeft, text);\n\t    this.rightStart = true;\n\t    symbol.leftEnd = true;\n\t    maxX = symbolLeft.x;\n\t  } else if ((!origin || origin === 'left') && isOnSameLine && isLeft) {\n\t    line = drawLine(this.chart, left, symbolRight, text);\n\t    this.leftStart = true;\n\t    symbol.rightEnd = true;\n\t    maxX = symbolRight.x;\n\t  } else if ((!origin || origin === 'right') && isOnSameColumn && isUpper) {\n\t    line = drawLine(this.chart, right, [\n\t      {x: right.x + lineLength/2, y: right.y},\n\t      {x: right.x + lineLength/2, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y}\n\t    ], text);\n\t    this.rightStart = true;\n\t    symbol.topEnd = true;\n\t    maxX = right.x + lineLength/2;\n\t  } else if ((!origin || origin === 'right') && isOnSameColumn && isUnder) {\n\t    line = drawLine(this.chart, right, [\n\t      {x: right.x + lineLength/2, y: right.y},\n\t      {x: right.x + lineLength/2, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y}\n\t    ], text);\n\t    this.rightStart = true;\n\t    symbol.topEnd = true;\n\t    maxX = right.x + lineLength/2;\n\t  } else if ((!origin || origin === 'bottom') && isLeft) {\n\t    if (this.leftEnd && isUpper) {\n\t      line = drawLine(this.chart, bottom, [\n\t        {x: bottom.x, y: bottom.y + lineLength/2},\n\t        {x: bottom.x + (bottom.x - symbolTop.x)/2, y: bottom.y + lineLength/2},\n\t        {x: bottom.x + (bottom.x - symbolTop.x)/2, y: symbolTop.y - lineLength/2},\n\t        {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n\t        {x: symbolTop.x, y: symbolTop.y}\n\t      ], text);\n\t    } else {\n\t      line = drawLine(this.chart, bottom, [\n\t        {x: bottom.x, y: symbolTop.y - lineLength/2},\n\t        {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n\t        {x: symbolTop.x, y: symbolTop.y}\n\t      ], text);\n\t    }\n\t    this.bottomStart = true;\n\t    symbol.topEnd = true;\n\t    maxX = bottom.x + (bottom.x - symbolTop.x)/2;\n\t  } else if ((!origin || origin === 'bottom') && isRight) {\n\t    line = drawLine(this.chart, bottom, [\n\t      {x: bottom.x, y: bottom.y + lineLength/2},\n\t      {x: bottom.x + (bottom.x - symbolTop.x)/2, y: bottom.y + lineLength/2},\n\t      {x: bottom.x + (bottom.x - symbolTop.x)/2, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y}\n\t    ], text);\n\t    this.bottomStart = true;\n\t    symbol.topEnd = true;\n\t    maxX = bottom.x + (bottom.x - symbolTop.x)/2;\n\t  } else if ((origin && origin === 'right') && isLeft) {\n\t    line = drawLine(this.chart, right, [\n\t      {x: right.x + lineLength/2, y: right.y},\n\t      {x: right.x + lineLength/2, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y}\n\t    ], text);\n\t    this.rightStart = true;\n\t    symbol.topEnd = true;\n\t    maxX = right.x + lineLength/2;\n\t  } else if ((origin && origin === 'right') && isRight) {\n\t    line = drawLine(this.chart, right, [\n\t      {x: symbolTop.x, y: right.y},\n\t      {x: symbolTop.x, y: symbolTop.y}\n\t    ], text);\n\t    this.rightStart = true;\n\t    symbol.topEnd = true;\n\t    maxX = right.x + lineLength/2;\n\t  } else if ((origin && origin === 'bottom') && isOnSameColumn && isUpper) {\n\t    line = drawLine(this.chart, bottom, [\n\t      {x: bottom.x, y: bottom.y + lineLength/2},\n\t      {x: right.x + lineLength/2, y: bottom.y + lineLength/2},\n\t      {x: right.x + lineLength/2, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y}\n\t    ], text);\n\t    this.bottomStart = true;\n\t    symbol.topEnd = true;\n\t    maxX = bottom.x + lineLength/2;\n\t  } else if ((origin === 'left') && isOnSameColumn && isUpper) {\n\t    var diffX = left.x - lineLength/2;\n\t    if (symbolLeft.x < left.x) {\n\t      diffX = symbolLeft.x - lineLength/2;\n\t    }\n\t    line = drawLine(this.chart, left, [\n\t      {x: diffX, y: left.y},\n\t      {x: diffX, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y}\n\t    ], text);\n\t    this.leftStart = true;\n\t    symbol.topEnd = true;\n\t    maxX = left.x;\n\t  } else if ((origin === 'left')) {\n\t    line = drawLine(this.chart, left, [\n\t      {x: symbolTop.x + (left.x - symbolTop.x)/ 2, y: left.y},\n\t      {x: symbolTop.x + (left.x - symbolTop.x)/ 2, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y}\n\t    ], text);\n\t    this.leftStart = true;\n\t    symbol.topEnd = true;\n\t    maxX = left.x;\n\t  }\n\t\n\t  //update line style\n\t  if (this.lineStyle[symbol.key] && line){\n\t      line.attr( this.lineStyle[symbol.key]);\n\t  }\n\t\n\t  if (line) {\n\t    for (var l = 0, llen = this.chart.lines.length; l < llen; l++) {\n\t      var otherLine = this.chart.lines[l];\n\t      var len;\n\t\n\t      var ePath = otherLine.attr('path'),\n\t          lPath = line.attr('path');\n\t\n\t      for (var iP = 0, lenP = ePath.length - 1; iP < lenP; iP++) {\n\t        var newPath = [];\n\t        newPath.push(['M', ePath[iP][1], ePath[iP][2]]);\n\t        newPath.push(['L', ePath[iP + 1][1], ePath[iP + 1][2]]);\n\t\n\t        var line1_from_x = newPath[0][1];\n\t        var line1_from_y = newPath[0][2];\n\t        var line1_to_x = newPath[1][1];\n\t        var line1_to_y = newPath[1][2];\n\t\n\t        for (var lP = 0, lenlP = lPath.length - 1; lP < lenlP; lP++) {\n\t          var newLinePath = [];\n\t          newLinePath.push(['M', lPath[lP][1], lPath[lP][2]]);\n\t          newLinePath.push(['L', lPath[lP + 1][1], lPath[lP + 1][2]]);\n\t\n\t          var line2_from_x = newLinePath[0][1];\n\t          var line2_from_y = newLinePath[0][2];\n\t          var line2_to_x = newLinePath[1][1];\n\t          var line2_to_y = newLinePath[1][2];\n\t\n\t          var res = checkLineIntersection(line1_from_x, line1_from_y, line1_to_x, line1_to_y, line2_from_x, line2_from_y, line2_to_x, line2_to_y);\n\t          if (res.onLine1 && res.onLine2) {\n\t\n\t            var newSegment;\n\t            if (line2_from_y === line2_to_y) {\n\t              if (line2_from_x > line2_to_x) {\n\t                newSegment = ['L', res.x + lineWith * 2,  line2_from_y];\n\t                lPath.splice(lP + 1, 0, newSegment);\n\t                newSegment = ['C', res.x + lineWith * 2,  line2_from_y, res.x, line2_from_y - lineWith * 4, res.x - lineWith * 2, line2_from_y];\n\t                lPath.splice(lP + 2, 0, newSegment);\n\t                line.attr('path', lPath);\n\t              } else {\n\t                newSegment = ['L', res.x - lineWith * 2,  line2_from_y];\n\t                lPath.splice(lP + 1, 0, newSegment);\n\t                newSegment = ['C', res.x - lineWith * 2,  line2_from_y, res.x, line2_from_y - lineWith * 4, res.x + lineWith * 2, line2_from_y];\n\t                lPath.splice(lP + 2, 0, newSegment);\n\t                line.attr('path', lPath);\n\t              }\n\t            } else {\n\t              if (line2_from_y > line2_to_y) {\n\t                newSegment = ['L', line2_from_x, res.y + lineWith * 2];\n\t                lPath.splice(lP + 1, 0, newSegment);\n\t                newSegment = ['C', line2_from_x, res.y + lineWith * 2, line2_from_x + lineWith * 4, res.y, line2_from_x, res.y - lineWith * 2];\n\t                lPath.splice(lP + 2, 0, newSegment);\n\t                line.attr('path', lPath);\n\t              } else {\n\t                newSegment = ['L', line2_from_x, res.y - lineWith * 2];\n\t                lPath.splice(lP + 1, 0, newSegment);\n\t                newSegment = ['C', line2_from_x, res.y - lineWith * 2, line2_from_x + lineWith * 4, res.y, line2_from_x, res.y + lineWith * 2];\n\t                lPath.splice(lP + 2, 0, newSegment);\n\t                line.attr('path', lPath);\n\t              }\n\t            }\n\t\n\t            lP += 2;\n\t            len += 2;\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    this.chart.lines.push(line);\n\t  }\n\t\n\t  if (!this.chart.maxXFromLine || (this.chart.maxXFromLine && maxX > this.chart.maxXFromLine)) {\n\t    this.chart.maxXFromLine = maxX;\n\t  }\n\t};\n\t\n\tmodule.exports = Symbol;\n\n\n/***/ }),\n/* 3 */\n/*!************************************!*\\\n  !*** ./src/flowchart.functions.js ***!\n  \\************************************/\n/***/ (function(module, exports) {\n\n\tfunction drawPath(chart, location, points) {\n\t  var i, len;\n\t  var path = 'M{0},{1}';\n\t  for (i = 2, len = 2 * points.length + 2; i < len; i+=2) {\n\t    path += ' L{' + i + '},{' + (i + 1) + '}';\n\t  }\n\t  var pathValues = [location.x, location.y];\n\t  for (i = 0, len = points.length; i < len; i++) {\n\t    pathValues.push(points[i].x);\n\t    pathValues.push(points[i].y);\n\t  }\n\t  var symbol = chart.paper.path(path, pathValues);\n\t  symbol.attr('stroke', chart.options['element-color']);\n\t  symbol.attr('stroke-width', chart.options['line-width']);\n\t\n\t  var font = chart.options.font;\n\t  var fontF = chart.options['font-family'];\n\t  var fontW = chart.options['font-weight'];\n\t\n\t  if (font) symbol.attr({ 'font': font });\n\t  if (fontF) symbol.attr({ 'font-family': fontF });\n\t  if (fontW) symbol.attr({ 'font-weight': fontW });\n\t\n\t  return symbol;\n\t}\n\t\n\tfunction drawLine(chart, from, to, text) {\n\t  var i, len;\n\t\n\t  if (Object.prototype.toString.call(to) !== '[object Array]') {\n\t    to = [to];\n\t  }\n\t\n\t  var path = 'M{0},{1}';\n\t  for (i = 2, len = 2 * to.length + 2; i < len; i+=2) {\n\t    path += ' L{' + i + '},{' + (i + 1) + '}';\n\t  }\n\t  var pathValues = [from.x, from.y];\n\t  for (i = 0, len = to.length; i < len; i++) {\n\t    pathValues.push(to[i].x);\n\t    pathValues.push(to[i].y);\n\t  }\n\t\n\t  var line = chart.paper.path(path, pathValues);\n\t  line.attr({\n\t    stroke: chart.options['line-color'],\n\t    'stroke-width': chart.options['line-width'],\n\t    'arrow-end': chart.options['arrow-end']\n\t  });\n\t\n\t  var font = chart.options.font;\n\t  var fontF = chart.options['font-family'];\n\t  var fontW = chart.options['font-weight'];\n\t\n\t  if (font) line.attr({ 'font': font });\n\t  if (fontF) line.attr({ 'font-family': fontF });\n\t  if (fontW) line.attr({ 'font-weight': fontW });\n\t\n\t  if (text) {\n\t\n\t    var centerText = false;\n\t\n\t    var textPath = chart.paper.text(0, 0, text);\n\t\n\t    var isHorizontal = false;\n\t    var firstTo = to[0];\n\t\n\t    if (from.y === firstTo.y) {\n\t      isHorizontal = true;\n\t    }\n\t\n\t    var x = 0,\n\t        y = 0;\n\t\n\t    if (centerText) {\n\t      if (from.x > firstTo.x) {\n\t        x = from.x - (from.x - firstTo.x)/2;\n\t      } else {\n\t        x = firstTo.x - (firstTo.x - from.x)/2;\n\t      }\n\t\n\t      if (from.y > firstTo.y) {\n\t        y = from.y - (from.y - firstTo.y)/2;\n\t      } else {\n\t        y = firstTo.y - (firstTo.y - from.y)/2;\n\t      }\n\t\n\t      if (isHorizontal) {\n\t        x -= textPath.getBBox().width/2;\n\t        y -= chart.options['text-margin'];\n\t      } else {\n\t        x += chart.options['text-margin'];\n\t        y -= textPath.getBBox().height/2;\n\t      }\n\t    } else {\n\t      x = from.x;\n\t      y = from.y;\n\t\n\t      if (isHorizontal) {\n\t        x += chart.options['text-margin']/2;\n\t        y -= chart.options['text-margin'];\n\t      } else {\n\t        x += chart.options['text-margin']/2;\n\t        y += chart.options['text-margin'];\n\t      }\n\t    }\n\t\n\t    textPath.attr({\n\t      'text-anchor': 'start',\n\t      'font-size': chart.options['font-size'],\n\t      'fill': chart.options['font-color'],\n\t      x: x,\n\t      y: y\n\t    });\n\t\n\t    if (font) textPath.attr({ 'font': font });\n\t    if (fontF) textPath.attr({ 'font-family': fontF });\n\t    if (fontW) textPath.attr({ 'font-weight': fontW });\n\t  }\n\t\n\t  return line;\n\t}\n\t\n\tfunction checkLineIntersection(line1StartX, line1StartY, line1EndX, line1EndY, line2StartX, line2StartY, line2EndX, line2EndY) {\n\t  // if the lines intersect, the result contains the x and y of the intersection (treating the lines as infinite) and booleans for whether line segment 1 or line segment 2 contain the point\n\t  var denominator, a, b, numerator1, numerator2, result = {\n\t    x: null,\n\t    y: null,\n\t    onLine1: false,\n\t    onLine2: false\n\t  };\n\t  denominator = ((line2EndY - line2StartY) * (line1EndX - line1StartX)) - ((line2EndX - line2StartX) * (line1EndY - line1StartY));\n\t  if (denominator === 0) {\n\t    return result;\n\t  }\n\t  a = line1StartY - line2StartY;\n\t  b = line1StartX - line2StartX;\n\t  numerator1 = ((line2EndX - line2StartX) * a) - ((line2EndY - line2StartY) * b);\n\t  numerator2 = ((line1EndX - line1StartX) * a) - ((line1EndY - line1StartY) * b);\n\t  a = numerator1 / denominator;\n\t  b = numerator2 / denominator;\n\t\n\t  // if we cast these lines infinitely in both directions, they intersect here:\n\t  result.x = line1StartX + (a * (line1EndX - line1StartX));\n\t  result.y = line1StartY + (a * (line1EndY - line1StartY));\n\t  /*\n\t  // it is worth noting that this should be the same as:\n\t  x = line2StartX + (b * (line2EndX - line2StartX));\n\t  y = line2StartX + (b * (line2EndY - line2StartY));\n\t  */\n\t  // if line1 is a segment and line2 is infinite, they intersect if:\n\t  if (a > 0 && a < 1) {\n\t    result.onLine1 = true;\n\t  }\n\t  // if line2 is a segment and line1 is infinite, they intersect if:\n\t  if (b > 0 && b < 1) {\n\t    result.onLine2 = true;\n\t  }\n\t  // if line1 and line2 are segments, they intersect if both of the above are true\n\t  return result;\n\t}\n\t\n\tmodule.exports = {\n\t\tdrawPath: drawPath,\n\t\tdrawLine: drawLine,\n\t\tcheckLineIntersection: checkLineIntersection\n\t};\n\n\n/***/ }),\n/* 4 */\n/*!********************************!*\\\n  !*** ./src/flowchart.parse.js ***!\n  \\********************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar FlowChart = __webpack_require__(/*! ./flowchart.chart */ 6);\n\tvar Start = __webpack_require__(/*! ./flowchart.symbol.start */ 14);\n\tvar End = __webpack_require__(/*! ./flowchart.symbol.end */ 11);\n\tvar Operation = __webpack_require__(/*! ./flowchart.symbol.operation */ 13);\n\tvar Database = __webpack_require__(/*! ./flowchart.symbol.database */ 10);\n\tvar InputOutput = __webpack_require__(/*! ./flowchart.symbol.inputoutput */ 12);\n\tvar Subroutine = __webpack_require__(/*! ./flowchart.symbol.subroutine */ 15);\n\tvar Condition = __webpack_require__(/*! ./flowchart.symbol.condition */ 5);\n\tvar Cloud = __webpack_require__(/*! ./flowchart.symbol.cloud */ 9);\n\t\n\tfunction parse(input) {\n\t  input = input || '';\n\t  input = input.trim();\n\t\n\t  var chart = {\n\t    symbols: {},\n\t    start: null,\n\t    drawSVG: function(container, options) {\n\t      var self = this;\n\t      if (this.diagram) {\n\t        this.diagram.clean();\n\t      }\n\t\n\t      var diagram = new FlowChart(container, options);\n\t      this.diagram = diagram;\n\t      var dispSymbols = {};\n\t\n\t      function getDisplaySymbol(s) {\n\t        if (dispSymbols[s.key]) {\n\t          return dispSymbols[s.key];\n\t        }\n\t        switch (s.symbolType) {\n\t          case 'start':\n\t            dispSymbols[s.key] = new Start(diagram, s);\n\t            break;\n\t          case 'end':\n\t            dispSymbols[s.key] = new End(diagram, s);\n\t            break;\n\t          case 'operation':\n\t            dispSymbols[s.key] = new Operation(diagram, s);\n\t            break;\n\t          case 'inputoutput':\n\t            dispSymbols[s.key] = new InputOutput(diagram, s);\n\t            break;\n\t          case 'subroutine':\n\t            dispSymbols[s.key] = new Subroutine(diagram, s);\n\t            break;\n\t          case 'condition':\n\t            dispSymbols[s.key] = new Condition(diagram, s);\n\t            break;\n\t          case 'database':\n\t            dispSymbols[s.key] = new Database(diagram, s);\n\t            break;\n\t          case 'cloud':\n\t            dispSymbols[s.key] = new Cloud(diagram, s);\n\t            break;\n\t          default:\n\t            return new Error('Wrong symbol type!');\n\t        }\n\t\n\t        return dispSymbols[s.key];\n\t      }\n\t\n\t      (function constructChart(s, prevDisp, prev) {\n\t        var dispSymb = getDisplaySymbol(s);\n\t\n\t        if (self.start === s) {\n\t          diagram.startWith(dispSymb);\n\t        } else if (prevDisp && prev && !prevDisp.pathOk) {\n\t          if (prevDisp instanceof(Condition)) {\n\t            if (prev.yes === s) {\n\t              prevDisp.yes(dispSymb);\n\t            }\n\t            if (prev.no === s) {\n\t              prevDisp.no(dispSymb);\n\t            }\n\t          } else {\n\t            prevDisp.then(dispSymb);\n\t          }\n\t        }\n\t\n\t        if (dispSymb.pathOk) {\n\t          return dispSymb;\n\t        }\n\t\n\t        if (dispSymb instanceof(Condition)) {\n\t          if (s.yes) {\n\t            constructChart(s.yes, dispSymb, s);\n\t          }\n\t          if (s.no) {\n\t            constructChart(s.no, dispSymb, s);\n\t          }\n\t        } else if (s.next) {\n\t          constructChart(s.next, dispSymb, s);\n\t        }\n\t\n\t        return dispSymb;\n\t      })(this.start);\n\t\n\t      diagram.render();\n\t    },\n\t    clean: function() {\n\t      this.diagram.clean();\n\t    }\n\t  };\n\t\n\t  var lines = [];\n\t  var prevBreak = 0;\n\t  for (var i0 = 1, i0len = input.length; i0 < i0len; i0++) {\n\t    if(input[i0] === '\\n' && input[i0 - 1] !== '\\\\') {\n\t      var line0 = input.substring(prevBreak, i0);\n\t      prevBreak = i0 + 1;\n\t      lines.push(line0.replace(/\\\\\\n/g, '\\n'));\n\t    }\n\t  }\n\t\n\t  if(prevBreak < input.length) {\n\t    lines.push(input.substr(prevBreak));\n\t  }\n\t\n\t  for (var l = 1, len = lines.length; l < len;) {\n\t    var currentLine = lines[l];\n\t\n\t    if (currentLine.indexOf('->') < 0 && currentLine.indexOf('=>') < 0 && currentLine.indexOf('@>') < 0) {\n\t      lines[l - 1] += '\\n' + currentLine;\n\t      lines.splice(l, 1);\n\t      len--;\n\t    } else {\n\t      l++;\n\t    }\n\t  }\n\t\n\t  function getStyle(s){\n\t    var startIndex = s.indexOf('(') + 1;\n\t    var endIndex = s.indexOf(')');\n\t    if (startIndex >= 0 && endIndex >= 0) {\n\t      return s.substring(startIndex,endIndex);\n\t    }\n\t    return '{}';\n\t  }\n\t\n\t  function getSymbol(s) {\n\t    var startIndex = s.indexOf('(') + 1;\n\t    var endIndex = s.indexOf(')');\n\t    if (startIndex >= 0 && endIndex >= 0) {\n\t      return chart.symbols[s.substring(0, startIndex - 1)];\n\t    }\n\t    return chart.symbols[s];\n\t  }\n\t\n\t  function getNextPath(s) {\n\t    var next = 'next';\n\t    var startIndex = s.indexOf('(') + 1;\n\t    var endIndex = s.indexOf(')');\n\t    if (startIndex >= 0 && endIndex >= 0) {\n\t      next = flowSymb.substring(startIndex, endIndex);\n\t      if (next.indexOf(',') < 0) {\n\t        if (next !== 'yes' && next !== 'no') {\n\t          next = 'next, ' + next;\n\t        }\n\t      }\n\t    }\n\t    return next;\n\t  }\n\t\n\t  while (lines.length > 0) {\n\t    var line = lines.splice(0, 1)[0].trim();\n\t\n\t    if (line.indexOf('=>') >= 0) {\n\t      // definition\n\t      var parts = line.split('=>');\n\t      var symbol = {\n\t        key: parts[0].replace(/\\(.*\\)/, ''),\n\t        symbolType: parts[1],\n\t        text: null,\n\t        link: null,\n\t        target: null,\n\t        flowstate: null,\n\t        lineStyle: {},\n\t        params: {}\n\t      };\n\t\n\t      //parse parameters\n\t      var params = parts[0].match(/\\((.*)\\)/);\n\t      if (params && params.length > 1){\n\t        var entries = params[1].split(',');\n\t        for(var i = 0; i < entries.length; i++) {\n\t          var entry = entries[0].split('=');\n\t          if (entry.length == 2){\n\t            symbol.params[entry[0]] = entry[1];\n\t          }\n\t        }\n\t      }\n\t\n\t      var sub;\n\t\n\t      if (symbol.symbolType.indexOf(': ') >= 0) {\n\t        sub = symbol.symbolType.split(': ');\n\t        symbol.symbolType = sub.shift();\n\t        symbol.text = sub.join(': ');\n\t      }\n\t\n\t      if (symbol.text && symbol.text.indexOf(':>') >= 0) {\n\t        sub = symbol.text.split(':>');\n\t        symbol.text = sub.shift();\n\t        symbol.link = sub.join(':>');\n\t      } else if (symbol.symbolType.indexOf(':>') >= 0) {\n\t        sub = symbol.symbolType.split(':>');\n\t        symbol.symbolType = sub.shift();\n\t        symbol.link = sub.join(':>');\n\t      }\n\t\n\t      if (symbol.symbolType.indexOf('\\n') >= 0) {\n\t        symbol.symbolType = symbol.symbolType.split('\\n')[0];\n\t      }\n\t\n\t      /* adding support for links */\n\t      if (symbol.link) {\n\t        var startIndex = symbol.link.indexOf('[') + 1;\n\t        var endIndex = symbol.link.indexOf(']');\n\t        if (startIndex >= 0 && endIndex >= 0) {\n\t          symbol.target = symbol.link.substring(startIndex, endIndex);\n\t          symbol.link = symbol.link.substring(0, startIndex - 1);\n\t        }\n\t      }\n\t      /* end of link support */\n\t\n\t      /* adding support for flowstates */\n\t      if (symbol.text) {\n\t        if (symbol.text.indexOf('|') >= 0) {\n\t          var txtAndState = symbol.text.split('|');\n\t          symbol.flowstate = txtAndState.pop().trim();\n\t          symbol.text = txtAndState.join('|');\n\t        }\n\t      }\n\t      /* end of flowstate support */\n\t\n\t      chart.symbols[symbol.key] = symbol;\n\t\n\t    } else if (line.indexOf('->') >= 0) {\n\t      // flow\n\t      var flowSymbols = line.split('->');\n\t      for (var i = 0, lenS = flowSymbols.length; i < lenS; i++) {\n\t        var flowSymb = flowSymbols[i];\n\t\n\t        var realSymb = getSymbol(flowSymb);\n\t        var next = getNextPath(flowSymb);\n\t\n\t        var direction = null;\n\t        if (next.indexOf(',') >= 0) {\n\t          var condOpt = next.split(',');\n\t          next = condOpt[0];\n\t          direction = condOpt[1].trim();\n\t        }\n\t\n\t        if (!chart.start) {\n\t          chart.start = realSymb;\n\t        }\n\t\n\t        if (i + 1 < lenS) {\n\t          var nextSymb = flowSymbols[i + 1];\n\t          realSymb[next] = getSymbol(nextSymb);\n\t          realSymb['direction_' + next] = direction;\n\t          direction = null;\n\t        }\n\t      }\n\t    } else if (line.indexOf('@>') >= 0) {\n\t\n\t      // line style\n\t      var lineStyleSymbols = line.split('@>');\n\t      for (var i = 0, lenS = lineStyleSymbols.length; i < lenS; i++) {\n\t\n\t        if ((i+1) != lenS){\n\t          var curSymb = getSymbol(lineStyleSymbols[i]);\n\t          var nextSymb = getSymbol(lineStyleSymbols[i+1])\n\t\n\t          curSymb['lineStyle'][nextSymb.key] = JSON.parse(getStyle(lineStyleSymbols[i+1]));\n\t        }\n\t      }\n\t    }\n\t\n\t  }\n\t  return chart;\n\t}\n\t\n\tmodule.exports = parse;\n\n\n/***/ }),\n/* 5 */\n/*!*******************************************!*\\\n  !*** ./src/flowchart.symbol.condition.js ***!\n  \\*******************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(/*! ./flowchart.symbol */ 2);\n\tvar inherits = __webpack_require__(/*! ./flowchart.helpers */ 1).inherits;\n\tvar drawAPI = __webpack_require__(/*! ./flowchart.functions */ 3);\n\tvar drawPath = drawAPI.drawPath;\n\t\n\tfunction Condition(chart, options) {\n\t  options = options || {};\n\t  Symbol.call(this, chart, options);\n\t  this.textMargin = this.getAttr('text-margin');\n\t  this.yes_direction = 'bottom';\n\t  this.no_direction = 'right';\n\t  this.params = options.params;\n\t  if (options.yes && options.direction_yes && options.no && !options.direction_no) {\n\t    if (options.direction_yes === 'right') {\n\t      this.no_direction = 'bottom';\n\t      this.yes_direction = 'right';\n\t    } else {\n\t      this.no_direction = 'right';\n\t      this.yes_direction = 'bottom';\n\t    }\n\t  } else if (options.yes && !options.direction_yes && options.no && options.direction_no) {\n\t    if (options.direction_no === 'right') {\n\t      this.yes_direction = 'bottom';\n\t      this.no_direction = 'right';\n\t    } else {\n\t      this.yes_direction = 'right';\n\t      this.no_direction = 'bottom';\n\t    }\n\t  } else {\n\t    this.yes_direction = 'bottom';\n\t    this.no_direction = 'right';\n\t  }\n\t\n\t  this.yes_direction = this.yes_direction || 'bottom';\n\t  this.no_direction = this.no_direction || 'right';\n\t\n\t  this.text.attr({\n\t    x: this.textMargin * 2\n\t  });\n\t\n\t  var width = this.text.getBBox().width + 3 * this.textMargin;\n\t  width += width/2;\n\t  var height = this.text.getBBox().height + 2 * this.textMargin;\n\t  height += height/2;\n\t  height = Math.max(width * 0.5, height);\n\t  var startX = width/4;\n\t  var startY = height/4;\n\t\n\t  this.text.attr({\n\t    x: startX + this.textMargin/2\n\t  });\n\t\n\t  var start = {x: startX, y: startY};\n\t  var points = [\n\t    {x: startX - width/4, y: startY + height/4},\n\t    {x: startX - width/4 + width/2, y: startY + height/4 + height/2},\n\t    {x: startX - width/4 + width, y: startY + height/4},\n\t    {x: startX - width/4 + width/2, y: startY + height/4 - height/2},\n\t    {x: startX - width/4, y: startY + height/4}\n\t  ];\n\t\n\t  var symbol = drawPath(chart, start, points);\n\t\n\t  symbol.attr({\n\t    stroke: this.getAttr('element-color'),\n\t    'stroke-width': this.getAttr('line-width'),\n\t    fill: this.getAttr('fill')\n\t  });\n\t  if (options.link) { symbol.attr('href', options.link); }\n\t  if (options.target) { symbol.attr('target', options.target); }\n\t  if (options.key) { symbol.node.id = options.key; }\n\t  symbol.node.setAttribute('class', this.getAttr('class'));\n\t\n\t  this.text.attr({\n\t    y: symbol.getBBox().height/2\n\t  });\n\t\n\t  this.group.push(symbol);\n\t  symbol.insertBefore(this.text);\n\t\n\t  this.initialize();\n\t}\n\tinherits(Condition, Symbol);\n\t\n\tCondition.prototype.render = function() {\n\t\n\t  if (this.yes_direction) {\n\t    this[this.yes_direction + '_symbol'] = this.yes_symbol;\n\t  }\n\t\n\t  if (this.no_direction) {\n\t    this[this.no_direction + '_symbol'] = this.no_symbol;\n\t  }\n\t\n\t  var lineLength = this.getAttr('line-length');\n\t\n\t  if (this.bottom_symbol) {\n\t    var bottomPoint = this.getBottom();\n\t\n\t    if (!this.bottom_symbol.isPositioned) {\n\t      this.bottom_symbol.shiftY(this.getY() + this.height + lineLength);\n\t      this.bottom_symbol.setX(bottomPoint.x - this.bottom_symbol.width/2);\n\t      this.bottom_symbol.isPositioned = true;\n\t\n\t      this.bottom_symbol.render();\n\t    }\n\t  }\n\t\n\t  if (this.right_symbol) {\n\t    var rightPoint = this.getRight();\n\t\n\t    if (!this.right_symbol.isPositioned) {\n\t\n\t      this.right_symbol.setY(rightPoint.y - this.right_symbol.height/2);\n\t      this.right_symbol.shiftX(this.group.getBBox().x + this.width + lineLength);\n\t\n\t      var self = this;\n\t      (function shift() {\n\t        var hasSymbolUnder = false;\n\t        var symb;\n\t        for (var i = 0, len = self.chart.symbols.length; i < len; i++) {\n\t          symb = self.chart.symbols[i];\n\t\n\t          if (!self.params['align-next'] || self.params['align-next'] !== 'no') { \n\t            var diff = Math.abs(symb.getCenter().x - self.right_symbol.getCenter().x);\n\t            if (symb.getCenter().y > self.right_symbol.getCenter().y && diff <= self.right_symbol.width/2) {\n\t              hasSymbolUnder = true;\n\t              break;\n\t            }\n\t          }\n\t        }\n\t\n\t        if (hasSymbolUnder) {\n\t          self.right_symbol.setX(symb.getX() + symb.width + lineLength);\n\t          shift();\n\t        }\n\t      })();\n\t\n\t      this.right_symbol.isPositioned = true;\n\t\n\t      this.right_symbol.render();\n\t    }\n\t  }\n\t};\n\t\n\tCondition.prototype.renderLines = function() {\n\t  if (this.yes_symbol) {\n\t    this.drawLineTo(this.yes_symbol, this.getAttr('yes-text'), this.yes_direction);\n\t  }\n\t\n\t  if (this.no_symbol) {\n\t    this.drawLineTo(this.no_symbol, this.getAttr('no-text'), this.no_direction);\n\t  }\n\t};\n\t\n\tmodule.exports = Condition;\n\n\n/***/ }),\n/* 6 */\n/*!********************************!*\\\n  !*** ./src/flowchart.chart.js ***!\n  \\********************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Raphael = __webpack_require__(/*! raphael */ 17);\n\tvar defaults = __webpack_require__(/*! ./flowchart.helpers */ 1).defaults;\n\tvar defaultOptions = __webpack_require__(/*! ./flowchart.defaults */ 7);\n\tvar Condition = __webpack_require__(/*! ./flowchart.symbol.condition */ 5);\n\t\n\tfunction FlowChart(container, options) {\n\t  options = options || {};\n\t\n\t  this.paper = new Raphael(container);\n\t\n\t  this.options = defaults(options, defaultOptions);\n\t\n\t  this.symbols = [];\n\t  this.lines = [];\n\t  this.start = null;\n\t}\n\t\n\tFlowChart.prototype.handle = function(symbol) {\n\t  if (this.symbols.indexOf(symbol) <= -1) {\n\t    this.symbols.push(symbol);\n\t  }\n\t\n\t  var flowChart = this;\n\t\n\t  if (symbol instanceof(Condition)) {\n\t    symbol.yes = function(nextSymbol) {\n\t      symbol.yes_symbol = nextSymbol;\n\t      if(symbol.no_symbol) {\n\t        symbol.pathOk = true;\n\t      }\n\t      return flowChart.handle(nextSymbol);\n\t    };\n\t    symbol.no = function(nextSymbol) {\n\t      symbol.no_symbol = nextSymbol;\n\t      if(symbol.yes_symbol) {\n\t        symbol.pathOk = true;\n\t      }\n\t      return flowChart.handle(nextSymbol);\n\t    };\n\t  } else {\n\t    symbol.then = function(nextSymbol) {\n\t      symbol.next = nextSymbol;\n\t      symbol.pathOk = true;\n\t      return flowChart.handle(nextSymbol);\n\t    };\n\t  }\n\t\n\t  return symbol;\n\t};\n\t\n\tFlowChart.prototype.startWith = function(symbol) {\n\t  this.start = symbol;\n\t  return this.handle(symbol);\n\t};\n\t\n\tFlowChart.prototype.render = function() {\n\t  var maxWidth = 0,\n\t      maxHeight = 0,\n\t      i = 0,\n\t      len = 0,\n\t      maxX = 0,\n\t      maxY = 0,\n\t      minX = 0,\n\t      minY = 0,\n\t      symbol,\n\t      line;\n\t\n\t  for (i = 0, len = this.symbols.length; i < len; i++) {\n\t    symbol = this.symbols[i];\n\t    if (symbol.width > maxWidth) {\n\t      maxWidth = symbol.width;\n\t    }\n\t    if (symbol.height > maxHeight) {\n\t      maxHeight = symbol.height;\n\t    }\n\t  }\n\t\n\t  for (i = 0, len = this.symbols.length; i < len; i++) {\n\t    symbol = this.symbols[i];\n\t    symbol.shiftX(this.options.x + (maxWidth - symbol.width)/2 + this.options['line-width']);\n\t    symbol.shiftY(this.options.y + (maxHeight - symbol.height)/2 + this.options['line-width']);\n\t  }\n\t\n\t  this.start.render();\n\t  // for (i = 0, len = this.symbols.length; i < len; i++) {\n\t  //   symbol = this.symbols[i];\n\t  //   symbol.render();\n\t  // }\n\t\n\t  for (i = 0, len = this.symbols.length; i < len; i++) {\n\t    symbol = this.symbols[i];\n\t    symbol.renderLines();\n\t  }\n\t\n\t  maxX = this.maxXFromLine;\n\t\n\t  var x;\n\t  var y;\n\t\n\t  for (i = 0, len = this.symbols.length; i < len; i++) {\n\t    symbol = this.symbols[i];\n\t    x = symbol.getX() + symbol.width;\n\t    y = symbol.getY() + symbol.height;\n\t    if (x > maxX) {\n\t      maxX = x;\n\t    }\n\t    if (y > maxY) {\n\t      maxY = y;\n\t    }\n\t  }\n\t\n\t  for (i = 0, len = this.lines.length; i < len; i++) {\n\t    line = this.lines[i].getBBox();\n\t    x = line.x;\n\t    y = line.y;\n\t    var x2 = line.x2;\n\t    var y2 = line.y2;\n\t    if (x < minX) {\n\t      minX = x;\n\t    }\n\t    if (y < minY) {\n\t      minY = y;\n\t    }\n\t    if (x2 > maxX) {\n\t      maxX = x2;\n\t    }\n\t    if (y2 > maxY) {\n\t      maxY = y2;\n\t    }\n\t  }\n\t\n\t  var scale = this.options['scale'];\n\t  var lineWidth = this.options['line-width'];\n\t\n\t  if (minX < 0) minX -= lineWidth;\n\t  if (minY < 0) minY -= lineWidth;\n\t\n\t  var width = maxX + lineWidth - minX;\n\t  var height = maxY + lineWidth - minY;\n\t\n\t  this.paper.setSize(width * scale, height * scale);\n\t  this.paper.setViewBox(minX, minY, width, height, true);\n\t};\n\t\n\tFlowChart.prototype.clean = function() {\n\t  if (this.paper) {\n\t    var paperDom = this.paper.canvas;\n\t    paperDom.parentNode.removeChild(paperDom);\n\t  }\n\t};\n\t\n\tmodule.exports = FlowChart;\n\n\n/***/ }),\n/* 7 */\n/*!***********************************!*\\\n  !*** ./src/flowchart.defaults.js ***!\n  \\***********************************/\n/***/ (function(module, exports) {\n\n\t// defaults\n\tmodule.exports = {\n\t  'x': 0,\n\t  'y': 0,\n\t  'line-width': 3,\n\t  'line-length': 50,\n\t  'text-margin': 10,\n\t  'font-size': 14,\n\t  'font-color': 'black',\n\t  // 'font': 'normal',\n\t  // 'font-family': 'calibri',\n\t  // 'font-weight': 'normal',\n\t  'line-color': 'black',\n\t  'element-color': 'black',\n\t  'fill': 'white',\n\t  'yes-text': 'yes',\n\t  'no-text': 'no',\n\t  'arrow-end': 'block',\n\t  'class': 'flowchart',\n\t  'scale': 1,\n\t  'symbols': {\n\t    'start': {},\n\t    'end': {},\n\t    'condition': {},\n\t    'inputoutput': {},\n\t    'operation': {},\n\t    'subroutine': {},\n\t    'database':{},\n\t    'cloud':{}\n\t  }//,\n\t  // 'flowstate' : {\n\t  //   'past' : { 'fill': '#CCCCCC', 'font-size': 12},\n\t  //   'current' : {'fill': 'yellow', 'font-color': 'red', 'font-weight': 'bold'},\n\t  //   'future' : { 'fill': '#FFFF99'},\n\t  //   'invalid': {'fill': '#444444'}\n\t  // }\n\t};\n\n\n/***/ }),\n/* 8 */\n/*!*******************************!*\\\n  !*** ./src/flowchart.shim.js ***!\n  \\*******************************/\n/***/ (function(module, exports) {\n\n\t// add indexOf to non ECMA-262 standard compliant browsers\n\tif (!Array.prototype.indexOf) {\n\t  Array.prototype.indexOf = function (searchElement /*, fromIndex */ ) {\n\t    \"use strict\";\n\t    if (this === null) {\n\t      throw new TypeError();\n\t    }\n\t    var t = Object(this);\n\t    var len = t.length >>> 0;\n\t    if (len === 0) {\n\t      return -1;\n\t    }\n\t    var n = 0;\n\t    if (arguments.length > 0) {\n\t      n = Number(arguments[1]);\n\t      if (n != n) { // shortcut for verifying if it's NaN\n\t        n = 0;\n\t      } else if (n !== 0 && n != Infinity && n != -Infinity) {\n\t        n = (n > 0 || -1) * Math.floor(Math.abs(n));\n\t      }\n\t    }\n\t    if (n >= len) {\n\t      return -1;\n\t    }\n\t    var k = n >= 0 ? n : Math.max(len - Math.abs(n), 0);\n\t    for (; k < len; k++) {\n\t      if (k in t && t[k] === searchElement) {\n\t        return k;\n\t      }\n\t    }\n\t    return -1;\n\t  };\n\t}\n\t\n\t// add lastIndexOf to non ECMA-262 standard compliant browsers\n\tif (!Array.prototype.lastIndexOf) {\n\t  Array.prototype.lastIndexOf = function(searchElement /*, fromIndex*/) {\n\t    \"use strict\";\n\t    if (this === null) {\n\t      throw new TypeError();\n\t    }\n\t    var t = Object(this);\n\t    var len = t.length >>> 0;\n\t    if (len === 0) {\n\t      return -1;\n\t    }\n\t    var n = len;\n\t    if (arguments.length > 1) {\n\t      n = Number(arguments[1]);\n\t      if (n != n) {\n\t        n = 0;\n\t      } else if (n !== 0 && n != (1 / 0) && n != -(1 / 0)) {\n\t        n = (n > 0 || -1) * Math.floor(Math.abs(n));\n\t      }\n\t    }\n\t    var k = n >= 0 ? Math.min(n, len - 1) : len - Math.abs(n);\n\t    for (; k >= 0; k--) {\n\t      if (k in t && t[k] === searchElement) {\n\t        return k;\n\t      }\n\t    }\n\t    return -1;\n\t  };\n\t}\n\t\n\tif (!String.prototype.trim) {\n\t  String.prototype.trim = function() {\n\t    return this.replace(/^\\s+|\\s+$/g, '');\n\t  };\n\t}\n\n/***/ }),\n/* 9 */\n/*!***************************************!*\\\n  !*** ./src/flowchart.symbol.cloud.js ***!\n  \\***************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(/*! ./flowchart.symbol */ 2);\n\tvar inherits = __webpack_require__(/*! ./flowchart.helpers */ 1).inherits;\n\tvar drawAPI = __webpack_require__(/*! ./flowchart.functions */ 3);\n\tvar drawPath = drawAPI.drawPath;\n\t\n\tfunction Cloud(chart, options) {\n\t  options = options || {};\n\t  Symbol.call(this, chart, options);\n\t\n\t  var originX = 0;\n\t  var originY = 0;\n\t\n\t  this.textMargin = this.getAttr('text-margin');\n\t\n\t  // Set width to box width increased by 4 times the text margin\n\t  var textWidth = this.text.getBBox().width + 2 * this.textMargin;\n\t  // Height set to box height increased by 2 times text margin\n\t  var textHeight = this.text.getBBox().height + 2 * this.textMargin;\n\t  \n\t  var b = 0.75 * textWidth;\n\t  var h = 0.25 * textWidth;\n\t  var ngl = Math.cos(0.3762);\n\t  var coeff = 1.0752;\n\t  var r = coeff * b / 2 / ngl;\n\t  var topBubbleHeight = h/2 + r * (1 - Math.sin(0.3762));\n\t  var r3 = 0.90 * h;\n\t\n\t  var cv1r = textHeight/1.95;\n\t  \n\t  var cv1y1 = originY + topBubbleHeight + textHeight;\n\t  var cv1x = originX + textHeight/2.5;//2/1.025641;//cv1r;\n\t  var cv1y2 = originY + topBubbleHeight;\n\t  \n\t  cv1 = \"M\"+cv1x+\",\"+cv1y1+\" A\"+cv1r+\",\"+cv1r+\" 0 0,1 \"+cv1x+\",\"+cv1y2;\n\t  \n\t  cv2 = \"A\"+r+\",\"+r + \" 0 0,1 \"+(b+cv1x)+\",\"+ (cv1y2- h);\n\t  cv3 = \"A\"+r3+\",\"+r3+ \" 0 0,1 \"+(textWidth+cv1x)+\",\"+(cv1y2);\n\t  cv4 = \"A\"+cv1r+\",\"+cv1r + \" 0 0,1 \"+(textWidth+cv1x)+\",\"+ (cv1y1);\n\t  base = \"H \" + cv1x\n\t  var symbol = chart.paper.path(cv1 + cv2 + cv3 + cv4 + base);\n\t  symbol.attr({\n\t    stroke: this.getAttr('element-color'),\n\t    'stroke-width': this.getAttr('line-width'),\n\t    fill: this.getAttr('fill')\n\t  });\n\t\n\t  this.group.push(symbol);\n\t  \n\t  symbol.insertBefore(this.text);\n\t  \n\t  this.text.attr({\n\t    y: this.group.getBBox().height / 2,\n\t    x: cv1x + this.textMargin\n\t  });\n\t\n\t  this.startRight = textWidth + cv1x;\n\t\n\t  this.initialize();\n\t}\n\tinherits(Cloud, Symbol);\n\t\n\tCloud.prototype.getLeft = function() {\n\t  var x = this.getX() + this.textMargin;\n\t  var y = this.getY() + this.group.getBBox().height/2;\n\t  return {x: x, y: y};\n\t};\n\t\n\tCloud.prototype.getRight = function() {\n\t  var x = this.getX() + this.startRight; // this.group.getBBox().width;// - this.textMargin;\n\t  var y = this.getY() + this.group.getBBox().height/2;\n\t  return {x: x, y: y};\n\t};\n\t\n\tCloud.prototype.getTop = function() {\n\t  var y = this.getY();\n\t  var x = this.getX() + this.width/2;\n\t  return {x: x, y: y};\n\t};\n\t\n\t// Cloud.prototype.getLineLength=function(){\n\t//   return this.getAttr('line-length') * 1.75;\n\t// }\n\t\n\tmodule.exports = Cloud;\n\n\n/***/ }),\n/* 10 */\n/*!******************************************!*\\\n  !*** ./src/flowchart.symbol.database.js ***!\n  \\******************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(/*! ./flowchart.symbol */ 2);\n\tvar inherits = __webpack_require__(/*! ./flowchart.helpers */ 1).inherits;\n\tvar drawAPI = __webpack_require__(/*! ./flowchart.functions */ 3);\n\tvar drawPath = drawAPI.drawPath;\n\t\n\tfunction Database(chart, options) {\n\t  options = options || {};\n\t  Symbol.call(this, chart, options);\n\t  this.textMargin = this.getAttr('text-margin');\n\t\n\t  // Set width to box width increased by 4 times the text margin\n\t  var width = this.text.getBBox().width + 2 * this.textMargin;\n\t  var ellipseHeight = width / 6.5;\n\t  // Height set to box height increased by 2 times text margin\n\t  var height = this.text.getBBox().height + 2 * this.textMargin + ellipseHeight/2;\n\t\n\t  // bottom ellipse will be centered at height of box in y direction\n\t  var bottomEllipse = chart.paper.ellipse(width/2, height + ellipseHeight, width/2, ellipseHeight/2);\n\t  bottomEllipse.attr({\n\t    stroke: this.getAttr('element-color'),\n\t    'stroke-width': this.getAttr('line-width'),\n\t    fill: this.getAttr('fill')\n\t  });\n\t\n\t  var textArea = chart.paper.rect(0, ellipseHeight/2, width, height + ellipseHeight/2); \n\t  textArea.attr({\n\t    stroke: this.getAttr('element-color'),\n\t    'stroke-width': 0,\n\t    fill: this.getAttr('fill')\n\t  });\n\t\n\t  // top ellipse needs to \"get out of the way\" of the text box; it will go completely above the text box\n\t  var topEllipse = chart.paper.ellipse(width/2, ellipseHeight/2, width/2, ellipseHeight/2);\n\t  topEllipse.attr({\n\t    stroke: this.getAttr('element-color'),\n\t    'stroke-width': this.getAttr('line-width'),\n\t    fill: this.getAttr('fill')\n\t  });\n\t\n\t  var leftBorder = drawPath(chart, {x: 0, y: ellipseHeight/2}, [{x:0, y:height + ellipseHeight}]);\n\t  \n\t  leftBorder.attr({\n\t    stroke: this.getAttr('element-color'),\n\t    'stroke-width': this.getAttr('line-width')\n\t  });\n\t\n\t  var rightBorder = drawPath(chart, {x: width, y: ellipseHeight/2}, [{x:width, y:height + ellipseHeight}]);\n\t  \n\t  rightBorder.attr({\n\t    stroke: this.getAttr('element-color'),\n\t    'stroke-width': this.getAttr('line-width')\n\t  });\n\t\n\t  console.debug(this.group.getBBox());\n\t  this.group.push( leftBorder, bottomEllipse, textArea, topEllipse, rightBorder);//(symbol, topEllipse);\n\t  console.debug(this.group.getBBox());\n\t  \n\t  bottomEllipse.insertBefore(this.text);\n\t  textArea.insertBefore(this.text);\n\t  topEllipse.insertBefore(this.text);\n\t  \n\t  this.text.attr({\n\t    y: this.group.getBBox().height / 2 \n\t  });\n\t\n\t  this.initialize();\n\t}\n\tinherits(Database, Symbol);\n\t\n\tDatabase.prototype.getLeft = function() {\n\t  var x = this.getX() + this.textMargin;\n\t  var y = this.getY() + this.group.getBBox().height/2;\n\t  return {x: x, y: y};\n\t};\n\t\n\tDatabase.prototype.getRight = function() {\n\t  var x = this.getX() + this.group.getBBox().width;// - this.textMargin;\n\t  var y = this.getY() + this.group.getBBox().height/2;\n\t  return {x: x, y: y};\n\t};\n\t\n\t\n\tmodule.exports = Database;\n\n\n/***/ }),\n/* 11 */\n/*!*************************************!*\\\n  !*** ./src/flowchart.symbol.end.js ***!\n  \\*************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(/*! ./flowchart.symbol */ 2);\n\tvar inherits = __webpack_require__(/*! ./flowchart.helpers */ 1).inherits;\n\t\n\tfunction End(chart, options) {\n\t  var symbol = chart.paper.rect(0, 0, 0, 0, 20);\n\t  options = options || {};\n\t  options.text = options.text || 'End';\n\t  Symbol.call(this, chart, options, symbol);\n\t}\n\tinherits(End, Symbol);\n\t\n\tmodule.exports = End;\n\n\n/***/ }),\n/* 12 */\n/*!*********************************************!*\\\n  !*** ./src/flowchart.symbol.inputoutput.js ***!\n  \\*********************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(/*! ./flowchart.symbol */ 2);\n\tvar inherits = __webpack_require__(/*! ./flowchart.helpers */ 1).inherits;\n\tvar drawAPI = __webpack_require__(/*! ./flowchart.functions */ 3);\n\tvar drawPath = drawAPI.drawPath;\n\t\n\tfunction InputOutput(chart, options) {\n\t  options = options || {};\n\t  Symbol.call(this, chart, options);\n\t  this.textMargin = this.getAttr('text-margin');\n\t\n\t  this.text.attr({\n\t    x: this.textMargin * 3\n\t  });\n\t\n\t  var width = this.text.getBBox().width + 4 * this.textMargin;\n\t  var height = this.text.getBBox().height + 2 * this.textMargin;\n\t  var startX = this.textMargin;\n\t  var startY = height/2;\n\t\n\t  var start = {x: startX, y: startY};\n\t  var points = [\n\t    {x: startX - this.textMargin, y: height},\n\t    {x: startX - this.textMargin + width, y: height},\n\t    {x: startX - this.textMargin + width + 2 * this.textMargin, y: 0},\n\t    {x: startX - this.textMargin + 2 * this.textMargin, y: 0},\n\t    {x: startX, y: startY}\n\t  ];\n\t\n\t  var symbol = drawPath(chart, start, points);\n\t\n\t  symbol.attr({\n\t    stroke: this.getAttr('element-color'),\n\t    'stroke-width': this.getAttr('line-width'),\n\t    fill: this.getAttr('fill')\n\t  });\n\t  if (options.link) { symbol.attr('href', options.link); }\n\t  if (options.target) { symbol.attr('target', options.target); }\n\t  if (options.key) { symbol.node.id = options.key; }\n\t  symbol.node.setAttribute('class', this.getAttr('class'));\n\t\n\t  this.text.attr({\n\t    y: symbol.getBBox().height/2\n\t  });\n\t\n\t  this.group.push(symbol);\n\t  symbol.insertBefore(this.text);\n\t\n\t  this.initialize();\n\t}\n\tinherits(InputOutput, Symbol);\n\t\n\tInputOutput.prototype.getLeft = function() {\n\t  var y = this.getY() + this.group.getBBox().height/2;\n\t  var x = this.getX() + this.textMargin;\n\t  return {x: x, y: y};\n\t};\n\t\n\tInputOutput.prototype.getRight = function() {\n\t  var y = this.getY() + this.group.getBBox().height/2;\n\t  var x = this.getX() + this.group.getBBox().width - this.textMargin;\n\t  return {x: x, y: y};\n\t};\n\t\n\tmodule.exports = InputOutput;\n\n\n/***/ }),\n/* 13 */\n/*!*******************************************!*\\\n  !*** ./src/flowchart.symbol.operation.js ***!\n  \\*******************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(/*! ./flowchart.symbol */ 2);\n\tvar inherits = __webpack_require__(/*! ./flowchart.helpers */ 1).inherits;\n\t\n\tfunction Operation(chart, options) {\n\t  var symbol = chart.paper.rect(0, 0, 0, 0);\n\t  options = options || {};\n\t  Symbol.call(this, chart, options, symbol);\n\t}\n\tinherits(Operation, Symbol);\n\t\n\tmodule.exports = Operation;\n\n\n/***/ }),\n/* 14 */\n/*!***************************************!*\\\n  !*** ./src/flowchart.symbol.start.js ***!\n  \\***************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(/*! ./flowchart.symbol */ 2);\n\tvar inherits = __webpack_require__(/*! ./flowchart.helpers */ 1).inherits;\n\t\n\tfunction Start(chart, options) {\n\t  var symbol = chart.paper.rect(0, 0, 0, 0, 20);\n\t  options = options || {};\n\t  options.text = options.text || 'Start';\n\t  Symbol.call(this, chart, options, symbol);\n\t}\n\tinherits(Start, Symbol);\n\t\n\tmodule.exports = Start;\n\t\n\t// Start.prototype.render = function() {\n\t//   if (this.next) {\n\t//     var lineLength = this.chart.options.symbols[this.symbolType]['line-length'] || this.chart.options['line-length'];\n\t\n\t//     var bottomPoint = this.getBottom();\n\t//     var topPoint = this.next.getTop();\n\t\n\t//     if (!this.next.isPositioned) {\n\t//       this.next.shiftY(this.getY() + this.height + lineLength);\n\t//       this.next.setX(bottomPoint.x - this.next.width/2);\n\t//       this.next.isPositioned = true;\n\t\n\t//       this.next.render();\n\t//     }\n\t//   }\n\t// };\n\t\n\t// Start.prototype.renderLines = function() {\n\t//   if (this.next) {\n\t//     this.drawLineTo(this.next);\n\t//   }\n\t// };\n\n\n/***/ }),\n/* 15 */\n/*!********************************************!*\\\n  !*** ./src/flowchart.symbol.subroutine.js ***!\n  \\********************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(/*! ./flowchart.symbol */ 2);\n\tvar inherits = __webpack_require__(/*! ./flowchart.helpers */ 1).inherits;\n\t\n\tfunction Subroutine(chart, options) {\n\t  var symbol = chart.paper.rect(0, 0, 0, 0);\n\t  options = options || {};\n\t  Symbol.call(this, chart, options, symbol);\n\t\n\t  symbol.attr({\n\t    width: this.text.getBBox().width + 4 * this.getAttr('text-margin')\n\t  });\n\t\n\t  this.text.attr({\n\t    'x': 2 * this.getAttr('text-margin')\n\t  });\n\t\n\t  var innerWrap = chart.paper.rect(0, 0, 0, 0);\n\t  innerWrap.attr({\n\t    x: this.getAttr('text-margin'),\n\t    stroke: this.getAttr('element-color'),\n\t    'stroke-width': this.getAttr('line-width'),\n\t    width: this.text.getBBox().width + 2 * this.getAttr('text-margin'),\n\t    height: this.text.getBBox().height + 2 * this.getAttr('text-margin'),\n\t    fill: this.getAttr('fill')\n\t  });\n\t  if (options.key) { innerWrap.node.id = options.key + 'i'; }\n\t\n\t  var font = this.getAttr('font');\n\t  var fontF = this.getAttr('font-family');\n\t  var fontW = this.getAttr('font-weight');\n\t\n\t  if (font) innerWrap.attr({ 'font': font });\n\t  if (fontF) innerWrap.attr({ 'font-family': fontF });\n\t  if (fontW) innerWrap.attr({ 'font-weight': fontW });\n\t\n\t  if (options.link) { innerWrap.attr('href', options.link); }\n\t  if (options.target) { innerWrap.attr('target', options.target); }\n\t  this.group.push(innerWrap);\n\t  innerWrap.insertBefore(this.text);\n\t\n\t  this.initialize();\n\t}\n\tinherits(Subroutine, Symbol);\n\t\n\tmodule.exports = Subroutine;\n\n\n/***/ }),\n/* 16 */\n/*!******************************!*\\\n  !*** ./src/jquery-plugin.js ***!\n  \\******************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tif (typeof jQuery != 'undefined') {\n\t\tvar parse = __webpack_require__(/*! ./flowchart.parse */ 4);\n\t\t(function( $ ) {\n\t\t\t$.fn.flowChart = function( options ) {\n\t\t\t\treturn this.each(function() {\n\t\t\t\t\tvar $this = $(this);\n\t\t\t\t\tvar chart = parse($this.text());\n\t\t\t\t\t$this.html('');\n\t\t\t\t\tchart.drawSVG(this, options);\n\t\t\t\t});\n\t\t\t};\n\t\t})(jQuery); // eslint-disable-line\n\t}\n\n\n/***/ }),\n/* 17 */\n/*!**************************!*\\\n  !*** external \"Raphael\" ***!\n  \\**************************/\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_17__;\n\n/***/ })\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// flowchart.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f87f23ba4eaf30bfafe1","require('./src/flowchart.shim');\nvar parse = require('./src/flowchart.parse');\nrequire('./src/jquery-plugin');\n\nvar FlowChart = {\n\tparse: parse\n};\n\nif (typeof window !== 'undefined') {\n\twindow.flowchart = FlowChart;\n}\n\nmodule.exports = FlowChart;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./index.js\n// module id = 0\n// module chunks = 0","function _defaults(options, defaultOptions) {\n  if (!options || typeof options === 'function') {\n    return defaultOptions;\n  }\n\n  var merged = {};\n  for (var attrname in defaultOptions) {\n    merged[attrname] = defaultOptions[attrname];\n  }\n\n  for (attrname in options) {\n    if (options[attrname]) {\n      if (typeof merged[attrname] === 'object') {\n        merged[attrname] = _defaults(merged[attrname], options[attrname]);\n      } else {\n        merged[attrname] = options[attrname];\n      }\n    }\n  }\n  return merged;\n}\n\nfunction _inherits(ctor, superCtor) {\n  if (typeof(Object.create) === 'function') {\n    // implementation from standard node.js 'util' module\n    ctor.super_ = superCtor;\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  } else {\n    // old school shim for old browsers\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n}\n\n// move dependent functions to a container so that\n// they can be overriden easier in no jquery environment (node.js)\nmodule.exports = {\n  defaults: _defaults,\n  inherits: _inherits\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.helpers.js\n// module id = 1\n// module chunks = 0","var drawAPI = require('./flowchart.functions');\nvar drawLine = drawAPI.drawLine;\nvar checkLineIntersection = drawAPI.checkLineIntersection;\n\nfunction Symbol(chart, options, symbol) {\n  this.chart = chart;\n  this.group = this.chart.paper.set();\n  this.symbol = symbol;\n  this.connectedTo = [];\n  this.symbolType = options.symbolType;\n  this.flowstate = (options.flowstate || 'future');\n  this.lineStyle = (options.lineStyle || {});\n  this.key = (options.key || '');\n\n  this.next_direction = options.next && options['direction_next'] ? options['direction_next'] : undefined;\n\n  this.text = this.chart.paper.text(0, 0, options.text);\n  //Raphael does not support the svg group tag so setting the text node id to the symbol node id plus t\n  if (options.key) { this.text.node.id = options.key + 't'; }\n  this.text.node.setAttribute('class', this.getAttr('class') + 't');\n\n  this.text.attr({\n    'text-anchor': 'start',\n    'x'          : this.getAttr('text-margin'),\n    'fill'       : this.getAttr('font-color'),\n    'font-size'  : this.getAttr('font-size')\n  });\n\n  var font  = this.getAttr('font');\n  var fontF = this.getAttr('font-family');\n  var fontW = this.getAttr('font-weight');\n\n  if (font) this.text.attr({ 'font': font });\n  if (fontF) this.text.attr({ 'font-family': fontF });\n  if (fontW) this.text.attr({ 'font-weight': fontW });\n\n  if (options.link) { this.text.attr('href', options.link); }\n  if (options.target) { this.text.attr('target', options.target); }\n\n  var maxWidth = this.getAttr('maxWidth');\n  if (maxWidth) {\n    // using this approach: http://stackoverflow.com/a/3153457/22466\n    var words = options.text.split(' ');\n    var tempText = \"\";\n    for (var i=0, ii=words.length; i<ii; i++) {\n      var word = words[i];\n      this.text.attr(\"text\", tempText + \" \" + word);\n      if (this.text.getBBox().width > maxWidth) {\n        tempText += \"\\n\" + word;\n      } else {\n        tempText += \" \" + word;\n      }\n    }\n    this.text.attr(\"text\", tempText.substring(1));\n  }\n\n  this.group.push(this.text);\n\n  if (symbol) {\n    var tmpMargin = this.getAttr('text-margin');\n\n    symbol.attr({\n      'fill' : this.getAttr('fill'),\n      'stroke' : this.getAttr('element-color'),\n      'stroke-width' : this.getAttr('line-width'),\n      'width' : this.text.getBBox().width + 2 * tmpMargin,\n      'height' : this.text.getBBox().height + 2 * tmpMargin\n    });\n\n    symbol.node.setAttribute('class', this.getAttr('class'));\n\n    if (options.link) { symbol.attr('href', options.link); }\n    if (options.target) { symbol.attr('target', options.target); }\n    if (options.key) { symbol.node.id = options.key; }\n\n    this.group.push(symbol);\n    symbol.insertBefore(this.text);\n\n    this.text.attr({\n      'y': symbol.getBBox().height/2\n    });\n\n    this.initialize();\n  }\n\n}\n\n/* Gets the attribute based on Flowstate, Symbol-Name and default, first found wins */\nSymbol.prototype.getAttr = function(attName) {\n  if (!this.chart) {\n    return undefined;\n  }\n  var opt3 = (this.chart.options) ? this.chart.options[attName] : undefined;\n  var opt2 = (this.chart.options.symbols) ? this.chart.options.symbols[this.symbolType][attName] : undefined;\n  var opt1;\n  if (this.chart.options.flowstate && this.chart.options.flowstate[this.flowstate]) {\n    opt1 = this.chart.options.flowstate[this.flowstate][attName];\n  }\n  return (opt1 || opt2 || opt3);\n};\n\nSymbol.prototype.initialize = function() {\n  this.group.transform('t' + this.getAttr('line-width') + ',' + this.getAttr('line-width'));\n\n  this.width = this.group.getBBox().width;\n  this.height = this.group.getBBox().height;\n};\n\nSymbol.prototype.getCenter = function() {\n  return {x: this.getX() + this.width/2,\n          y: this.getY() + this.height/2};\n};\n\nSymbol.prototype.getX = function() {\n  return this.group.getBBox().x;\n};\n\nSymbol.prototype.getY = function() {\n  return this.group.getBBox().y;\n};\n\nSymbol.prototype.shiftX = function(x) {\n  this.group.transform('t' + (this.getX() + x) + ',' + this.getY());\n};\n\nSymbol.prototype.setX = function(x) {\n  this.group.transform('t' + x + ',' + this.getY());\n};\n\nSymbol.prototype.shiftY = function(y) {\n  this.group.transform('t' + this.getX() + ',' + (this.getY() + y));\n};\n\nSymbol.prototype.setY = function(y) {\n  this.group.transform('t' + this.getX() + ',' + y);\n};\n\nSymbol.prototype.getTop = function() {\n  var y = this.getY();\n  var x = this.getX() + this.width/2;\n  return {x: x, y: y};\n};\n\nSymbol.prototype.getBottom = function() {\n  var y = this.getY() + this.height;\n  var x = this.getX() + this.width/2;\n  return {x: x, y: y};\n};\n\nSymbol.prototype.getLeft = function() {\n  var y = this.getY() + this.group.getBBox().height/2;\n  var x = this.getX();\n  return {x: x, y: y};\n};\n\nSymbol.prototype.getRight = function() {\n  var y = this.getY() + this.group.getBBox().height/2;\n  var x = this.getX() + this.group.getBBox().width;\n  return {x: x, y: y};\n};\n\nSymbol.prototype.getLineLength=function(){\n  return this.getAttr('line-length');\n}\n\nSymbol.prototype.render = function() {\n  if (this.next) {\n\n    var lineLength = this.getLineLength();// this.getAttr('line-length');\n\n    if (this.next_direction === 'right') {\n\n      var rightPoint = this.getRight();\n\n      if (!this.next.isPositioned) {\n\n        this.next.setY(rightPoint.y - this.next.height/2);\n        this.next.shiftX(this.group.getBBox().x + this.width + lineLength);\n\n        var self = this;\n        (function shift() {\n          var hasSymbolUnder = false;\n          var symb;\n          for (var i = 0, len = self.chart.symbols.length; i < len; i++) {\n            symb = self.chart.symbols[i];\n\n            var diff = Math.abs(symb.getCenter().x - self.next.getCenter().x);\n            if (symb.getCenter().y > self.next.getCenter().y && diff <= self.next.width/2) {\n              hasSymbolUnder = true;\n              break;\n            }\n          }\n\n          if (hasSymbolUnder) {\n            self.next.setX(symb.getX() + symb.width + lineLength);\n            shift();\n          }\n        })();\n\n        this.next.isPositioned = true;\n\n        this.next.render();\n      }\n    } else {\n      var bottomPoint = this.getBottom();\n\n      if (!this.next.isPositioned) {\n        this.next.shiftY(this.getY() + this.height + lineLength);\n        this.next.setX(bottomPoint.x - this.next.width/2);\n        this.next.isPositioned = true;\n\n        this.next.render();\n      }\n    }\n  }\n};\n\nSymbol.prototype.renderLines = function() {\n  if (this.next) {\n    if (this.next_direction) {\n      this.drawLineTo(this.next, '', this.next_direction);\n    } else {\n      this.drawLineTo(this.next);\n    }\n  }\n};\n\nSymbol.prototype.drawLineTo = function(symbol, text, origin) {\n  if (this.connectedTo.indexOf(symbol) < 0) {\n    this.connectedTo.push(symbol);\n  }\n\n  var x = this.getCenter().x,\n      y = this.getCenter().y,\n      top = this.getTop(),\n      right = this.getRight(),\n      bottom = this.getBottom(),\n      left = this.getLeft();\n\n  var symbolX = symbol.getCenter().x,\n      symbolY = symbol.getCenter().y,\n      symbolTop = symbol.getTop(),\n      symbolBottom = symbol.getBottom(),\n      symbolRight = symbol.getRight(),\n      symbolLeft = symbol.getLeft();\n\n  var isOnSameColumn = x === symbolX,\n      isOnSameLine = bottom.y > symbolTop.y && top.y < symbolBottom.y, // y === symbolY,\n      isUnder = bottom.y < symbolTop.y, // y < symbolY && symbolTop.y < bottom,\n      isUpper = y > symbolY || this === symbol,\n      isLeft = x > symbolX,\n      isRight = x < symbolX;\n\n  var maxX = 0,\n      line,\n      lineLength = this.getLineLength();// this.getAttr('line-length'),\n      lineWith = this.getAttr('line-width');\n\n  if ((!origin || origin === 'bottom') && isOnSameColumn && isUnder) {\n    line = drawLine(this.chart, bottom, symbolTop, text);\n    this.bottomStart = true;\n    symbol.topEnd = true;\n    maxX = bottom.x;\n  } else if ((!origin || origin === 'right') && isOnSameLine && isRight) {\n    line = drawLine(this.chart, right, symbolLeft, text);\n    this.rightStart = true;\n    symbol.leftEnd = true;\n    maxX = symbolLeft.x;\n  } else if ((!origin || origin === 'left') && isOnSameLine && isLeft) {\n    line = drawLine(this.chart, left, symbolRight, text);\n    this.leftStart = true;\n    symbol.rightEnd = true;\n    maxX = symbolRight.x;\n  } else if ((!origin || origin === 'right') && isOnSameColumn && isUpper) {\n    line = drawLine(this.chart, right, [\n      {x: right.x + lineLength/2, y: right.y},\n      {x: right.x + lineLength/2, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y}\n    ], text);\n    this.rightStart = true;\n    symbol.topEnd = true;\n    maxX = right.x + lineLength/2;\n  } else if ((!origin || origin === 'right') && isOnSameColumn && isUnder) {\n    line = drawLine(this.chart, right, [\n      {x: right.x + lineLength/2, y: right.y},\n      {x: right.x + lineLength/2, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y}\n    ], text);\n    this.rightStart = true;\n    symbol.topEnd = true;\n    maxX = right.x + lineLength/2;\n  } else if ((!origin || origin === 'bottom') && isLeft) {\n    if (this.leftEnd && isUpper) {\n      line = drawLine(this.chart, bottom, [\n        {x: bottom.x, y: bottom.y + lineLength/2},\n        {x: bottom.x + (bottom.x - symbolTop.x)/2, y: bottom.y + lineLength/2},\n        {x: bottom.x + (bottom.x - symbolTop.x)/2, y: symbolTop.y - lineLength/2},\n        {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n        {x: symbolTop.x, y: symbolTop.y}\n      ], text);\n    } else {\n      line = drawLine(this.chart, bottom, [\n        {x: bottom.x, y: symbolTop.y - lineLength/2},\n        {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n        {x: symbolTop.x, y: symbolTop.y}\n      ], text);\n    }\n    this.bottomStart = true;\n    symbol.topEnd = true;\n    maxX = bottom.x + (bottom.x - symbolTop.x)/2;\n  } else if ((!origin || origin === 'bottom') && isRight) {\n    line = drawLine(this.chart, bottom, [\n      {x: bottom.x, y: bottom.y + lineLength/2},\n      {x: bottom.x + (bottom.x - symbolTop.x)/2, y: bottom.y + lineLength/2},\n      {x: bottom.x + (bottom.x - symbolTop.x)/2, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y}\n    ], text);\n    this.bottomStart = true;\n    symbol.topEnd = true;\n    maxX = bottom.x + (bottom.x - symbolTop.x)/2;\n  } else if ((origin && origin === 'right') && isLeft) {\n    line = drawLine(this.chart, right, [\n      {x: right.x + lineLength/2, y: right.y},\n      {x: right.x + lineLength/2, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y}\n    ], text);\n    this.rightStart = true;\n    symbol.topEnd = true;\n    maxX = right.x + lineLength/2;\n  } else if ((origin && origin === 'right') && isRight) {\n    line = drawLine(this.chart, right, [\n      {x: symbolTop.x, y: right.y},\n      {x: symbolTop.x, y: symbolTop.y}\n    ], text);\n    this.rightStart = true;\n    symbol.topEnd = true;\n    maxX = right.x + lineLength/2;\n  } else if ((origin && origin === 'bottom') && isOnSameColumn && isUpper) {\n    line = drawLine(this.chart, bottom, [\n      {x: bottom.x, y: bottom.y + lineLength/2},\n      {x: right.x + lineLength/2, y: bottom.y + lineLength/2},\n      {x: right.x + lineLength/2, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y}\n    ], text);\n    this.bottomStart = true;\n    symbol.topEnd = true;\n    maxX = bottom.x + lineLength/2;\n  } else if ((origin === 'left') && isOnSameColumn && isUpper) {\n    var diffX = left.x - lineLength/2;\n    if (symbolLeft.x < left.x) {\n      diffX = symbolLeft.x - lineLength/2;\n    }\n    line = drawLine(this.chart, left, [\n      {x: diffX, y: left.y},\n      {x: diffX, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y}\n    ], text);\n    this.leftStart = true;\n    symbol.topEnd = true;\n    maxX = left.x;\n  } else if ((origin === 'left')) {\n    line = drawLine(this.chart, left, [\n      {x: symbolTop.x + (left.x - symbolTop.x)/ 2, y: left.y},\n      {x: symbolTop.x + (left.x - symbolTop.x)/ 2, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y}\n    ], text);\n    this.leftStart = true;\n    symbol.topEnd = true;\n    maxX = left.x;\n  }\n\n  //update line style\n  if (this.lineStyle[symbol.key] && line){\n      line.attr( this.lineStyle[symbol.key]);\n  }\n\n  if (line) {\n    for (var l = 0, llen = this.chart.lines.length; l < llen; l++) {\n      var otherLine = this.chart.lines[l];\n      var len;\n\n      var ePath = otherLine.attr('path'),\n          lPath = line.attr('path');\n\n      for (var iP = 0, lenP = ePath.length - 1; iP < lenP; iP++) {\n        var newPath = [];\n        newPath.push(['M', ePath[iP][1], ePath[iP][2]]);\n        newPath.push(['L', ePath[iP + 1][1], ePath[iP + 1][2]]);\n\n        var line1_from_x = newPath[0][1];\n        var line1_from_y = newPath[0][2];\n        var line1_to_x = newPath[1][1];\n        var line1_to_y = newPath[1][2];\n\n        for (var lP = 0, lenlP = lPath.length - 1; lP < lenlP; lP++) {\n          var newLinePath = [];\n          newLinePath.push(['M', lPath[lP][1], lPath[lP][2]]);\n          newLinePath.push(['L', lPath[lP + 1][1], lPath[lP + 1][2]]);\n\n          var line2_from_x = newLinePath[0][1];\n          var line2_from_y = newLinePath[0][2];\n          var line2_to_x = newLinePath[1][1];\n          var line2_to_y = newLinePath[1][2];\n\n          var res = checkLineIntersection(line1_from_x, line1_from_y, line1_to_x, line1_to_y, line2_from_x, line2_from_y, line2_to_x, line2_to_y);\n          if (res.onLine1 && res.onLine2) {\n\n            var newSegment;\n            if (line2_from_y === line2_to_y) {\n              if (line2_from_x > line2_to_x) {\n                newSegment = ['L', res.x + lineWith * 2,  line2_from_y];\n                lPath.splice(lP + 1, 0, newSegment);\n                newSegment = ['C', res.x + lineWith * 2,  line2_from_y, res.x, line2_from_y - lineWith * 4, res.x - lineWith * 2, line2_from_y];\n                lPath.splice(lP + 2, 0, newSegment);\n                line.attr('path', lPath);\n              } else {\n                newSegment = ['L', res.x - lineWith * 2,  line2_from_y];\n                lPath.splice(lP + 1, 0, newSegment);\n                newSegment = ['C', res.x - lineWith * 2,  line2_from_y, res.x, line2_from_y - lineWith * 4, res.x + lineWith * 2, line2_from_y];\n                lPath.splice(lP + 2, 0, newSegment);\n                line.attr('path', lPath);\n              }\n            } else {\n              if (line2_from_y > line2_to_y) {\n                newSegment = ['L', line2_from_x, res.y + lineWith * 2];\n                lPath.splice(lP + 1, 0, newSegment);\n                newSegment = ['C', line2_from_x, res.y + lineWith * 2, line2_from_x + lineWith * 4, res.y, line2_from_x, res.y - lineWith * 2];\n                lPath.splice(lP + 2, 0, newSegment);\n                line.attr('path', lPath);\n              } else {\n                newSegment = ['L', line2_from_x, res.y - lineWith * 2];\n                lPath.splice(lP + 1, 0, newSegment);\n                newSegment = ['C', line2_from_x, res.y - lineWith * 2, line2_from_x + lineWith * 4, res.y, line2_from_x, res.y + lineWith * 2];\n                lPath.splice(lP + 2, 0, newSegment);\n                line.attr('path', lPath);\n              }\n            }\n\n            lP += 2;\n            len += 2;\n          }\n        }\n      }\n    }\n\n    this.chart.lines.push(line);\n  }\n\n  if (!this.chart.maxXFromLine || (this.chart.maxXFromLine && maxX > this.chart.maxXFromLine)) {\n    this.chart.maxXFromLine = maxX;\n  }\n};\n\nmodule.exports = Symbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.symbol.js\n// module id = 2\n// module chunks = 0","function drawPath(chart, location, points) {\n  var i, len;\n  var path = 'M{0},{1}';\n  for (i = 2, len = 2 * points.length + 2; i < len; i+=2) {\n    path += ' L{' + i + '},{' + (i + 1) + '}';\n  }\n  var pathValues = [location.x, location.y];\n  for (i = 0, len = points.length; i < len; i++) {\n    pathValues.push(points[i].x);\n    pathValues.push(points[i].y);\n  }\n  var symbol = chart.paper.path(path, pathValues);\n  symbol.attr('stroke', chart.options['element-color']);\n  symbol.attr('stroke-width', chart.options['line-width']);\n\n  var font = chart.options.font;\n  var fontF = chart.options['font-family'];\n  var fontW = chart.options['font-weight'];\n\n  if (font) symbol.attr({ 'font': font });\n  if (fontF) symbol.attr({ 'font-family': fontF });\n  if (fontW) symbol.attr({ 'font-weight': fontW });\n\n  return symbol;\n}\n\nfunction drawLine(chart, from, to, text) {\n  var i, len;\n\n  if (Object.prototype.toString.call(to) !== '[object Array]') {\n    to = [to];\n  }\n\n  var path = 'M{0},{1}';\n  for (i = 2, len = 2 * to.length + 2; i < len; i+=2) {\n    path += ' L{' + i + '},{' + (i + 1) + '}';\n  }\n  var pathValues = [from.x, from.y];\n  for (i = 0, len = to.length; i < len; i++) {\n    pathValues.push(to[i].x);\n    pathValues.push(to[i].y);\n  }\n\n  var line = chart.paper.path(path, pathValues);\n  line.attr({\n    stroke: chart.options['line-color'],\n    'stroke-width': chart.options['line-width'],\n    'arrow-end': chart.options['arrow-end']\n  });\n\n  var font = chart.options.font;\n  var fontF = chart.options['font-family'];\n  var fontW = chart.options['font-weight'];\n\n  if (font) line.attr({ 'font': font });\n  if (fontF) line.attr({ 'font-family': fontF });\n  if (fontW) line.attr({ 'font-weight': fontW });\n\n  if (text) {\n\n    var centerText = false;\n\n    var textPath = chart.paper.text(0, 0, text);\n\n    var isHorizontal = false;\n    var firstTo = to[0];\n\n    if (from.y === firstTo.y) {\n      isHorizontal = true;\n    }\n\n    var x = 0,\n        y = 0;\n\n    if (centerText) {\n      if (from.x > firstTo.x) {\n        x = from.x - (from.x - firstTo.x)/2;\n      } else {\n        x = firstTo.x - (firstTo.x - from.x)/2;\n      }\n\n      if (from.y > firstTo.y) {\n        y = from.y - (from.y - firstTo.y)/2;\n      } else {\n        y = firstTo.y - (firstTo.y - from.y)/2;\n      }\n\n      if (isHorizontal) {\n        x -= textPath.getBBox().width/2;\n        y -= chart.options['text-margin'];\n      } else {\n        x += chart.options['text-margin'];\n        y -= textPath.getBBox().height/2;\n      }\n    } else {\n      x = from.x;\n      y = from.y;\n\n      if (isHorizontal) {\n        x += chart.options['text-margin']/2;\n        y -= chart.options['text-margin'];\n      } else {\n        x += chart.options['text-margin']/2;\n        y += chart.options['text-margin'];\n      }\n    }\n\n    textPath.attr({\n      'text-anchor': 'start',\n      'font-size': chart.options['font-size'],\n      'fill': chart.options['font-color'],\n      x: x,\n      y: y\n    });\n\n    if (font) textPath.attr({ 'font': font });\n    if (fontF) textPath.attr({ 'font-family': fontF });\n    if (fontW) textPath.attr({ 'font-weight': fontW });\n  }\n\n  return line;\n}\n\nfunction checkLineIntersection(line1StartX, line1StartY, line1EndX, line1EndY, line2StartX, line2StartY, line2EndX, line2EndY) {\n  // if the lines intersect, the result contains the x and y of the intersection (treating the lines as infinite) and booleans for whether line segment 1 or line segment 2 contain the point\n  var denominator, a, b, numerator1, numerator2, result = {\n    x: null,\n    y: null,\n    onLine1: false,\n    onLine2: false\n  };\n  denominator = ((line2EndY - line2StartY) * (line1EndX - line1StartX)) - ((line2EndX - line2StartX) * (line1EndY - line1StartY));\n  if (denominator === 0) {\n    return result;\n  }\n  a = line1StartY - line2StartY;\n  b = line1StartX - line2StartX;\n  numerator1 = ((line2EndX - line2StartX) * a) - ((line2EndY - line2StartY) * b);\n  numerator2 = ((line1EndX - line1StartX) * a) - ((line1EndY - line1StartY) * b);\n  a = numerator1 / denominator;\n  b = numerator2 / denominator;\n\n  // if we cast these lines infinitely in both directions, they intersect here:\n  result.x = line1StartX + (a * (line1EndX - line1StartX));\n  result.y = line1StartY + (a * (line1EndY - line1StartY));\n  /*\n  // it is worth noting that this should be the same as:\n  x = line2StartX + (b * (line2EndX - line2StartX));\n  y = line2StartX + (b * (line2EndY - line2StartY));\n  */\n  // if line1 is a segment and line2 is infinite, they intersect if:\n  if (a > 0 && a < 1) {\n    result.onLine1 = true;\n  }\n  // if line2 is a segment and line1 is infinite, they intersect if:\n  if (b > 0 && b < 1) {\n    result.onLine2 = true;\n  }\n  // if line1 and line2 are segments, they intersect if both of the above are true\n  return result;\n}\n\nmodule.exports = {\n\tdrawPath: drawPath,\n\tdrawLine: drawLine,\n\tcheckLineIntersection: checkLineIntersection\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.functions.js\n// module id = 3\n// module chunks = 0","var FlowChart = require('./flowchart.chart');\nvar Start = require('./flowchart.symbol.start');\nvar End = require('./flowchart.symbol.end');\nvar Operation = require('./flowchart.symbol.operation');\nvar Database = require('./flowchart.symbol.database');\nvar InputOutput = require('./flowchart.symbol.inputoutput');\nvar Subroutine = require('./flowchart.symbol.subroutine');\nvar Condition = require('./flowchart.symbol.condition');\nvar Cloud = require('./flowchart.symbol.cloud');\n\nfunction parse(input) {\n  input = input || '';\n  input = input.trim();\n\n  var chart = {\n    symbols: {},\n    start: null,\n    drawSVG: function(container, options) {\n      var self = this;\n      if (this.diagram) {\n        this.diagram.clean();\n      }\n\n      var diagram = new FlowChart(container, options);\n      this.diagram = diagram;\n      var dispSymbols = {};\n\n      function getDisplaySymbol(s) {\n        if (dispSymbols[s.key]) {\n          return dispSymbols[s.key];\n        }\n        switch (s.symbolType) {\n          case 'start':\n            dispSymbols[s.key] = new Start(diagram, s);\n            break;\n          case 'end':\n            dispSymbols[s.key] = new End(diagram, s);\n            break;\n          case 'operation':\n            dispSymbols[s.key] = new Operation(diagram, s);\n            break;\n          case 'inputoutput':\n            dispSymbols[s.key] = new InputOutput(diagram, s);\n            break;\n          case 'subroutine':\n            dispSymbols[s.key] = new Subroutine(diagram, s);\n            break;\n          case 'condition':\n            dispSymbols[s.key] = new Condition(diagram, s);\n            break;\n          case 'database':\n            dispSymbols[s.key] = new Database(diagram, s);\n            break;\n          case 'cloud':\n            dispSymbols[s.key] = new Cloud(diagram, s);\n            break;\n          default:\n            return new Error('Wrong symbol type!');\n        }\n\n        return dispSymbols[s.key];\n      }\n\n      (function constructChart(s, prevDisp, prev) {\n        var dispSymb = getDisplaySymbol(s);\n\n        if (self.start === s) {\n          diagram.startWith(dispSymb);\n        } else if (prevDisp && prev && !prevDisp.pathOk) {\n          if (prevDisp instanceof(Condition)) {\n            if (prev.yes === s) {\n              prevDisp.yes(dispSymb);\n            }\n            if (prev.no === s) {\n              prevDisp.no(dispSymb);\n            }\n          } else {\n            prevDisp.then(dispSymb);\n          }\n        }\n\n        if (dispSymb.pathOk) {\n          return dispSymb;\n        }\n\n        if (dispSymb instanceof(Condition)) {\n          if (s.yes) {\n            constructChart(s.yes, dispSymb, s);\n          }\n          if (s.no) {\n            constructChart(s.no, dispSymb, s);\n          }\n        } else if (s.next) {\n          constructChart(s.next, dispSymb, s);\n        }\n\n        return dispSymb;\n      })(this.start);\n\n      diagram.render();\n    },\n    clean: function() {\n      this.diagram.clean();\n    }\n  };\n\n  var lines = [];\n  var prevBreak = 0;\n  for (var i0 = 1, i0len = input.length; i0 < i0len; i0++) {\n    if(input[i0] === '\\n' && input[i0 - 1] !== '\\\\') {\n      var line0 = input.substring(prevBreak, i0);\n      prevBreak = i0 + 1;\n      lines.push(line0.replace(/\\\\\\n/g, '\\n'));\n    }\n  }\n\n  if(prevBreak < input.length) {\n    lines.push(input.substr(prevBreak));\n  }\n\n  for (var l = 1, len = lines.length; l < len;) {\n    var currentLine = lines[l];\n\n    if (currentLine.indexOf('->') < 0 && currentLine.indexOf('=>') < 0 && currentLine.indexOf('@>') < 0) {\n      lines[l - 1] += '\\n' + currentLine;\n      lines.splice(l, 1);\n      len--;\n    } else {\n      l++;\n    }\n  }\n\n  function getStyle(s){\n    var startIndex = s.indexOf('(') + 1;\n    var endIndex = s.indexOf(')');\n    if (startIndex >= 0 && endIndex >= 0) {\n      return s.substring(startIndex,endIndex);\n    }\n    return '{}';\n  }\n\n  function getSymbol(s) {\n    var startIndex = s.indexOf('(') + 1;\n    var endIndex = s.indexOf(')');\n    if (startIndex >= 0 && endIndex >= 0) {\n      return chart.symbols[s.substring(0, startIndex - 1)];\n    }\n    return chart.symbols[s];\n  }\n\n  function getNextPath(s) {\n    var next = 'next';\n    var startIndex = s.indexOf('(') + 1;\n    var endIndex = s.indexOf(')');\n    if (startIndex >= 0 && endIndex >= 0) {\n      next = flowSymb.substring(startIndex, endIndex);\n      if (next.indexOf(',') < 0) {\n        if (next !== 'yes' && next !== 'no') {\n          next = 'next, ' + next;\n        }\n      }\n    }\n    return next;\n  }\n\n  while (lines.length > 0) {\n    var line = lines.splice(0, 1)[0].trim();\n\n    if (line.indexOf('=>') >= 0) {\n      // definition\n      var parts = line.split('=>');\n      var symbol = {\n        key: parts[0].replace(/\\(.*\\)/, ''),\n        symbolType: parts[1],\n        text: null,\n        link: null,\n        target: null,\n        flowstate: null,\n        lineStyle: {},\n        params: {}\n      };\n\n      //parse parameters\n      var params = parts[0].match(/\\((.*)\\)/);\n      if (params && params.length > 1){\n        var entries = params[1].split(',');\n        for(var i = 0; i < entries.length; i++) {\n          var entry = entries[0].split('=');\n          if (entry.length == 2){\n            symbol.params[entry[0]] = entry[1];\n          }\n        }\n      }\n\n      var sub;\n\n      if (symbol.symbolType.indexOf(': ') >= 0) {\n        sub = symbol.symbolType.split(': ');\n        symbol.symbolType = sub.shift();\n        symbol.text = sub.join(': ');\n      }\n\n      if (symbol.text && symbol.text.indexOf(':>') >= 0) {\n        sub = symbol.text.split(':>');\n        symbol.text = sub.shift();\n        symbol.link = sub.join(':>');\n      } else if (symbol.symbolType.indexOf(':>') >= 0) {\n        sub = symbol.symbolType.split(':>');\n        symbol.symbolType = sub.shift();\n        symbol.link = sub.join(':>');\n      }\n\n      if (symbol.symbolType.indexOf('\\n') >= 0) {\n        symbol.symbolType = symbol.symbolType.split('\\n')[0];\n      }\n\n      /* adding support for links */\n      if (symbol.link) {\n        var startIndex = symbol.link.indexOf('[') + 1;\n        var endIndex = symbol.link.indexOf(']');\n        if (startIndex >= 0 && endIndex >= 0) {\n          symbol.target = symbol.link.substring(startIndex, endIndex);\n          symbol.link = symbol.link.substring(0, startIndex - 1);\n        }\n      }\n      /* end of link support */\n\n      /* adding support for flowstates */\n      if (symbol.text) {\n        if (symbol.text.indexOf('|') >= 0) {\n          var txtAndState = symbol.text.split('|');\n          symbol.flowstate = txtAndState.pop().trim();\n          symbol.text = txtAndState.join('|');\n        }\n      }\n      /* end of flowstate support */\n\n      chart.symbols[symbol.key] = symbol;\n\n    } else if (line.indexOf('->') >= 0) {\n      // flow\n      var flowSymbols = line.split('->');\n      for (var i = 0, lenS = flowSymbols.length; i < lenS; i++) {\n        var flowSymb = flowSymbols[i];\n\n        var realSymb = getSymbol(flowSymb);\n        var next = getNextPath(flowSymb);\n\n        var direction = null;\n        if (next.indexOf(',') >= 0) {\n          var condOpt = next.split(',');\n          next = condOpt[0];\n          direction = condOpt[1].trim();\n        }\n\n        if (!chart.start) {\n          chart.start = realSymb;\n        }\n\n        if (i + 1 < lenS) {\n          var nextSymb = flowSymbols[i + 1];\n          realSymb[next] = getSymbol(nextSymb);\n          realSymb['direction_' + next] = direction;\n          direction = null;\n        }\n      }\n    } else if (line.indexOf('@>') >= 0) {\n\n      // line style\n      var lineStyleSymbols = line.split('@>');\n      for (var i = 0, lenS = lineStyleSymbols.length; i < lenS; i++) {\n\n        if ((i+1) != lenS){\n          var curSymb = getSymbol(lineStyleSymbols[i]);\n          var nextSymb = getSymbol(lineStyleSymbols[i+1])\n\n          curSymb['lineStyle'][nextSymb.key] = JSON.parse(getStyle(lineStyleSymbols[i+1]));\n        }\n      }\n    }\n\n  }\n  return chart;\n}\n\nmodule.exports = parse;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.parse.js\n// module id = 4\n// module chunks = 0","var Symbol = require('./flowchart.symbol');\nvar inherits = require('./flowchart.helpers').inherits;\nvar drawAPI = require('./flowchart.functions');\nvar drawPath = drawAPI.drawPath;\n\nfunction Condition(chart, options) {\n  options = options || {};\n  Symbol.call(this, chart, options);\n  this.textMargin = this.getAttr('text-margin');\n  this.yes_direction = 'bottom';\n  this.no_direction = 'right';\n  this.params = options.params;\n  if (options.yes && options.direction_yes && options.no && !options.direction_no) {\n    if (options.direction_yes === 'right') {\n      this.no_direction = 'bottom';\n      this.yes_direction = 'right';\n    } else {\n      this.no_direction = 'right';\n      this.yes_direction = 'bottom';\n    }\n  } else if (options.yes && !options.direction_yes && options.no && options.direction_no) {\n    if (options.direction_no === 'right') {\n      this.yes_direction = 'bottom';\n      this.no_direction = 'right';\n    } else {\n      this.yes_direction = 'right';\n      this.no_direction = 'bottom';\n    }\n  } else {\n    this.yes_direction = 'bottom';\n    this.no_direction = 'right';\n  }\n\n  this.yes_direction = this.yes_direction || 'bottom';\n  this.no_direction = this.no_direction || 'right';\n\n  this.text.attr({\n    x: this.textMargin * 2\n  });\n\n  var width = this.text.getBBox().width + 3 * this.textMargin;\n  width += width/2;\n  var height = this.text.getBBox().height + 2 * this.textMargin;\n  height += height/2;\n  height = Math.max(width * 0.5, height);\n  var startX = width/4;\n  var startY = height/4;\n\n  this.text.attr({\n    x: startX + this.textMargin/2\n  });\n\n  var start = {x: startX, y: startY};\n  var points = [\n    {x: startX - width/4, y: startY + height/4},\n    {x: startX - width/4 + width/2, y: startY + height/4 + height/2},\n    {x: startX - width/4 + width, y: startY + height/4},\n    {x: startX - width/4 + width/2, y: startY + height/4 - height/2},\n    {x: startX - width/4, y: startY + height/4}\n  ];\n\n  var symbol = drawPath(chart, start, points);\n\n  symbol.attr({\n    stroke: this.getAttr('element-color'),\n    'stroke-width': this.getAttr('line-width'),\n    fill: this.getAttr('fill')\n  });\n  if (options.link) { symbol.attr('href', options.link); }\n  if (options.target) { symbol.attr('target', options.target); }\n  if (options.key) { symbol.node.id = options.key; }\n  symbol.node.setAttribute('class', this.getAttr('class'));\n\n  this.text.attr({\n    y: symbol.getBBox().height/2\n  });\n\n  this.group.push(symbol);\n  symbol.insertBefore(this.text);\n\n  this.initialize();\n}\ninherits(Condition, Symbol);\n\nCondition.prototype.render = function() {\n\n  if (this.yes_direction) {\n    this[this.yes_direction + '_symbol'] = this.yes_symbol;\n  }\n\n  if (this.no_direction) {\n    this[this.no_direction + '_symbol'] = this.no_symbol;\n  }\n\n  var lineLength = this.getAttr('line-length');\n\n  if (this.bottom_symbol) {\n    var bottomPoint = this.getBottom();\n\n    if (!this.bottom_symbol.isPositioned) {\n      this.bottom_symbol.shiftY(this.getY() + this.height + lineLength);\n      this.bottom_symbol.setX(bottomPoint.x - this.bottom_symbol.width/2);\n      this.bottom_symbol.isPositioned = true;\n\n      this.bottom_symbol.render();\n    }\n  }\n\n  if (this.right_symbol) {\n    var rightPoint = this.getRight();\n\n    if (!this.right_symbol.isPositioned) {\n\n      this.right_symbol.setY(rightPoint.y - this.right_symbol.height/2);\n      this.right_symbol.shiftX(this.group.getBBox().x + this.width + lineLength);\n\n      var self = this;\n      (function shift() {\n        var hasSymbolUnder = false;\n        var symb;\n        for (var i = 0, len = self.chart.symbols.length; i < len; i++) {\n          symb = self.chart.symbols[i];\n\n          if (!self.params['align-next'] || self.params['align-next'] !== 'no') { \n            var diff = Math.abs(symb.getCenter().x - self.right_symbol.getCenter().x);\n            if (symb.getCenter().y > self.right_symbol.getCenter().y && diff <= self.right_symbol.width/2) {\n              hasSymbolUnder = true;\n              break;\n            }\n          }\n        }\n\n        if (hasSymbolUnder) {\n          self.right_symbol.setX(symb.getX() + symb.width + lineLength);\n          shift();\n        }\n      })();\n\n      this.right_symbol.isPositioned = true;\n\n      this.right_symbol.render();\n    }\n  }\n};\n\nCondition.prototype.renderLines = function() {\n  if (this.yes_symbol) {\n    this.drawLineTo(this.yes_symbol, this.getAttr('yes-text'), this.yes_direction);\n  }\n\n  if (this.no_symbol) {\n    this.drawLineTo(this.no_symbol, this.getAttr('no-text'), this.no_direction);\n  }\n};\n\nmodule.exports = Condition;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.symbol.condition.js\n// module id = 5\n// module chunks = 0","var Raphael = require('raphael');\nvar defaults = require('./flowchart.helpers').defaults;\nvar defaultOptions = require('./flowchart.defaults');\nvar Condition = require('./flowchart.symbol.condition');\n\nfunction FlowChart(container, options) {\n  options = options || {};\n\n  this.paper = new Raphael(container);\n\n  this.options = defaults(options, defaultOptions);\n\n  this.symbols = [];\n  this.lines = [];\n  this.start = null;\n}\n\nFlowChart.prototype.handle = function(symbol) {\n  if (this.symbols.indexOf(symbol) <= -1) {\n    this.symbols.push(symbol);\n  }\n\n  var flowChart = this;\n\n  if (symbol instanceof(Condition)) {\n    symbol.yes = function(nextSymbol) {\n      symbol.yes_symbol = nextSymbol;\n      if(symbol.no_symbol) {\n        symbol.pathOk = true;\n      }\n      return flowChart.handle(nextSymbol);\n    };\n    symbol.no = function(nextSymbol) {\n      symbol.no_symbol = nextSymbol;\n      if(symbol.yes_symbol) {\n        symbol.pathOk = true;\n      }\n      return flowChart.handle(nextSymbol);\n    };\n  } else {\n    symbol.then = function(nextSymbol) {\n      symbol.next = nextSymbol;\n      symbol.pathOk = true;\n      return flowChart.handle(nextSymbol);\n    };\n  }\n\n  return symbol;\n};\n\nFlowChart.prototype.startWith = function(symbol) {\n  this.start = symbol;\n  return this.handle(symbol);\n};\n\nFlowChart.prototype.render = function() {\n  var maxWidth = 0,\n      maxHeight = 0,\n      i = 0,\n      len = 0,\n      maxX = 0,\n      maxY = 0,\n      minX = 0,\n      minY = 0,\n      symbol,\n      line;\n\n  for (i = 0, len = this.symbols.length; i < len; i++) {\n    symbol = this.symbols[i];\n    if (symbol.width > maxWidth) {\n      maxWidth = symbol.width;\n    }\n    if (symbol.height > maxHeight) {\n      maxHeight = symbol.height;\n    }\n  }\n\n  for (i = 0, len = this.symbols.length; i < len; i++) {\n    symbol = this.symbols[i];\n    symbol.shiftX(this.options.x + (maxWidth - symbol.width)/2 + this.options['line-width']);\n    symbol.shiftY(this.options.y + (maxHeight - symbol.height)/2 + this.options['line-width']);\n  }\n\n  this.start.render();\n  // for (i = 0, len = this.symbols.length; i < len; i++) {\n  //   symbol = this.symbols[i];\n  //   symbol.render();\n  // }\n\n  for (i = 0, len = this.symbols.length; i < len; i++) {\n    symbol = this.symbols[i];\n    symbol.renderLines();\n  }\n\n  maxX = this.maxXFromLine;\n\n  var x;\n  var y;\n\n  for (i = 0, len = this.symbols.length; i < len; i++) {\n    symbol = this.symbols[i];\n    x = symbol.getX() + symbol.width;\n    y = symbol.getY() + symbol.height;\n    if (x > maxX) {\n      maxX = x;\n    }\n    if (y > maxY) {\n      maxY = y;\n    }\n  }\n\n  for (i = 0, len = this.lines.length; i < len; i++) {\n    line = this.lines[i].getBBox();\n    x = line.x;\n    y = line.y;\n    var x2 = line.x2;\n    var y2 = line.y2;\n    if (x < minX) {\n      minX = x;\n    }\n    if (y < minY) {\n      minY = y;\n    }\n    if (x2 > maxX) {\n      maxX = x2;\n    }\n    if (y2 > maxY) {\n      maxY = y2;\n    }\n  }\n\n  var scale = this.options['scale'];\n  var lineWidth = this.options['line-width'];\n\n  if (minX < 0) minX -= lineWidth;\n  if (minY < 0) minY -= lineWidth;\n\n  var width = maxX + lineWidth - minX;\n  var height = maxY + lineWidth - minY;\n\n  this.paper.setSize(width * scale, height * scale);\n  this.paper.setViewBox(minX, minY, width, height, true);\n};\n\nFlowChart.prototype.clean = function() {\n  if (this.paper) {\n    var paperDom = this.paper.canvas;\n    paperDom.parentNode.removeChild(paperDom);\n  }\n};\n\nmodule.exports = FlowChart;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.chart.js\n// module id = 6\n// module chunks = 0","// defaults\nmodule.exports = {\n  'x': 0,\n  'y': 0,\n  'line-width': 3,\n  'line-length': 50,\n  'text-margin': 10,\n  'font-size': 14,\n  'font-color': 'black',\n  // 'font': 'normal',\n  // 'font-family': 'calibri',\n  // 'font-weight': 'normal',\n  'line-color': 'black',\n  'element-color': 'black',\n  'fill': 'white',\n  'yes-text': 'yes',\n  'no-text': 'no',\n  'arrow-end': 'block',\n  'class': 'flowchart',\n  'scale': 1,\n  'symbols': {\n    'start': {},\n    'end': {},\n    'condition': {},\n    'inputoutput': {},\n    'operation': {},\n    'subroutine': {},\n    'database':{},\n    'cloud':{}\n  }//,\n  // 'flowstate' : {\n  //   'past' : { 'fill': '#CCCCCC', 'font-size': 12},\n  //   'current' : {'fill': 'yellow', 'font-color': 'red', 'font-weight': 'bold'},\n  //   'future' : { 'fill': '#FFFF99'},\n  //   'invalid': {'fill': '#444444'}\n  // }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.defaults.js\n// module id = 7\n// module chunks = 0","// add indexOf to non ECMA-262 standard compliant browsers\nif (!Array.prototype.indexOf) {\n  Array.prototype.indexOf = function (searchElement /*, fromIndex */ ) {\n    \"use strict\";\n    if (this === null) {\n      throw new TypeError();\n    }\n    var t = Object(this);\n    var len = t.length >>> 0;\n    if (len === 0) {\n      return -1;\n    }\n    var n = 0;\n    if (arguments.length > 0) {\n      n = Number(arguments[1]);\n      if (n != n) { // shortcut for verifying if it's NaN\n        n = 0;\n      } else if (n !== 0 && n != Infinity && n != -Infinity) {\n        n = (n > 0 || -1) * Math.floor(Math.abs(n));\n      }\n    }\n    if (n >= len) {\n      return -1;\n    }\n    var k = n >= 0 ? n : Math.max(len - Math.abs(n), 0);\n    for (; k < len; k++) {\n      if (k in t && t[k] === searchElement) {\n        return k;\n      }\n    }\n    return -1;\n  };\n}\n\n// add lastIndexOf to non ECMA-262 standard compliant browsers\nif (!Array.prototype.lastIndexOf) {\n  Array.prototype.lastIndexOf = function(searchElement /*, fromIndex*/) {\n    \"use strict\";\n    if (this === null) {\n      throw new TypeError();\n    }\n    var t = Object(this);\n    var len = t.length >>> 0;\n    if (len === 0) {\n      return -1;\n    }\n    var n = len;\n    if (arguments.length > 1) {\n      n = Number(arguments[1]);\n      if (n != n) {\n        n = 0;\n      } else if (n !== 0 && n != (1 / 0) && n != -(1 / 0)) {\n        n = (n > 0 || -1) * Math.floor(Math.abs(n));\n      }\n    }\n    var k = n >= 0 ? Math.min(n, len - 1) : len - Math.abs(n);\n    for (; k >= 0; k--) {\n      if (k in t && t[k] === searchElement) {\n        return k;\n      }\n    }\n    return -1;\n  };\n}\n\nif (!String.prototype.trim) {\n  String.prototype.trim = function() {\n    return this.replace(/^\\s+|\\s+$/g, '');\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.shim.js\n// module id = 8\n// module chunks = 0","var Symbol = require('./flowchart.symbol');\nvar inherits = require('./flowchart.helpers').inherits;\nvar drawAPI = require('./flowchart.functions');\nvar drawPath = drawAPI.drawPath;\n\nfunction Cloud(chart, options) {\n  options = options || {};\n  Symbol.call(this, chart, options);\n\n  var originX = 0;\n  var originY = 0;\n\n  this.textMargin = this.getAttr('text-margin');\n\n  // Set width to box width increased by 4 times the text margin\n  var textWidth = this.text.getBBox().width + 2 * this.textMargin;\n  // Height set to box height increased by 2 times text margin\n  var textHeight = this.text.getBBox().height + 2 * this.textMargin;\n  \n  var b = 0.75 * textWidth;\n  var h = 0.25 * textWidth;\n  var ngl = Math.cos(0.3762);\n  var coeff = 1.0752;\n  var r = coeff * b / 2 / ngl;\n  var topBubbleHeight = h/2 + r * (1 - Math.sin(0.3762));\n  var r3 = 0.90 * h;\n\n  var cv1r = textHeight/1.95;\n  \n  var cv1y1 = originY + topBubbleHeight + textHeight;\n  var cv1x = originX + textHeight/2.5;//2/1.025641;//cv1r;\n  var cv1y2 = originY + topBubbleHeight;\n  \n  cv1 = \"M\"+cv1x+\",\"+cv1y1+\" A\"+cv1r+\",\"+cv1r+\" 0 0,1 \"+cv1x+\",\"+cv1y2;\n  \n  cv2 = \"A\"+r+\",\"+r + \" 0 0,1 \"+(b+cv1x)+\",\"+ (cv1y2- h);\n  cv3 = \"A\"+r3+\",\"+r3+ \" 0 0,1 \"+(textWidth+cv1x)+\",\"+(cv1y2);\n  cv4 = \"A\"+cv1r+\",\"+cv1r + \" 0 0,1 \"+(textWidth+cv1x)+\",\"+ (cv1y1);\n  base = \"H \" + cv1x\n  var symbol = chart.paper.path(cv1 + cv2 + cv3 + cv4 + base);\n  symbol.attr({\n    stroke: this.getAttr('element-color'),\n    'stroke-width': this.getAttr('line-width'),\n    fill: this.getAttr('fill')\n  });\n\n  this.group.push(symbol);\n  \n  symbol.insertBefore(this.text);\n  \n  this.text.attr({\n    y: this.group.getBBox().height / 2,\n    x: cv1x + this.textMargin\n  });\n\n  this.startRight = textWidth + cv1x;\n\n  this.initialize();\n}\ninherits(Cloud, Symbol);\n\nCloud.prototype.getLeft = function() {\n  var x = this.getX() + this.textMargin;\n  var y = this.getY() + this.group.getBBox().height/2;\n  return {x: x, y: y};\n};\n\nCloud.prototype.getRight = function() {\n  var x = this.getX() + this.startRight; // this.group.getBBox().width;// - this.textMargin;\n  var y = this.getY() + this.group.getBBox().height/2;\n  return {x: x, y: y};\n};\n\nCloud.prototype.getTop = function() {\n  var y = this.getY();\n  var x = this.getX() + this.width/2;\n  return {x: x, y: y};\n};\n\n// Cloud.prototype.getLineLength=function(){\n//   return this.getAttr('line-length') * 1.75;\n// }\n\nmodule.exports = Cloud;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.symbol.cloud.js\n// module id = 9\n// module chunks = 0","var Symbol = require('./flowchart.symbol');\nvar inherits = require('./flowchart.helpers').inherits;\nvar drawAPI = require('./flowchart.functions');\nvar drawPath = drawAPI.drawPath;\n\nfunction Database(chart, options) {\n  options = options || {};\n  Symbol.call(this, chart, options);\n  this.textMargin = this.getAttr('text-margin');\n\n  // Set width to box width increased by 4 times the text margin\n  var width = this.text.getBBox().width + 2 * this.textMargin;\n  var ellipseHeight = width / 6.5;\n  // Height set to box height increased by 2 times text margin\n  var height = this.text.getBBox().height + 2 * this.textMargin + ellipseHeight/2;\n\n  // bottom ellipse will be centered at height of box in y direction\n  var bottomEllipse = chart.paper.ellipse(width/2, height + ellipseHeight, width/2, ellipseHeight/2);\n  bottomEllipse.attr({\n    stroke: this.getAttr('element-color'),\n    'stroke-width': this.getAttr('line-width'),\n    fill: this.getAttr('fill')\n  });\n\n  var textArea = chart.paper.rect(0, ellipseHeight/2, width, height + ellipseHeight/2); \n  textArea.attr({\n    stroke: this.getAttr('element-color'),\n    'stroke-width': 0,\n    fill: this.getAttr('fill')\n  });\n\n  // top ellipse needs to \"get out of the way\" of the text box; it will go completely above the text box\n  var topEllipse = chart.paper.ellipse(width/2, ellipseHeight/2, width/2, ellipseHeight/2);\n  topEllipse.attr({\n    stroke: this.getAttr('element-color'),\n    'stroke-width': this.getAttr('line-width'),\n    fill: this.getAttr('fill')\n  });\n\n  var leftBorder = drawPath(chart, {x: 0, y: ellipseHeight/2}, [{x:0, y:height + ellipseHeight}]);\n  \n  leftBorder.attr({\n    stroke: this.getAttr('element-color'),\n    'stroke-width': this.getAttr('line-width')\n  });\n\n  var rightBorder = drawPath(chart, {x: width, y: ellipseHeight/2}, [{x:width, y:height + ellipseHeight}]);\n  \n  rightBorder.attr({\n    stroke: this.getAttr('element-color'),\n    'stroke-width': this.getAttr('line-width')\n  });\n\n  console.debug(this.group.getBBox());\n  this.group.push( leftBorder, bottomEllipse, textArea, topEllipse, rightBorder);//(symbol, topEllipse);\n  console.debug(this.group.getBBox());\n  \n  bottomEllipse.insertBefore(this.text);\n  textArea.insertBefore(this.text);\n  topEllipse.insertBefore(this.text);\n  \n  this.text.attr({\n    y: this.group.getBBox().height / 2 \n  });\n\n  this.initialize();\n}\ninherits(Database, Symbol);\n\nDatabase.prototype.getLeft = function() {\n  var x = this.getX() + this.textMargin;\n  var y = this.getY() + this.group.getBBox().height/2;\n  return {x: x, y: y};\n};\n\nDatabase.prototype.getRight = function() {\n  var x = this.getX() + this.group.getBBox().width;// - this.textMargin;\n  var y = this.getY() + this.group.getBBox().height/2;\n  return {x: x, y: y};\n};\n\n\nmodule.exports = Database;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.symbol.database.js\n// module id = 10\n// module chunks = 0","var Symbol = require('./flowchart.symbol');\nvar inherits = require('./flowchart.helpers').inherits;\n\nfunction End(chart, options) {\n  var symbol = chart.paper.rect(0, 0, 0, 0, 20);\n  options = options || {};\n  options.text = options.text || 'End';\n  Symbol.call(this, chart, options, symbol);\n}\ninherits(End, Symbol);\n\nmodule.exports = End;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.symbol.end.js\n// module id = 11\n// module chunks = 0","var Symbol = require('./flowchart.symbol');\nvar inherits = require('./flowchart.helpers').inherits;\nvar drawAPI = require('./flowchart.functions');\nvar drawPath = drawAPI.drawPath;\n\nfunction InputOutput(chart, options) {\n  options = options || {};\n  Symbol.call(this, chart, options);\n  this.textMargin = this.getAttr('text-margin');\n\n  this.text.attr({\n    x: this.textMargin * 3\n  });\n\n  var width = this.text.getBBox().width + 4 * this.textMargin;\n  var height = this.text.getBBox().height + 2 * this.textMargin;\n  var startX = this.textMargin;\n  var startY = height/2;\n\n  var start = {x: startX, y: startY};\n  var points = [\n    {x: startX - this.textMargin, y: height},\n    {x: startX - this.textMargin + width, y: height},\n    {x: startX - this.textMargin + width + 2 * this.textMargin, y: 0},\n    {x: startX - this.textMargin + 2 * this.textMargin, y: 0},\n    {x: startX, y: startY}\n  ];\n\n  var symbol = drawPath(chart, start, points);\n\n  symbol.attr({\n    stroke: this.getAttr('element-color'),\n    'stroke-width': this.getAttr('line-width'),\n    fill: this.getAttr('fill')\n  });\n  if (options.link) { symbol.attr('href', options.link); }\n  if (options.target) { symbol.attr('target', options.target); }\n  if (options.key) { symbol.node.id = options.key; }\n  symbol.node.setAttribute('class', this.getAttr('class'));\n\n  this.text.attr({\n    y: symbol.getBBox().height/2\n  });\n\n  this.group.push(symbol);\n  symbol.insertBefore(this.text);\n\n  this.initialize();\n}\ninherits(InputOutput, Symbol);\n\nInputOutput.prototype.getLeft = function() {\n  var y = this.getY() + this.group.getBBox().height/2;\n  var x = this.getX() + this.textMargin;\n  return {x: x, y: y};\n};\n\nInputOutput.prototype.getRight = function() {\n  var y = this.getY() + this.group.getBBox().height/2;\n  var x = this.getX() + this.group.getBBox().width - this.textMargin;\n  return {x: x, y: y};\n};\n\nmodule.exports = InputOutput;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.symbol.inputoutput.js\n// module id = 12\n// module chunks = 0","var Symbol = require('./flowchart.symbol');\nvar inherits = require('./flowchart.helpers').inherits;\n\nfunction Operation(chart, options) {\n  var symbol = chart.paper.rect(0, 0, 0, 0);\n  options = options || {};\n  Symbol.call(this, chart, options, symbol);\n}\ninherits(Operation, Symbol);\n\nmodule.exports = Operation;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.symbol.operation.js\n// module id = 13\n// module chunks = 0","var Symbol = require('./flowchart.symbol');\nvar inherits = require('./flowchart.helpers').inherits;\n\nfunction Start(chart, options) {\n  var symbol = chart.paper.rect(0, 0, 0, 0, 20);\n  options = options || {};\n  options.text = options.text || 'Start';\n  Symbol.call(this, chart, options, symbol);\n}\ninherits(Start, Symbol);\n\nmodule.exports = Start;\n\n// Start.prototype.render = function() {\n//   if (this.next) {\n//     var lineLength = this.chart.options.symbols[this.symbolType]['line-length'] || this.chart.options['line-length'];\n\n//     var bottomPoint = this.getBottom();\n//     var topPoint = this.next.getTop();\n\n//     if (!this.next.isPositioned) {\n//       this.next.shiftY(this.getY() + this.height + lineLength);\n//       this.next.setX(bottomPoint.x - this.next.width/2);\n//       this.next.isPositioned = true;\n\n//       this.next.render();\n//     }\n//   }\n// };\n\n// Start.prototype.renderLines = function() {\n//   if (this.next) {\n//     this.drawLineTo(this.next);\n//   }\n// };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.symbol.start.js\n// module id = 14\n// module chunks = 0","var Symbol = require('./flowchart.symbol');\nvar inherits = require('./flowchart.helpers').inherits;\n\nfunction Subroutine(chart, options) {\n  var symbol = chart.paper.rect(0, 0, 0, 0);\n  options = options || {};\n  Symbol.call(this, chart, options, symbol);\n\n  symbol.attr({\n    width: this.text.getBBox().width + 4 * this.getAttr('text-margin')\n  });\n\n  this.text.attr({\n    'x': 2 * this.getAttr('text-margin')\n  });\n\n  var innerWrap = chart.paper.rect(0, 0, 0, 0);\n  innerWrap.attr({\n    x: this.getAttr('text-margin'),\n    stroke: this.getAttr('element-color'),\n    'stroke-width': this.getAttr('line-width'),\n    width: this.text.getBBox().width + 2 * this.getAttr('text-margin'),\n    height: this.text.getBBox().height + 2 * this.getAttr('text-margin'),\n    fill: this.getAttr('fill')\n  });\n  if (options.key) { innerWrap.node.id = options.key + 'i'; }\n\n  var font = this.getAttr('font');\n  var fontF = this.getAttr('font-family');\n  var fontW = this.getAttr('font-weight');\n\n  if (font) innerWrap.attr({ 'font': font });\n  if (fontF) innerWrap.attr({ 'font-family': fontF });\n  if (fontW) innerWrap.attr({ 'font-weight': fontW });\n\n  if (options.link) { innerWrap.attr('href', options.link); }\n  if (options.target) { innerWrap.attr('target', options.target); }\n  this.group.push(innerWrap);\n  innerWrap.insertBefore(this.text);\n\n  this.initialize();\n}\ninherits(Subroutine, Symbol);\n\nmodule.exports = Subroutine;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.symbol.subroutine.js\n// module id = 15\n// module chunks = 0","if (typeof jQuery != 'undefined') {\n\tvar parse = require('./flowchart.parse');\n\t(function( $ ) {\n\t\t$.fn.flowChart = function( options ) {\n\t\t\treturn this.each(function() {\n\t\t\t\tvar $this = $(this);\n\t\t\t\tvar chart = parse($this.text());\n\t\t\t\t$this.html('');\n\t\t\t\tchart.drawSVG(this, options);\n\t\t\t});\n\t\t};\n\t})(jQuery); // eslint-disable-line\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/jquery-plugin.js\n// module id = 16\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_17__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"Raphael\"\n// module id = 17\n// module chunks = 0"],"sourceRoot":""}
{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///flowchart.js","webpack:///webpack/bootstrap 6b54f9d606f4661d660e","webpack:///./index.js","webpack:///./src/flowchart.helpers.js","webpack:///./src/flowchart.symbol.js","webpack:///./src/flowchart.functions.js","webpack:///./src/flowchart.parse.js","webpack:///./src/flowchart.symbol.condition.js","webpack:///./src/flowchart.chart.js","webpack:///./src/flowchart.defaults.js","webpack:///./src/flowchart.shim.js","webpack:///./src/flowchart.symbol.cloud.js","webpack:///./src/flowchart.symbol.database.js","webpack:///./src/flowchart.symbol.end.js","webpack:///./src/flowchart.symbol.inputoutput.js","webpack:///./src/flowchart.symbol.operation.js","webpack:///./src/flowchart.symbol.start.js","webpack:///./src/flowchart.symbol.subroutine.js","webpack:///./src/jquery-plugin.js","webpack:///external \"Raphael\""],"names":["root","factory","exports","module","require","define","amd","a","i","this","__WEBPACK_EXTERNAL_MODULE_17__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","parse","FlowChart","window","flowchart","_defaults","options","defaultOptions","merged","attrname","_inherits","ctor","superCtor","Object","super_","prototype","create","constructor","value","enumerable","writable","configurable","TempCtor","defaults","inherits","Symbol","chart","symbol","group","paper","set","connectedTo","symbolType","flowstate","lineStyle","key","next_direction","next","undefined","text","node","setAttribute","getAttr","attr","text-anchor","x","fill","font-size","font","fontF","fontW","font-family","font-weight","link","target","maxWidth","words","split","tempText","ii","length","word","getBBox","width","substring","push","tmpMargin","stroke","stroke-width","height","insertBefore","y","initialize","drawAPI","drawLine","checkLineIntersection","attName","opt1","opt3","opt2","symbols","transform","getCenter","getX","getY","shiftX","setX","shiftY","setY","getTop","getBottom","getLeft","getRight","getLineLength","render","lineLength","rightPoint","isPositioned","self","shift","symb","hasSymbolUnder","len","diff","Math","abs","bottomPoint","renderLines","drawLineTo","origin","indexOf","line","top","right","bottom","left","symbolX","symbolY","symbolTop","symbolBottom","symbolRight","symbolLeft","isOnSameColumn","isOnSameLine","isUnder","isUpper","isLeft","isRight","maxX","lineWith","rightStart","topEnd","bottomStart","diffX","leftStart","leftEnd","rightEnd","l","llen","lines","otherLine","ePath","lPath","iP","lenP","newPath","line1_from_x","line1_from_y","line1_to_x","line1_to_y","lP","lenlP","newLinePath","line2_from_x","line2_from_y","line2_to_x","line2_to_y","res","onLine1","onLine2","newSegment","splice","maxXFromLine","drawPath","location","points","path","pathValues","from","to","toString","arrow-end","centerText","textPath","isHorizontal","firstTo","line1StartX","line1StartY","line1EndX","line1EndY","line2StartX","line2StartY","line2EndX","line2EndY","denominator","b","numerator1","numerator2","result","input","getStyle","s","startIndex","endIndex","getSymbol","getNextPath","flowSymb","trim","start","drawSVG","container","getDisplaySymbol","dispSymbols","Start","diagram","End","Operation","InputOutput","Subroutine","Condition","Database","Cloud","Error","clean","constructChart","prevDisp","prev","dispSymb","startWith","pathOk","yes","no","then","prevBreak","i0","i0len","line0","replace","substr","currentLine","parts","params","match","entries","entry","sub","join","txtAndState","pop","flowSymbols","lenS","realSymb","direction","condOpt","nextSymb","lineStyleSymbols","curSymb","JSON","textMargin","yes_direction","no_direction","direction_yes","direction_no","max","startX","startY","yes_symbol","no_symbol","bottom_symbol","right_symbol","Raphael","handle","flowChart","nextSymbol","maxHeight","maxY","minX","minY","x2","y2","scale","lineWidth","setSize","setViewBox","paperDom","canvas","parentNode","removeChild","line-width","line-length","text-margin","font-color","line-color","element-color","yes-text","no-text","class","end","condition","inputoutput","operation","subroutine","database","cloud","Array","searchElement","TypeError","t","n","arguments","Number","Infinity","floor","k","lastIndexOf","min","String","originX","originY","textWidth","textHeight","h","ngl","cos","coeff","r","topBubbleHeight","sin","r3","cv1r","cv1y1","cv1x","cv1y2","cv1","cv2","cv3","cv4","base","startRight","ellipseHeight","bottomEllipse","ellipse","textArea","rect","topEllipse","leftBorder","rightBorder","console","debug","innerWrap","jQuery","$","fn","each","$this","html"],"mappings":"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","file":"flowchart.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"Raphael\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"Raphael\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"Raphael\")) : factory(root[\"Raphael\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_17__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"Raphael\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"Raphael\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"Raphael\")) : factory(root[\"Raphael\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_17__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/*!******************!*\\\n  !*** ./index.js ***!\n  \\******************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(/*! ./src/flowchart.shim */ 8);\n\tvar parse = __webpack_require__(/*! ./src/flowchart.parse */ 4);\n\t__webpack_require__(/*! ./src/jquery-plugin */ 16);\n\t\n\tvar FlowChart = {\n\t\tparse: parse\n\t};\n\t\n\tif (typeof window !== 'undefined') {\n\t\twindow.flowchart = FlowChart;\n\t}\n\t\n\tmodule.exports = FlowChart;\n\n\n/***/ }),\n/* 1 */\n/*!**********************************!*\\\n  !*** ./src/flowchart.helpers.js ***!\n  \\**********************************/\n/***/ (function(module, exports) {\n\n\tfunction _defaults(options, defaultOptions) {\n\t  if (!options || typeof options === 'function') {\n\t    return defaultOptions;\n\t  }\n\t\n\t  var merged = {};\n\t  for (var attrname in defaultOptions) {\n\t    merged[attrname] = defaultOptions[attrname];\n\t  }\n\t\n\t  for (attrname in options) {\n\t    if (options[attrname]) {\n\t      if (typeof merged[attrname] === 'object') {\n\t        merged[attrname] = _defaults(merged[attrname], options[attrname]);\n\t      } else {\n\t        merged[attrname] = options[attrname];\n\t      }\n\t    }\n\t  }\n\t  return merged;\n\t}\n\t\n\tfunction _inherits(ctor, superCtor) {\n\t  if (typeof(Object.create) === 'function') {\n\t    // implementation from standard node.js 'util' module\n\t    ctor.super_ = superCtor;\n\t    ctor.prototype = Object.create(superCtor.prototype, {\n\t      constructor: {\n\t        value: ctor,\n\t        enumerable: false,\n\t        writable: true,\n\t        configurable: true\n\t      }\n\t    });\n\t  } else {\n\t    // old school shim for old browsers\n\t    ctor.super_ = superCtor;\n\t    var TempCtor = function () {};\n\t    TempCtor.prototype = superCtor.prototype;\n\t    ctor.prototype = new TempCtor();\n\t    ctor.prototype.constructor = ctor;\n\t  }\n\t}\n\t\n\t// move dependent functions to a container so that\n\t// they can be overriden easier in no jquery environment (node.js)\n\tmodule.exports = {\n\t  defaults: _defaults,\n\t  inherits: _inherits\n\t};\n\n\n/***/ }),\n/* 2 */\n/*!*********************************!*\\\n  !*** ./src/flowchart.symbol.js ***!\n  \\*********************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar drawAPI = __webpack_require__(/*! ./flowchart.functions */ 3);\n\tvar drawLine = drawAPI.drawLine;\n\tvar checkLineIntersection = drawAPI.checkLineIntersection;\n\t\n\tfunction Symbol(chart, options, symbol) {\n\t  this.chart = chart;\n\t  this.group = this.chart.paper.set();\n\t  this.symbol = symbol;\n\t  this.connectedTo = [];\n\t  this.symbolType = options.symbolType;\n\t  this.flowstate = (options.flowstate || 'future');\n\t  this.lineStyle = (options.lineStyle || {});\n\t  this.key = (options.key || '');\n\t\n\t  this.next_direction = options.next && options['direction_next'] ? options['direction_next'] : undefined;\n\t\n\t  this.text = this.chart.paper.text(0, 0, options.text);\n\t  //Raphael does not support the svg group tag so setting the text node id to the symbol node id plus t\n\t  if (options.key) { this.text.node.id = options.key + 't'; }\n\t  this.text.node.setAttribute('class', this.getAttr('class') + 't');\n\t\n\t  this.text.attr({\n\t    'text-anchor': 'start',\n\t    'x'          : this.getAttr('text-margin'),\n\t    'fill'       : this.getAttr('font-color'),\n\t    'font-size'  : this.getAttr('font-size')\n\t  });\n\t\n\t  var font  = this.getAttr('font');\n\t  var fontF = this.getAttr('font-family');\n\t  var fontW = this.getAttr('font-weight');\n\t\n\t  if (font) this.text.attr({ 'font': font });\n\t  if (fontF) this.text.attr({ 'font-family': fontF });\n\t  if (fontW) this.text.attr({ 'font-weight': fontW });\n\t\n\t  if (options.link) { this.text.attr('href', options.link); }\n\t  if (options.target) { this.text.attr('target', options.target); }\n\t\n\t  var maxWidth = this.getAttr('maxWidth');\n\t  if (maxWidth) {\n\t    // using this approach: http://stackoverflow.com/a/3153457/22466\n\t    var words = options.text.split(' ');\n\t    var tempText = \"\";\n\t    for (var i=0, ii=words.length; i<ii; i++) {\n\t      var word = words[i];\n\t      this.text.attr(\"text\", tempText + \" \" + word);\n\t      if (this.text.getBBox().width > maxWidth) {\n\t        tempText += \"\\n\" + word;\n\t      } else {\n\t        tempText += \" \" + word;\n\t      }\n\t    }\n\t    this.text.attr(\"text\", tempText.substring(1));\n\t  }\n\t\n\t  this.group.push(this.text);\n\t\n\t  if (symbol) {\n\t    var tmpMargin = this.getAttr('text-margin');\n\t\n\t    symbol.attr({\n\t      'fill' : this.getAttr('fill'),\n\t      'stroke' : this.getAttr('element-color'),\n\t      'stroke-width' : this.getAttr('line-width'),\n\t      'width' : this.text.getBBox().width + 2 * tmpMargin,\n\t      'height' : this.text.getBBox().height + 2 * tmpMargin\n\t    });\n\t\n\t    symbol.node.setAttribute('class', this.getAttr('class'));\n\t\n\t    if (options.link) { symbol.attr('href', options.link); }\n\t    if (options.target) { symbol.attr('target', options.target); }\n\t    if (options.key) { symbol.node.id = options.key; }\n\t\n\t    this.group.push(symbol);\n\t    symbol.insertBefore(this.text);\n\t\n\t    this.text.attr({\n\t      'y': symbol.getBBox().height/2\n\t    });\n\t\n\t    this.initialize();\n\t  }\n\t\n\t}\n\t\n\t/* Gets the attribute based on Flowstate, Symbol-Name and default, first found wins */\n\tSymbol.prototype.getAttr = function(attName) {\n\t  if (!this.chart) {\n\t    return undefined;\n\t  }\n\t  var opt3 = (this.chart.options) ? this.chart.options[attName] : undefined;\n\t  var opt2 = (this.chart.options.symbols) ? this.chart.options.symbols[this.symbolType][attName] : undefined;\n\t  var opt1;\n\t  if (this.chart.options.flowstate && this.chart.options.flowstate[this.flowstate]) {\n\t    opt1 = this.chart.options.flowstate[this.flowstate][attName];\n\t  }\n\t  return (opt1 || opt2 || opt3);\n\t};\n\t\n\tSymbol.prototype.initialize = function() {\n\t  this.group.transform('t' + this.getAttr('line-width') + ',' + this.getAttr('line-width'));\n\t\n\t  this.width = this.group.getBBox().width;\n\t  this.height = this.group.getBBox().height;\n\t};\n\t\n\tSymbol.prototype.getCenter = function() {\n\t  return {x: this.getX() + this.width/2,\n\t          y: this.getY() + this.height/2};\n\t};\n\t\n\tSymbol.prototype.getX = function() {\n\t  return this.group.getBBox().x;\n\t};\n\t\n\tSymbol.prototype.getY = function() {\n\t  return this.group.getBBox().y;\n\t};\n\t\n\tSymbol.prototype.shiftX = function(x) {\n\t  this.group.transform('t' + (this.getX() + x) + ',' + this.getY());\n\t};\n\t\n\tSymbol.prototype.setX = function(x) {\n\t  this.group.transform('t' + x + ',' + this.getY());\n\t};\n\t\n\tSymbol.prototype.shiftY = function(y) {\n\t  this.group.transform('t' + this.getX() + ',' + (this.getY() + y));\n\t};\n\t\n\tSymbol.prototype.setY = function(y) {\n\t  this.group.transform('t' + this.getX() + ',' + y);\n\t};\n\t\n\tSymbol.prototype.getTop = function() {\n\t  var y = this.getY();\n\t  var x = this.getX() + this.width/2;\n\t  return {x: x, y: y};\n\t};\n\t\n\tSymbol.prototype.getBottom = function() {\n\t  var y = this.getY() + this.height;\n\t  var x = this.getX() + this.width/2;\n\t  return {x: x, y: y};\n\t};\n\t\n\tSymbol.prototype.getLeft = function() {\n\t  var y = this.getY() + this.group.getBBox().height/2;\n\t  var x = this.getX();\n\t  return {x: x, y: y};\n\t};\n\t\n\tSymbol.prototype.getRight = function() {\n\t  var y = this.getY() + this.group.getBBox().height/2;\n\t  var x = this.getX() + this.group.getBBox().width;\n\t  return {x: x, y: y};\n\t};\n\t\n\tSymbol.prototype.getLineLength=function(){\n\t  return this.getAttr('line-length');\n\t}\n\t\n\tSymbol.prototype.render = function() {\n\t  if (this.next) {\n\t\n\t    var lineLength = this.getLineLength();// this.getAttr('line-length');\n\t\n\t    if (this.next_direction === 'right') {\n\t\n\t      var rightPoint = this.getRight();\n\t\n\t      if (!this.next.isPositioned) {\n\t\n\t        this.next.setY(rightPoint.y - this.next.height/2);\n\t        this.next.shiftX(this.group.getBBox().x + this.width + lineLength);\n\t\n\t        var self = this;\n\t        (function shift() {\n\t          var hasSymbolUnder = false;\n\t          var symb;\n\t          for (var i = 0, len = self.chart.symbols.length; i < len; i++) {\n\t            symb = self.chart.symbols[i];\n\t\n\t            var diff = Math.abs(symb.getCenter().x - self.next.getCenter().x);\n\t            if (symb.getCenter().y > self.next.getCenter().y && diff <= self.next.width/2) {\n\t              hasSymbolUnder = true;\n\t              break;\n\t            }\n\t          }\n\t\n\t          if (hasSymbolUnder) {\n\t            self.next.setX(symb.getX() + symb.width + lineLength);\n\t            shift();\n\t          }\n\t        })();\n\t\n\t        this.next.isPositioned = true;\n\t\n\t        this.next.render();\n\t      }\n\t    } else {\n\t      var bottomPoint = this.getBottom();\n\t\n\t      if (!this.next.isPositioned) {\n\t        this.next.shiftY(this.getY() + this.height + lineLength);\n\t        this.next.setX(bottomPoint.x - this.next.width/2);\n\t        this.next.isPositioned = true;\n\t\n\t        this.next.render();\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tSymbol.prototype.renderLines = function() {\n\t  if (this.next) {\n\t    if (this.next_direction) {\n\t      this.drawLineTo(this.next, '', this.next_direction);\n\t    } else {\n\t      this.drawLineTo(this.next);\n\t    }\n\t  }\n\t};\n\t\n\tSymbol.prototype.drawLineTo = function(symbol, text, origin) {\n\t  if (this.connectedTo.indexOf(symbol) < 0) {\n\t    this.connectedTo.push(symbol);\n\t  }\n\t\n\t  var x = this.getCenter().x,\n\t      y = this.getCenter().y,\n\t      top = this.getTop(),\n\t      right = this.getRight(),\n\t      bottom = this.getBottom(),\n\t      left = this.getLeft();\n\t\n\t  var symbolX = symbol.getCenter().x,\n\t      symbolY = symbol.getCenter().y,\n\t      symbolTop = symbol.getTop(),\n\t      symbolBottom = symbol.getBottom(),\n\t      symbolRight = symbol.getRight(),\n\t      symbolLeft = symbol.getLeft();\n\t\n\t  var isOnSameColumn = x === symbolX,\n\t      isOnSameLine = bottom.y > symbolTop.y && top.y < symbolBottom.y, // y === symbolY,\n\t      isUnder = bottom.y < symbolTop.y, // y < symbolY && symbolTop.y < bottom,\n\t      isUpper = y > symbolY || this === symbol,\n\t      isLeft = x > symbolX,\n\t      isRight = x < symbolX;\n\t\n\t  var maxX = 0,\n\t      line,\n\t      lineLength = this.getLineLength();// this.getAttr('line-length'),\n\t      lineWith = this.getAttr('line-width');\n\t\n\t  if ((!origin || origin === 'bottom') && isOnSameColumn && isUnder) {\n\t    line = drawLine(this.chart, bottom, symbolTop, text);\n\t    this.bottomStart = true;\n\t    symbol.topEnd = true;\n\t    maxX = bottom.x;\n\t  } else if ((!origin || origin === 'right') && isOnSameLine && isRight) {\n\t    line = drawLine(this.chart, right, symbolLeft, text);\n\t    this.rightStart = true;\n\t    symbol.leftEnd = true;\n\t    maxX = symbolLeft.x;\n\t  } else if ((!origin || origin === 'left') && isOnSameLine && isLeft) {\n\t    line = drawLine(this.chart, left, symbolRight, text);\n\t    this.leftStart = true;\n\t    symbol.rightEnd = true;\n\t    maxX = symbolRight.x;\n\t  } else if ((!origin || origin === 'right') && isOnSameColumn && isUpper) {\n\t    line = drawLine(this.chart, right, [\n\t      {x: right.x + lineLength/2, y: right.y},\n\t      {x: right.x + lineLength/2, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y}\n\t    ], text);\n\t    this.rightStart = true;\n\t    symbol.topEnd = true;\n\t    maxX = right.x + lineLength/2;\n\t  } else if ((!origin || origin === 'right') && isOnSameColumn && isUnder) {\n\t    line = drawLine(this.chart, right, [\n\t      {x: right.x + lineLength/2, y: right.y},\n\t      {x: right.x + lineLength/2, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y}\n\t    ], text);\n\t    this.rightStart = true;\n\t    symbol.topEnd = true;\n\t    maxX = right.x + lineLength/2;\n\t  } else if ((!origin || origin === 'bottom') && isLeft) {\n\t    if (this.leftEnd && isUpper) {\n\t      line = drawLine(this.chart, bottom, [\n\t        {x: bottom.x, y: bottom.y + lineLength/2},\n\t        {x: bottom.x + (bottom.x - symbolTop.x)/2, y: bottom.y + lineLength/2},\n\t        {x: bottom.x + (bottom.x - symbolTop.x)/2, y: symbolTop.y - lineLength/2},\n\t        {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n\t        {x: symbolTop.x, y: symbolTop.y}\n\t      ], text);\n\t    } else {\n\t      line = drawLine(this.chart, bottom, [\n\t        {x: bottom.x, y: symbolTop.y - lineLength/2},\n\t        {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n\t        {x: symbolTop.x, y: symbolTop.y}\n\t      ], text);\n\t    }\n\t    this.bottomStart = true;\n\t    symbol.topEnd = true;\n\t    maxX = bottom.x + (bottom.x - symbolTop.x)/2;\n\t  } else if ((!origin || origin === 'bottom') && isRight) {\n\t    line = drawLine(this.chart, bottom, [\n\t      {x: bottom.x, y: bottom.y + lineLength/2},\n\t      {x: bottom.x + (bottom.x - symbolTop.x)/2, y: bottom.y + lineLength/2},\n\t      {x: bottom.x + (bottom.x - symbolTop.x)/2, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y}\n\t    ], text);\n\t    this.bottomStart = true;\n\t    symbol.topEnd = true;\n\t    maxX = bottom.x + (bottom.x - symbolTop.x)/2;\n\t  } else if ((origin && origin === 'right') && isLeft) {\n\t    line = drawLine(this.chart, right, [\n\t      {x: right.x + lineLength/2, y: right.y},\n\t      {x: right.x + lineLength/2, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y}\n\t    ], text);\n\t    this.rightStart = true;\n\t    symbol.topEnd = true;\n\t    maxX = right.x + lineLength/2;\n\t  } else if ((origin && origin === 'right') && isRight) {\n\t    line = drawLine(this.chart, right, [\n\t      {x: symbolTop.x, y: right.y},\n\t      {x: symbolTop.x, y: symbolTop.y}\n\t    ], text);\n\t    this.rightStart = true;\n\t    symbol.topEnd = true;\n\t    maxX = right.x + lineLength/2;\n\t  } else if ((origin && origin === 'bottom') && isOnSameColumn && isUpper) {\n\t    line = drawLine(this.chart, bottom, [\n\t      {x: bottom.x, y: bottom.y + lineLength/2},\n\t      {x: right.x + lineLength/2, y: bottom.y + lineLength/2},\n\t      {x: right.x + lineLength/2, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y}\n\t    ], text);\n\t    this.bottomStart = true;\n\t    symbol.topEnd = true;\n\t    maxX = bottom.x + lineLength/2;\n\t  } else if ((origin === 'left') && isOnSameColumn && isUpper) {\n\t    var diffX = left.x - lineLength/2;\n\t    if (symbolLeft.x < left.x) {\n\t      diffX = symbolLeft.x - lineLength/2;\n\t    }\n\t    line = drawLine(this.chart, left, [\n\t      {x: diffX, y: left.y},\n\t      {x: diffX, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y}\n\t    ], text);\n\t    this.leftStart = true;\n\t    symbol.topEnd = true;\n\t    maxX = left.x;\n\t  } else if ((origin === 'left')) {\n\t    line = drawLine(this.chart, left, [\n\t      {x: symbolTop.x + (left.x - symbolTop.x)/ 2, y: left.y},\n\t      {x: symbolTop.x + (left.x - symbolTop.x)/ 2, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n\t      {x: symbolTop.x, y: symbolTop.y}\n\t    ], text);\n\t    this.leftStart = true;\n\t    symbol.topEnd = true;\n\t    maxX = left.x;\n\t  }\n\t\n\t  //update line style\n\t  if (this.lineStyle[symbol.key] && line){\n\t      line.attr( this.lineStyle[symbol.key]);\n\t  }\n\t\n\t  if (line) {\n\t    for (var l = 0, llen = this.chart.lines.length; l < llen; l++) {\n\t      var otherLine = this.chart.lines[l];\n\t      var len;\n\t\n\t      var ePath = otherLine.attr('path'),\n\t          lPath = line.attr('path');\n\t\n\t      for (var iP = 0, lenP = ePath.length - 1; iP < lenP; iP++) {\n\t        var newPath = [];\n\t        newPath.push(['M', ePath[iP][1], ePath[iP][2]]);\n\t        newPath.push(['L', ePath[iP + 1][1], ePath[iP + 1][2]]);\n\t\n\t        var line1_from_x = newPath[0][1];\n\t        var line1_from_y = newPath[0][2];\n\t        var line1_to_x = newPath[1][1];\n\t        var line1_to_y = newPath[1][2];\n\t\n\t        for (var lP = 0, lenlP = lPath.length - 1; lP < lenlP; lP++) {\n\t          var newLinePath = [];\n\t          newLinePath.push(['M', lPath[lP][1], lPath[lP][2]]);\n\t          newLinePath.push(['L', lPath[lP + 1][1], lPath[lP + 1][2]]);\n\t\n\t          var line2_from_x = newLinePath[0][1];\n\t          var line2_from_y = newLinePath[0][2];\n\t          var line2_to_x = newLinePath[1][1];\n\t          var line2_to_y = newLinePath[1][2];\n\t\n\t          var res = checkLineIntersection(line1_from_x, line1_from_y, line1_to_x, line1_to_y, line2_from_x, line2_from_y, line2_to_x, line2_to_y);\n\t          if (res.onLine1 && res.onLine2) {\n\t\n\t            var newSegment;\n\t            if (line2_from_y === line2_to_y) {\n\t              if (line2_from_x > line2_to_x) {\n\t                newSegment = ['L', res.x + lineWith * 2,  line2_from_y];\n\t                lPath.splice(lP + 1, 0, newSegment);\n\t                newSegment = ['C', res.x + lineWith * 2,  line2_from_y, res.x, line2_from_y - lineWith * 4, res.x - lineWith * 2, line2_from_y];\n\t                lPath.splice(lP + 2, 0, newSegment);\n\t                line.attr('path', lPath);\n\t              } else {\n\t                newSegment = ['L', res.x - lineWith * 2,  line2_from_y];\n\t                lPath.splice(lP + 1, 0, newSegment);\n\t                newSegment = ['C', res.x - lineWith * 2,  line2_from_y, res.x, line2_from_y - lineWith * 4, res.x + lineWith * 2, line2_from_y];\n\t                lPath.splice(lP + 2, 0, newSegment);\n\t                line.attr('path', lPath);\n\t              }\n\t            } else {\n\t              if (line2_from_y > line2_to_y) {\n\t                newSegment = ['L', line2_from_x, res.y + lineWith * 2];\n\t                lPath.splice(lP + 1, 0, newSegment);\n\t                newSegment = ['C', line2_from_x, res.y + lineWith * 2, line2_from_x + lineWith * 4, res.y, line2_from_x, res.y - lineWith * 2];\n\t                lPath.splice(lP + 2, 0, newSegment);\n\t                line.attr('path', lPath);\n\t              } else {\n\t                newSegment = ['L', line2_from_x, res.y - lineWith * 2];\n\t                lPath.splice(lP + 1, 0, newSegment);\n\t                newSegment = ['C', line2_from_x, res.y - lineWith * 2, line2_from_x + lineWith * 4, res.y, line2_from_x, res.y + lineWith * 2];\n\t                lPath.splice(lP + 2, 0, newSegment);\n\t                line.attr('path', lPath);\n\t              }\n\t            }\n\t\n\t            lP += 2;\n\t            len += 2;\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    this.chart.lines.push(line);\n\t  }\n\t\n\t  if (!this.chart.maxXFromLine || (this.chart.maxXFromLine && maxX > this.chart.maxXFromLine)) {\n\t    this.chart.maxXFromLine = maxX;\n\t  }\n\t};\n\t\n\tmodule.exports = Symbol;\n\n\n/***/ }),\n/* 3 */\n/*!************************************!*\\\n  !*** ./src/flowchart.functions.js ***!\n  \\************************************/\n/***/ (function(module, exports) {\n\n\tfunction drawPath(chart, location, points) {\n\t  var i, len;\n\t  var path = 'M{0},{1}';\n\t  for (i = 2, len = 2 * points.length + 2; i < len; i+=2) {\n\t    path += ' L{' + i + '},{' + (i + 1) + '}';\n\t  }\n\t  var pathValues = [location.x, location.y];\n\t  for (i = 0, len = points.length; i < len; i++) {\n\t    pathValues.push(points[i].x);\n\t    pathValues.push(points[i].y);\n\t  }\n\t  var symbol = chart.paper.path(path, pathValues);\n\t  symbol.attr('stroke', chart.options['element-color']);\n\t  symbol.attr('stroke-width', chart.options['line-width']);\n\t\n\t  var font = chart.options.font;\n\t  var fontF = chart.options['font-family'];\n\t  var fontW = chart.options['font-weight'];\n\t\n\t  if (font) symbol.attr({ 'font': font });\n\t  if (fontF) symbol.attr({ 'font-family': fontF });\n\t  if (fontW) symbol.attr({ 'font-weight': fontW });\n\t\n\t  return symbol;\n\t}\n\t\n\tfunction drawLine(chart, from, to, text) {\n\t  var i, len;\n\t\n\t  if (Object.prototype.toString.call(to) !== '[object Array]') {\n\t    to = [to];\n\t  }\n\t\n\t  var path = 'M{0},{1}';\n\t  for (i = 2, len = 2 * to.length + 2; i < len; i+=2) {\n\t    path += ' L{' + i + '},{' + (i + 1) + '}';\n\t  }\n\t  var pathValues = [from.x, from.y];\n\t  for (i = 0, len = to.length; i < len; i++) {\n\t    pathValues.push(to[i].x);\n\t    pathValues.push(to[i].y);\n\t  }\n\t\n\t  var line = chart.paper.path(path, pathValues);\n\t  line.attr({\n\t    stroke: chart.options['line-color'],\n\t    'stroke-width': chart.options['line-width'],\n\t    'arrow-end': chart.options['arrow-end']\n\t  });\n\t\n\t  var font = chart.options.font;\n\t  var fontF = chart.options['font-family'];\n\t  var fontW = chart.options['font-weight'];\n\t\n\t  if (font) line.attr({ 'font': font });\n\t  if (fontF) line.attr({ 'font-family': fontF });\n\t  if (fontW) line.attr({ 'font-weight': fontW });\n\t\n\t  if (text) {\n\t\n\t    var centerText = false;\n\t\n\t    var textPath = chart.paper.text(0, 0, text);\n\t\n\t    var isHorizontal = false;\n\t    var firstTo = to[0];\n\t\n\t    if (from.y === firstTo.y) {\n\t      isHorizontal = true;\n\t    }\n\t\n\t    var x = 0,\n\t        y = 0;\n\t\n\t    if (centerText) {\n\t      if (from.x > firstTo.x) {\n\t        x = from.x - (from.x - firstTo.x)/2;\n\t      } else {\n\t        x = firstTo.x - (firstTo.x - from.x)/2;\n\t      }\n\t\n\t      if (from.y > firstTo.y) {\n\t        y = from.y - (from.y - firstTo.y)/2;\n\t      } else {\n\t        y = firstTo.y - (firstTo.y - from.y)/2;\n\t      }\n\t\n\t      if (isHorizontal) {\n\t        x -= textPath.getBBox().width/2;\n\t        y -= chart.options['text-margin'];\n\t      } else {\n\t        x += chart.options['text-margin'];\n\t        y -= textPath.getBBox().height/2;\n\t      }\n\t    } else {\n\t      x = from.x;\n\t      y = from.y;\n\t\n\t      if (isHorizontal) {\n\t        x += chart.options['text-margin']/2;\n\t        y -= chart.options['text-margin'];\n\t      } else {\n\t        x += chart.options['text-margin']/2;\n\t        y += chart.options['text-margin'];\n\t      }\n\t    }\n\t\n\t    textPath.attr({\n\t      'text-anchor': 'start',\n\t      'font-size': chart.options['font-size'],\n\t      'fill': chart.options['font-color'],\n\t      x: x,\n\t      y: y\n\t    });\n\t\n\t    if (font) textPath.attr({ 'font': font });\n\t    if (fontF) textPath.attr({ 'font-family': fontF });\n\t    if (fontW) textPath.attr({ 'font-weight': fontW });\n\t  }\n\t\n\t  return line;\n\t}\n\t\n\tfunction checkLineIntersection(line1StartX, line1StartY, line1EndX, line1EndY, line2StartX, line2StartY, line2EndX, line2EndY) {\n\t  // if the lines intersect, the result contains the x and y of the intersection (treating the lines as infinite) and booleans for whether line segment 1 or line segment 2 contain the point\n\t  var denominator, a, b, numerator1, numerator2, result = {\n\t    x: null,\n\t    y: null,\n\t    onLine1: false,\n\t    onLine2: false\n\t  };\n\t  denominator = ((line2EndY - line2StartY) * (line1EndX - line1StartX)) - ((line2EndX - line2StartX) * (line1EndY - line1StartY));\n\t  if (denominator === 0) {\n\t    return result;\n\t  }\n\t  a = line1StartY - line2StartY;\n\t  b = line1StartX - line2StartX;\n\t  numerator1 = ((line2EndX - line2StartX) * a) - ((line2EndY - line2StartY) * b);\n\t  numerator2 = ((line1EndX - line1StartX) * a) - ((line1EndY - line1StartY) * b);\n\t  a = numerator1 / denominator;\n\t  b = numerator2 / denominator;\n\t\n\t  // if we cast these lines infinitely in both directions, they intersect here:\n\t  result.x = line1StartX + (a * (line1EndX - line1StartX));\n\t  result.y = line1StartY + (a * (line1EndY - line1StartY));\n\t  /*\n\t  // it is worth noting that this should be the same as:\n\t  x = line2StartX + (b * (line2EndX - line2StartX));\n\t  y = line2StartX + (b * (line2EndY - line2StartY));\n\t  */\n\t  // if line1 is a segment and line2 is infinite, they intersect if:\n\t  if (a > 0 && a < 1) {\n\t    result.onLine1 = true;\n\t  }\n\t  // if line2 is a segment and line1 is infinite, they intersect if:\n\t  if (b > 0 && b < 1) {\n\t    result.onLine2 = true;\n\t  }\n\t  // if line1 and line2 are segments, they intersect if both of the above are true\n\t  return result;\n\t}\n\t\n\tmodule.exports = {\n\t\tdrawPath: drawPath,\n\t\tdrawLine: drawLine,\n\t\tcheckLineIntersection: checkLineIntersection\n\t};\n\n\n/***/ }),\n/* 4 */\n/*!********************************!*\\\n  !*** ./src/flowchart.parse.js ***!\n  \\********************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar FlowChart = __webpack_require__(/*! ./flowchart.chart */ 6);\n\tvar Start = __webpack_require__(/*! ./flowchart.symbol.start */ 14);\n\tvar End = __webpack_require__(/*! ./flowchart.symbol.end */ 11);\n\tvar Operation = __webpack_require__(/*! ./flowchart.symbol.operation */ 13);\n\tvar Database = __webpack_require__(/*! ./flowchart.symbol.database */ 10);\n\tvar InputOutput = __webpack_require__(/*! ./flowchart.symbol.inputoutput */ 12);\n\tvar Subroutine = __webpack_require__(/*! ./flowchart.symbol.subroutine */ 15);\n\tvar Condition = __webpack_require__(/*! ./flowchart.symbol.condition */ 5);\n\tvar Cloud = __webpack_require__(/*! ./flowchart.symbol.cloud */ 9);\n\t\n\tfunction parse(input) {\n\t  input = input || '';\n\t  input = input.trim();\n\t\n\t  var chart = {\n\t    symbols: {},\n\t    start: null,\n\t    drawSVG: function(container, options) {\n\t      var self = this;\n\t      if (this.diagram) {\n\t        this.diagram.clean();\n\t      }\n\t\n\t      var diagram = new FlowChart(container, options);\n\t      this.diagram = diagram;\n\t      var dispSymbols = {};\n\t\n\t      function getDisplaySymbol(s) {\n\t        if (dispSymbols[s.key]) {\n\t          return dispSymbols[s.key];\n\t        }\n\t        switch (s.symbolType) {\n\t          case 'start':\n\t            dispSymbols[s.key] = new Start(diagram, s);\n\t            break;\n\t          case 'end':\n\t            dispSymbols[s.key] = new End(diagram, s);\n\t            break;\n\t          case 'operation':\n\t            dispSymbols[s.key] = new Operation(diagram, s);\n\t            break;\n\t          case 'inputoutput':\n\t            dispSymbols[s.key] = new InputOutput(diagram, s);\n\t            break;\n\t          case 'subroutine':\n\t            dispSymbols[s.key] = new Subroutine(diagram, s);\n\t            break;\n\t          case 'condition':\n\t            dispSymbols[s.key] = new Condition(diagram, s);\n\t            break;\n\t          case 'database':\n\t            dispSymbols[s.key] = new Database(diagram, s);\n\t            break;\n\t          case 'cloud':\n\t            dispSymbols[s.key] = new Cloud(diagram, s);\n\t            break;\n\t          default:\n\t            return new Error('Wrong symbol type!');\n\t        }\n\t\n\t        return dispSymbols[s.key];\n\t      }\n\t\n\t      (function constructChart(s, prevDisp, prev) {\n\t        var dispSymb = getDisplaySymbol(s);\n\t\n\t        if (self.start === s) {\n\t          diagram.startWith(dispSymb);\n\t        } else if (prevDisp && prev && !prevDisp.pathOk) {\n\t          if (prevDisp instanceof(Condition)) {\n\t            if (prev.yes === s) {\n\t              prevDisp.yes(dispSymb);\n\t            }\n\t            if (prev.no === s) {\n\t              prevDisp.no(dispSymb);\n\t            }\n\t          } else {\n\t            prevDisp.then(dispSymb);\n\t          }\n\t        }\n\t\n\t        if (dispSymb.pathOk) {\n\t          return dispSymb;\n\t        }\n\t\n\t        if (dispSymb instanceof(Condition)) {\n\t          if (s.yes) {\n\t            constructChart(s.yes, dispSymb, s);\n\t          }\n\t          if (s.no) {\n\t            constructChart(s.no, dispSymb, s);\n\t          }\n\t        } else if (s.next) {\n\t          constructChart(s.next, dispSymb, s);\n\t        }\n\t\n\t        return dispSymb;\n\t      })(this.start);\n\t\n\t      diagram.render();\n\t    },\n\t    clean: function() {\n\t      this.diagram.clean();\n\t    }\n\t  };\n\t\n\t  var lines = [];\n\t  var prevBreak = 0;\n\t  for (var i0 = 1, i0len = input.length; i0 < i0len; i0++) {\n\t    if(input[i0] === '\\n' && input[i0 - 1] !== '\\\\') {\n\t      var line0 = input.substring(prevBreak, i0);\n\t      prevBreak = i0 + 1;\n\t      lines.push(line0.replace(/\\\\\\n/g, '\\n'));\n\t    }\n\t  }\n\t\n\t  if(prevBreak < input.length) {\n\t    lines.push(input.substr(prevBreak));\n\t  }\n\t\n\t  for (var l = 1, len = lines.length; l < len;) {\n\t    var currentLine = lines[l];\n\t\n\t    if (currentLine.indexOf('->') < 0 && currentLine.indexOf('=>') < 0 && currentLine.indexOf('@>') < 0) {\n\t      lines[l - 1] += '\\n' + currentLine;\n\t      lines.splice(l, 1);\n\t      len--;\n\t    } else {\n\t      l++;\n\t    }\n\t  }\n\t\n\t  function getStyle(s){\n\t    var startIndex = s.indexOf('(') + 1;\n\t    var endIndex = s.indexOf(')');\n\t    if (startIndex >= 0 && endIndex >= 0) {\n\t      return s.substring(startIndex,endIndex);\n\t    }\n\t    return '{}';\n\t  }\n\t\n\t  function getSymbol(s) {\n\t    var startIndex = s.indexOf('(') + 1;\n\t    var endIndex = s.indexOf(')');\n\t    if (startIndex >= 0 && endIndex >= 0) {\n\t      return chart.symbols[s.substring(0, startIndex - 1)];\n\t    }\n\t    return chart.symbols[s];\n\t  }\n\t\n\t  function getNextPath(s) {\n\t    var next = 'next';\n\t    var startIndex = s.indexOf('(') + 1;\n\t    var endIndex = s.indexOf(')');\n\t    if (startIndex >= 0 && endIndex >= 0) {\n\t      next = flowSymb.substring(startIndex, endIndex);\n\t      if (next.indexOf(',') < 0) {\n\t        if (next !== 'yes' && next !== 'no') {\n\t          next = 'next, ' + next;\n\t        }\n\t      }\n\t    }\n\t    return next;\n\t  }\n\t\n\t  while (lines.length > 0) {\n\t    var line = lines.splice(0, 1)[0].trim();\n\t\n\t    if (line.indexOf('=>') >= 0) {\n\t      // definition\n\t      var parts = line.split('=>');\n\t      var symbol = {\n\t        key: parts[0].replace(/\\(.*\\)/, ''),\n\t        symbolType: parts[1],\n\t        text: null,\n\t        link: null,\n\t        target: null,\n\t        flowstate: null,\n\t        lineStyle: {},\n\t        params: {}\n\t      };\n\t\n\t      //parse parameters\n\t      var params = parts[0].match(/\\((.*)\\)/);\n\t      if (params && params.length > 1){\n\t        var entries = params[1].split(',');\n\t        for(var i = 0; i < entries.length; i++) {\n\t          var entry = entries[0].split('=');\n\t          if (entry.length == 2){\n\t            symbol.params[entry[0]] = entry[1];\n\t          }\n\t        }\n\t      }\n\t\n\t      var sub;\n\t\n\t      if (symbol.symbolType.indexOf(': ') >= 0) {\n\t        sub = symbol.symbolType.split(': ');\n\t        symbol.symbolType = sub.shift();\n\t        symbol.text = sub.join(': ');\n\t      }\n\t\n\t      if (symbol.text && symbol.text.indexOf(':>') >= 0) {\n\t        sub = symbol.text.split(':>');\n\t        symbol.text = sub.shift();\n\t        symbol.link = sub.join(':>');\n\t      } else if (symbol.symbolType.indexOf(':>') >= 0) {\n\t        sub = symbol.symbolType.split(':>');\n\t        symbol.symbolType = sub.shift();\n\t        symbol.link = sub.join(':>');\n\t      }\n\t\n\t      if (symbol.symbolType.indexOf('\\n') >= 0) {\n\t        symbol.symbolType = symbol.symbolType.split('\\n')[0];\n\t      }\n\t\n\t      /* adding support for links */\n\t      if (symbol.link) {\n\t        var startIndex = symbol.link.indexOf('[') + 1;\n\t        var endIndex = symbol.link.indexOf(']');\n\t        if (startIndex >= 0 && endIndex >= 0) {\n\t          symbol.target = symbol.link.substring(startIndex, endIndex);\n\t          symbol.link = symbol.link.substring(0, startIndex - 1);\n\t        }\n\t      }\n\t      /* end of link support */\n\t\n\t      /* adding support for flowstates */\n\t      if (symbol.text) {\n\t        if (symbol.text.indexOf('|') >= 0) {\n\t          var txtAndState = symbol.text.split('|');\n\t          symbol.flowstate = txtAndState.pop().trim();\n\t          symbol.text = txtAndState.join('|');\n\t        }\n\t      }\n\t      /* end of flowstate support */\n\t\n\t      chart.symbols[symbol.key] = symbol;\n\t\n\t    } else if (line.indexOf('->') >= 0) {\n\t      // flow\n\t      var flowSymbols = line.split('->');\n\t      for (var i = 0, lenS = flowSymbols.length; i < lenS; i++) {\n\t        var flowSymb = flowSymbols[i];\n\t\n\t        var realSymb = getSymbol(flowSymb);\n\t        var next = getNextPath(flowSymb);\n\t\n\t        var direction = null;\n\t        if (next.indexOf(',') >= 0) {\n\t          var condOpt = next.split(',');\n\t          next = condOpt[0];\n\t          direction = condOpt[1].trim();\n\t        }\n\t\n\t        if (!chart.start) {\n\t          chart.start = realSymb;\n\t        }\n\t\n\t        if (i + 1 < lenS) {\n\t          var nextSymb = flowSymbols[i + 1];\n\t          realSymb[next] = getSymbol(nextSymb);\n\t          realSymb['direction_' + next] = direction;\n\t          direction = null;\n\t        }\n\t      }\n\t    } else if (line.indexOf('@>') >= 0) {\n\t\n\t      // line style\n\t      var lineStyleSymbols = line.split('@>');\n\t      for (var i = 0, lenS = lineStyleSymbols.length; i < lenS; i++) {\n\t\n\t        if ((i+1) != lenS){\n\t          var curSymb = getSymbol(lineStyleSymbols[i]);\n\t          var nextSymb = getSymbol(lineStyleSymbols[i+1])\n\t\n\t          curSymb['lineStyle'][nextSymb.key] = JSON.parse(getStyle(lineStyleSymbols[i+1]));\n\t        }\n\t      }\n\t    }\n\t\n\t  }\n\t  return chart;\n\t}\n\t\n\tmodule.exports = parse;\n\n\n/***/ }),\n/* 5 */\n/*!*******************************************!*\\\n  !*** ./src/flowchart.symbol.condition.js ***!\n  \\*******************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(/*! ./flowchart.symbol */ 2);\n\tvar inherits = __webpack_require__(/*! ./flowchart.helpers */ 1).inherits;\n\tvar drawAPI = __webpack_require__(/*! ./flowchart.functions */ 3);\n\tvar drawPath = drawAPI.drawPath;\n\t\n\tfunction Condition(chart, options) {\n\t  options = options || {};\n\t  Symbol.call(this, chart, options);\n\t  this.textMargin = this.getAttr('text-margin');\n\t  this.yes_direction = 'bottom';\n\t  this.no_direction = 'right';\n\t  this.params = options.params;\n\t  if (options.yes && options.direction_yes && options.no && !options.direction_no) {\n\t    if (options.direction_yes === 'right') {\n\t      this.no_direction = 'bottom';\n\t      this.yes_direction = 'right';\n\t    } else {\n\t      this.no_direction = 'right';\n\t      this.yes_direction = 'bottom';\n\t    }\n\t  } else if (options.yes && !options.direction_yes && options.no && options.direction_no) {\n\t    if (options.direction_no === 'right') {\n\t      this.yes_direction = 'bottom';\n\t      this.no_direction = 'right';\n\t    } else {\n\t      this.yes_direction = 'right';\n\t      this.no_direction = 'bottom';\n\t    }\n\t  } else {\n\t    this.yes_direction = 'bottom';\n\t    this.no_direction = 'right';\n\t  }\n\t\n\t  this.yes_direction = this.yes_direction || 'bottom';\n\t  this.no_direction = this.no_direction || 'right';\n\t\n\t  this.text.attr({\n\t    x: this.textMargin * 2\n\t  });\n\t\n\t  var width = this.text.getBBox().width + 3 * this.textMargin;\n\t  width += width/2;\n\t  var height = this.text.getBBox().height + 2 * this.textMargin;\n\t  height += height/2;\n\t  height = Math.max(width * 0.5, height);\n\t  var startX = width/4;\n\t  var startY = height/4;\n\t\n\t  this.text.attr({\n\t    x: startX + this.textMargin/2\n\t  });\n\t\n\t  var start = {x: startX, y: startY};\n\t  var points = [\n\t    {x: startX - width/4, y: startY + height/4},\n\t    {x: startX - width/4 + width/2, y: startY + height/4 + height/2},\n\t    {x: startX - width/4 + width, y: startY + height/4},\n\t    {x: startX - width/4 + width/2, y: startY + height/4 - height/2},\n\t    {x: startX - width/4, y: startY + height/4}\n\t  ];\n\t\n\t  var symbol = drawPath(chart, start, points);\n\t\n\t  symbol.attr({\n\t    stroke: this.getAttr('element-color'),\n\t    'stroke-width': this.getAttr('line-width'),\n\t    fill: this.getAttr('fill')\n\t  });\n\t  if (options.link) { symbol.attr('href', options.link); }\n\t  if (options.target) { symbol.attr('target', options.target); }\n\t  if (options.key) { symbol.node.id = options.key; }\n\t  symbol.node.setAttribute('class', this.getAttr('class'));\n\t\n\t  this.text.attr({\n\t    y: symbol.getBBox().height/2\n\t  });\n\t\n\t  this.group.push(symbol);\n\t  symbol.insertBefore(this.text);\n\t\n\t  this.initialize();\n\t}\n\tinherits(Condition, Symbol);\n\t\n\tCondition.prototype.render = function() {\n\t\n\t  if (this.yes_direction) {\n\t    this[this.yes_direction + '_symbol'] = this.yes_symbol;\n\t  }\n\t\n\t  if (this.no_direction) {\n\t    this[this.no_direction + '_symbol'] = this.no_symbol;\n\t  }\n\t\n\t  var lineLength = this.getAttr('line-length');\n\t\n\t  if (this.bottom_symbol) {\n\t    var bottomPoint = this.getBottom();\n\t\n\t    if (!this.bottom_symbol.isPositioned) {\n\t      this.bottom_symbol.shiftY(this.getY() + this.height + lineLength);\n\t      this.bottom_symbol.setX(bottomPoint.x - this.bottom_symbol.width/2);\n\t      this.bottom_symbol.isPositioned = true;\n\t\n\t      this.bottom_symbol.render();\n\t    }\n\t  }\n\t\n\t  if (this.right_symbol) {\n\t    var rightPoint = this.getRight();\n\t\n\t    if (!this.right_symbol.isPositioned) {\n\t\n\t      this.right_symbol.setY(rightPoint.y - this.right_symbol.height/2);\n\t      this.right_symbol.shiftX(this.group.getBBox().x + this.width + lineLength);\n\t\n\t      var self = this;\n\t      (function shift() {\n\t        var hasSymbolUnder = false;\n\t        var symb;\n\t        for (var i = 0, len = self.chart.symbols.length; i < len; i++) {\n\t          symb = self.chart.symbols[i];\n\t\n\t          if (!self.params['align-next'] || self.params['align-next'] !== 'no') { \n\t            var diff = Math.abs(symb.getCenter().x - self.right_symbol.getCenter().x);\n\t            if (symb.getCenter().y > self.right_symbol.getCenter().y && diff <= self.right_symbol.width/2) {\n\t              hasSymbolUnder = true;\n\t              break;\n\t            }\n\t          }\n\t        }\n\t\n\t        if (hasSymbolUnder) {\n\t          self.right_symbol.setX(symb.getX() + symb.width + lineLength);\n\t          shift();\n\t        }\n\t      })();\n\t\n\t      this.right_symbol.isPositioned = true;\n\t\n\t      this.right_symbol.render();\n\t    }\n\t  }\n\t};\n\t\n\tCondition.prototype.renderLines = function() {\n\t  if (this.yes_symbol) {\n\t    this.drawLineTo(this.yes_symbol, this.getAttr('yes-text'), this.yes_direction);\n\t  }\n\t\n\t  if (this.no_symbol) {\n\t    this.drawLineTo(this.no_symbol, this.getAttr('no-text'), this.no_direction);\n\t  }\n\t};\n\t\n\tmodule.exports = Condition;\n\n\n/***/ }),\n/* 6 */\n/*!********************************!*\\\n  !*** ./src/flowchart.chart.js ***!\n  \\********************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Raphael = __webpack_require__(/*! raphael */ 17);\n\tvar defaults = __webpack_require__(/*! ./flowchart.helpers */ 1).defaults;\n\tvar defaultOptions = __webpack_require__(/*! ./flowchart.defaults */ 7);\n\tvar Condition = __webpack_require__(/*! ./flowchart.symbol.condition */ 5);\n\t\n\tfunction FlowChart(container, options) {\n\t  options = options || {};\n\t\n\t  this.paper = new Raphael(container);\n\t\n\t  this.options = defaults(options, defaultOptions);\n\t\n\t  this.symbols = [];\n\t  this.lines = [];\n\t  this.start = null;\n\t}\n\t\n\tFlowChart.prototype.handle = function(symbol) {\n\t  if (this.symbols.indexOf(symbol) <= -1) {\n\t    this.symbols.push(symbol);\n\t  }\n\t\n\t  var flowChart = this;\n\t\n\t  if (symbol instanceof(Condition)) {\n\t    symbol.yes = function(nextSymbol) {\n\t      symbol.yes_symbol = nextSymbol;\n\t      if(symbol.no_symbol) {\n\t        symbol.pathOk = true;\n\t      }\n\t      return flowChart.handle(nextSymbol);\n\t    };\n\t    symbol.no = function(nextSymbol) {\n\t      symbol.no_symbol = nextSymbol;\n\t      if(symbol.yes_symbol) {\n\t        symbol.pathOk = true;\n\t      }\n\t      return flowChart.handle(nextSymbol);\n\t    };\n\t  } else {\n\t    symbol.then = function(nextSymbol) {\n\t      symbol.next = nextSymbol;\n\t      symbol.pathOk = true;\n\t      return flowChart.handle(nextSymbol);\n\t    };\n\t  }\n\t\n\t  return symbol;\n\t};\n\t\n\tFlowChart.prototype.startWith = function(symbol) {\n\t  this.start = symbol;\n\t  return this.handle(symbol);\n\t};\n\t\n\tFlowChart.prototype.render = function() {\n\t  var maxWidth = 0,\n\t      maxHeight = 0,\n\t      i = 0,\n\t      len = 0,\n\t      maxX = 0,\n\t      maxY = 0,\n\t      minX = 0,\n\t      minY = 0,\n\t      symbol,\n\t      line;\n\t\n\t  for (i = 0, len = this.symbols.length; i < len; i++) {\n\t    symbol = this.symbols[i];\n\t    if (symbol.width > maxWidth) {\n\t      maxWidth = symbol.width;\n\t    }\n\t    if (symbol.height > maxHeight) {\n\t      maxHeight = symbol.height;\n\t    }\n\t  }\n\t\n\t  for (i = 0, len = this.symbols.length; i < len; i++) {\n\t    symbol = this.symbols[i];\n\t    symbol.shiftX(this.options.x + (maxWidth - symbol.width)/2 + this.options['line-width']);\n\t    symbol.shiftY(this.options.y + (maxHeight - symbol.height)/2 + this.options['line-width']);\n\t  }\n\t\n\t  this.start.render();\n\t  // for (i = 0, len = this.symbols.length; i < len; i++) {\n\t  //   symbol = this.symbols[i];\n\t  //   symbol.render();\n\t  // }\n\t\n\t  for (i = 0, len = this.symbols.length; i < len; i++) {\n\t    symbol = this.symbols[i];\n\t    symbol.renderLines();\n\t  }\n\t\n\t  maxX = this.maxXFromLine;\n\t\n\t  var x;\n\t  var y;\n\t\n\t  for (i = 0, len = this.symbols.length; i < len; i++) {\n\t    symbol = this.symbols[i];\n\t    x = symbol.getX() + symbol.width;\n\t    y = symbol.getY() + symbol.height;\n\t    if (x > maxX) {\n\t      maxX = x;\n\t    }\n\t    if (y > maxY) {\n\t      maxY = y;\n\t    }\n\t  }\n\t\n\t  for (i = 0, len = this.lines.length; i < len; i++) {\n\t    line = this.lines[i].getBBox();\n\t    x = line.x;\n\t    y = line.y;\n\t    var x2 = line.x2;\n\t    var y2 = line.y2;\n\t    if (x < minX) {\n\t      minX = x;\n\t    }\n\t    if (y < minY) {\n\t      minY = y;\n\t    }\n\t    if (x2 > maxX) {\n\t      maxX = x2;\n\t    }\n\t    if (y2 > maxY) {\n\t      maxY = y2;\n\t    }\n\t  }\n\t\n\t  var scale = this.options['scale'];\n\t  var lineWidth = this.options['line-width'];\n\t\n\t  if (minX < 0) minX -= lineWidth;\n\t  if (minY < 0) minY -= lineWidth;\n\t\n\t  var width = maxX + lineWidth - minX;\n\t  var height = maxY + lineWidth - minY;\n\t\n\t  this.paper.setSize(width * scale, height * scale);\n\t  this.paper.setViewBox(minX, minY, width, height, true);\n\t};\n\t\n\tFlowChart.prototype.clean = function() {\n\t  if (this.paper) {\n\t    var paperDom = this.paper.canvas;\n\t    paperDom.parentNode.removeChild(paperDom);\n\t  }\n\t};\n\t\n\tmodule.exports = FlowChart;\n\n\n/***/ }),\n/* 7 */\n/*!***********************************!*\\\n  !*** ./src/flowchart.defaults.js ***!\n  \\***********************************/\n/***/ (function(module, exports) {\n\n\t// defaults\n\tmodule.exports = {\n\t  'x': 0,\n\t  'y': 0,\n\t  'line-width': 3,\n\t  'line-length': 50,\n\t  'text-margin': 10,\n\t  'font-size': 14,\n\t  'font-color': 'black',\n\t  // 'font': 'normal',\n\t  // 'font-family': 'calibri',\n\t  // 'font-weight': 'normal',\n\t  'line-color': 'black',\n\t  'element-color': 'black',\n\t  'fill': 'white',\n\t  'yes-text': 'yes',\n\t  'no-text': 'no',\n\t  'arrow-end': 'block',\n\t  'class': 'flowchart',\n\t  'scale': 1,\n\t  'symbols': {\n\t    'start': {},\n\t    'end': {},\n\t    'condition': {},\n\t    'inputoutput': {},\n\t    'operation': {},\n\t    'subroutine': {},\n\t    'database':{},\n\t    'cloud':{}\n\t  }//,\n\t  // 'flowstate' : {\n\t  //   'past' : { 'fill': '#CCCCCC', 'font-size': 12},\n\t  //   'current' : {'fill': 'yellow', 'font-color': 'red', 'font-weight': 'bold'},\n\t  //   'future' : { 'fill': '#FFFF99'},\n\t  //   'invalid': {'fill': '#444444'}\n\t  // }\n\t};\n\n\n/***/ }),\n/* 8 */\n/*!*******************************!*\\\n  !*** ./src/flowchart.shim.js ***!\n  \\*******************************/\n/***/ (function(module, exports) {\n\n\t// add indexOf to non ECMA-262 standard compliant browsers\n\tif (!Array.prototype.indexOf) {\n\t  Array.prototype.indexOf = function (searchElement /*, fromIndex */ ) {\n\t    \"use strict\";\n\t    if (this === null) {\n\t      throw new TypeError();\n\t    }\n\t    var t = Object(this);\n\t    var len = t.length >>> 0;\n\t    if (len === 0) {\n\t      return -1;\n\t    }\n\t    var n = 0;\n\t    if (arguments.length > 0) {\n\t      n = Number(arguments[1]);\n\t      if (n != n) { // shortcut for verifying if it's NaN\n\t        n = 0;\n\t      } else if (n !== 0 && n != Infinity && n != -Infinity) {\n\t        n = (n > 0 || -1) * Math.floor(Math.abs(n));\n\t      }\n\t    }\n\t    if (n >= len) {\n\t      return -1;\n\t    }\n\t    var k = n >= 0 ? n : Math.max(len - Math.abs(n), 0);\n\t    for (; k < len; k++) {\n\t      if (k in t && t[k] === searchElement) {\n\t        return k;\n\t      }\n\t    }\n\t    return -1;\n\t  };\n\t}\n\t\n\t// add lastIndexOf to non ECMA-262 standard compliant browsers\n\tif (!Array.prototype.lastIndexOf) {\n\t  Array.prototype.lastIndexOf = function(searchElement /*, fromIndex*/) {\n\t    \"use strict\";\n\t    if (this === null) {\n\t      throw new TypeError();\n\t    }\n\t    var t = Object(this);\n\t    var len = t.length >>> 0;\n\t    if (len === 0) {\n\t      return -1;\n\t    }\n\t    var n = len;\n\t    if (arguments.length > 1) {\n\t      n = Number(arguments[1]);\n\t      if (n != n) {\n\t        n = 0;\n\t      } else if (n !== 0 && n != (1 / 0) && n != -(1 / 0)) {\n\t        n = (n > 0 || -1) * Math.floor(Math.abs(n));\n\t      }\n\t    }\n\t    var k = n >= 0 ? Math.min(n, len - 1) : len - Math.abs(n);\n\t    for (; k >= 0; k--) {\n\t      if (k in t && t[k] === searchElement) {\n\t        return k;\n\t      }\n\t    }\n\t    return -1;\n\t  };\n\t}\n\t\n\tif (!String.prototype.trim) {\n\t  String.prototype.trim = function() {\n\t    return this.replace(/^\\s+|\\s+$/g, '');\n\t  };\n\t}\n\n/***/ }),\n/* 9 */\n/*!***************************************!*\\\n  !*** ./src/flowchart.symbol.cloud.js ***!\n  \\***************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(/*! ./flowchart.symbol */ 2);\n\tvar inherits = __webpack_require__(/*! ./flowchart.helpers */ 1).inherits;\n\tvar drawAPI = __webpack_require__(/*! ./flowchart.functions */ 3);\n\tvar drawPath = drawAPI.drawPath;\n\t\n\tfunction Cloud(chart, options) {\n\t  options = options || {};\n\t  Symbol.call(this, chart, options);\n\t\n\t  var originX = 0;\n\t  var originY = 0;\n\t\n\t  this.textMargin = this.getAttr('text-margin');\n\t\n\t  // Set width to box width increased by 4 times the text margin\n\t  var textWidth = this.text.getBBox().width + 2 * this.textMargin;\n\t  // Height set to box height increased by 2 times text margin\n\t  var textHeight = this.text.getBBox().height + 2 * this.textMargin;\n\t  \n\t  var b = 0.75 * textWidth;\n\t  var h = 0.25 * textWidth;\n\t  var ngl = Math.cos(0.3762);\n\t  var coeff = 1.0752;\n\t  var r = coeff * b / 2 / ngl;\n\t  var topBubbleHeight = h/2 + r * (1 - Math.sin(0.3762));\n\t  var r3 = 0.90 * h;\n\t\n\t  var cv1r = textHeight/1.95;\n\t  \n\t  var cv1y1 = originY + topBubbleHeight + textHeight;\n\t  var cv1x = originX + textHeight/2.5;//2/1.025641;//cv1r;\n\t  var cv1y2 = originY + topBubbleHeight;\n\t  \n\t  cv1 = \"M\"+cv1x+\",\"+cv1y1+\" A\"+cv1r+\",\"+cv1r+\" 0 0,1 \"+cv1x+\",\"+cv1y2;\n\t  \n\t  cv2 = \"A\"+r+\",\"+r + \" 0 0,1 \"+(b+cv1x)+\",\"+ (cv1y2- h);\n\t  cv3 = \"A\"+r3+\",\"+r3+ \" 0 0,1 \"+(textWidth+cv1x)+\",\"+(cv1y2);\n\t  cv4 = \"A\"+cv1r+\",\"+cv1r + \" 0 0,1 \"+(textWidth+cv1x)+\",\"+ (cv1y1);\n\t  base = \"H \" + cv1x\n\t  var symbol = chart.paper.path(cv1 + cv2 + cv3 + cv4 + base);\n\t  symbol.attr({\n\t    stroke: this.getAttr('element-color'),\n\t    'stroke-width': this.getAttr('line-width'),\n\t    fill: this.getAttr('fill')\n\t  });\n\t\n\t  this.group.push(symbol);\n\t  \n\t  symbol.insertBefore(this.text);\n\t  \n\t  this.text.attr({\n\t    y: this.group.getBBox().height / 2,\n\t    x: cv1x + this.textMargin\n\t  });\n\t\n\t  this.startRight = textWidth + cv1x;\n\t\n\t  this.initialize();\n\t}\n\tinherits(Cloud, Symbol);\n\t\n\tCloud.prototype.getLeft = function() {\n\t  var x = this.getX() + this.textMargin;\n\t  var y = this.getY() + this.group.getBBox().height/2;\n\t  return {x: x, y: y};\n\t};\n\t\n\tCloud.prototype.getRight = function() {\n\t  var x = this.getX() + this.startRight; // this.group.getBBox().width;// - this.textMargin;\n\t  var y = this.getY() + this.group.getBBox().height/2;\n\t  return {x: x, y: y};\n\t};\n\t\n\tCloud.prototype.getTop = function() {\n\t  var y = this.getY();\n\t  var x = this.getX() + this.width/2;\n\t  return {x: x, y: y};\n\t};\n\t\n\t// Cloud.prototype.getLineLength=function(){\n\t//   return this.getAttr('line-length') * 1.75;\n\t// }\n\t\n\tmodule.exports = Cloud;\n\n\n/***/ }),\n/* 10 */\n/*!******************************************!*\\\n  !*** ./src/flowchart.symbol.database.js ***!\n  \\******************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(/*! ./flowchart.symbol */ 2);\n\tvar inherits = __webpack_require__(/*! ./flowchart.helpers */ 1).inherits;\n\tvar drawAPI = __webpack_require__(/*! ./flowchart.functions */ 3);\n\tvar drawPath = drawAPI.drawPath;\n\t\n\tfunction Database(chart, options) {\n\t  options = options || {};\n\t  Symbol.call(this, chart, options);\n\t  this.textMargin = this.getAttr('text-margin');\n\t\n\t  // Set width to box width increased by 4 times the text margin\n\t  var width = this.text.getBBox().width + 2 * this.textMargin;\n\t  var ellipseHeight = width / 6.5;\n\t  // Height set to box height increased by 2 times text margin\n\t  var height = this.text.getBBox().height + 2 * this.textMargin + ellipseHeight/2;\n\t\n\t  // bottom ellipse will be centered at height of box in y direction\n\t  var bottomEllipse = chart.paper.ellipse(width/2, height + ellipseHeight, width/2, ellipseHeight/2);\n\t  bottomEllipse.attr({\n\t    stroke: this.getAttr('element-color'),\n\t    'stroke-width': this.getAttr('line-width'),\n\t    fill: this.getAttr('fill')\n\t  });\n\t\n\t  var textArea = chart.paper.rect(0, ellipseHeight/2, width, height + ellipseHeight/2); \n\t  textArea.attr({\n\t    stroke: this.getAttr('element-color'),\n\t    'stroke-width': 0,\n\t    fill: this.getAttr('fill')\n\t  });\n\t\n\t  // top ellipse needs to \"get out of the way\" of the text box; it will go completely above the text box\n\t  var topEllipse = chart.paper.ellipse(width/2, ellipseHeight/2, width/2, ellipseHeight/2);\n\t  topEllipse.attr({\n\t    stroke: this.getAttr('element-color'),\n\t    'stroke-width': this.getAttr('line-width'),\n\t    fill: this.getAttr('fill')\n\t  });\n\t\n\t  var leftBorder = drawPath(chart, {x: 0, y: ellipseHeight/2}, [{x:0, y:height + ellipseHeight}]);\n\t  \n\t  leftBorder.attr({\n\t    stroke: this.getAttr('element-color'),\n\t    'stroke-width': this.getAttr('line-width')\n\t  });\n\t\n\t  var rightBorder = drawPath(chart, {x: width, y: ellipseHeight/2}, [{x:width, y:height + ellipseHeight}]);\n\t  \n\t  rightBorder.attr({\n\t    stroke: this.getAttr('element-color'),\n\t    'stroke-width': this.getAttr('line-width')\n\t  });\n\t\n\t  console.debug(this.group.getBBox());\n\t  this.group.push( leftBorder, bottomEllipse, textArea, topEllipse, rightBorder);//(symbol, topEllipse);\n\t  console.debug(this.group.getBBox());\n\t  \n\t  bottomEllipse.insertBefore(this.text);\n\t  textArea.insertBefore(this.text);\n\t  topEllipse.insertBefore(this.text);\n\t  \n\t  this.text.attr({\n\t    y: this.group.getBBox().height / 2 \n\t  });\n\t\n\t  this.initialize();\n\t}\n\tinherits(Database, Symbol);\n\t\n\tDatabase.prototype.getLeft = function() {\n\t  var x = this.getX() + this.textMargin;\n\t  var y = this.getY() + this.group.getBBox().height/2;\n\t  return {x: x, y: y};\n\t};\n\t\n\tDatabase.prototype.getRight = function() {\n\t  var x = this.getX() + this.group.getBBox().width;// - this.textMargin;\n\t  var y = this.getY() + this.group.getBBox().height/2;\n\t  return {x: x, y: y};\n\t};\n\t\n\t\n\tmodule.exports = Database;\n\n\n/***/ }),\n/* 11 */\n/*!*************************************!*\\\n  !*** ./src/flowchart.symbol.end.js ***!\n  \\*************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(/*! ./flowchart.symbol */ 2);\n\tvar inherits = __webpack_require__(/*! ./flowchart.helpers */ 1).inherits;\n\t\n\tfunction End(chart, options) {\n\t  var symbol = chart.paper.rect(0, 0, 0, 0, 20);\n\t  options = options || {};\n\t  options.text = options.text || 'End';\n\t  Symbol.call(this, chart, options, symbol);\n\t}\n\tinherits(End, Symbol);\n\t\n\tmodule.exports = End;\n\n\n/***/ }),\n/* 12 */\n/*!*********************************************!*\\\n  !*** ./src/flowchart.symbol.inputoutput.js ***!\n  \\*********************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(/*! ./flowchart.symbol */ 2);\n\tvar inherits = __webpack_require__(/*! ./flowchart.helpers */ 1).inherits;\n\tvar drawAPI = __webpack_require__(/*! ./flowchart.functions */ 3);\n\tvar drawPath = drawAPI.drawPath;\n\t\n\tfunction InputOutput(chart, options) {\n\t  options = options || {};\n\t  Symbol.call(this, chart, options);\n\t  this.textMargin = this.getAttr('text-margin');\n\t\n\t  this.text.attr({\n\t    x: this.textMargin * 3\n\t  });\n\t\n\t  var width = this.text.getBBox().width + 4 * this.textMargin;\n\t  var height = this.text.getBBox().height + 2 * this.textMargin;\n\t  var startX = this.textMargin;\n\t  var startY = height/2;\n\t\n\t  var start = {x: startX, y: startY};\n\t  var points = [\n\t    {x: startX - this.textMargin, y: height},\n\t    {x: startX - this.textMargin + width, y: height},\n\t    {x: startX - this.textMargin + width + 2 * this.textMargin, y: 0},\n\t    {x: startX - this.textMargin + 2 * this.textMargin, y: 0},\n\t    {x: startX, y: startY}\n\t  ];\n\t\n\t  var symbol = drawPath(chart, start, points);\n\t\n\t  symbol.attr({\n\t    stroke: this.getAttr('element-color'),\n\t    'stroke-width': this.getAttr('line-width'),\n\t    fill: this.getAttr('fill')\n\t  });\n\t  if (options.link) { symbol.attr('href', options.link); }\n\t  if (options.target) { symbol.attr('target', options.target); }\n\t  if (options.key) { symbol.node.id = options.key; }\n\t  symbol.node.setAttribute('class', this.getAttr('class'));\n\t\n\t  this.text.attr({\n\t    y: symbol.getBBox().height/2\n\t  });\n\t\n\t  this.group.push(symbol);\n\t  symbol.insertBefore(this.text);\n\t\n\t  this.initialize();\n\t}\n\tinherits(InputOutput, Symbol);\n\t\n\tInputOutput.prototype.getLeft = function() {\n\t  var y = this.getY() + this.group.getBBox().height/2;\n\t  var x = this.getX() + this.textMargin;\n\t  return {x: x, y: y};\n\t};\n\t\n\tInputOutput.prototype.getRight = function() {\n\t  var y = this.getY() + this.group.getBBox().height/2;\n\t  var x = this.getX() + this.group.getBBox().width - this.textMargin;\n\t  return {x: x, y: y};\n\t};\n\t\n\tmodule.exports = InputOutput;\n\n\n/***/ }),\n/* 13 */\n/*!*******************************************!*\\\n  !*** ./src/flowchart.symbol.operation.js ***!\n  \\*******************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(/*! ./flowchart.symbol */ 2);\n\tvar inherits = __webpack_require__(/*! ./flowchart.helpers */ 1).inherits;\n\t\n\tfunction Operation(chart, options) {\n\t  var symbol = chart.paper.rect(0, 0, 0, 0);\n\t  options = options || {};\n\t  Symbol.call(this, chart, options, symbol);\n\t}\n\tinherits(Operation, Symbol);\n\t\n\tmodule.exports = Operation;\n\n\n/***/ }),\n/* 14 */\n/*!***************************************!*\\\n  !*** ./src/flowchart.symbol.start.js ***!\n  \\***************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(/*! ./flowchart.symbol */ 2);\n\tvar inherits = __webpack_require__(/*! ./flowchart.helpers */ 1).inherits;\n\t\n\tfunction Start(chart, options) {\n\t  var symbol = chart.paper.rect(0, 0, 0, 0, 20);\n\t  options = options || {};\n\t  options.text = options.text || 'Start';\n\t  Symbol.call(this, chart, options, symbol);\n\t}\n\tinherits(Start, Symbol);\n\t\n\tmodule.exports = Start;\n\t\n\t// Start.prototype.render = function() {\n\t//   if (this.next) {\n\t//     var lineLength = this.chart.options.symbols[this.symbolType]['line-length'] || this.chart.options['line-length'];\n\t\n\t//     var bottomPoint = this.getBottom();\n\t//     var topPoint = this.next.getTop();\n\t\n\t//     if (!this.next.isPositioned) {\n\t//       this.next.shiftY(this.getY() + this.height + lineLength);\n\t//       this.next.setX(bottomPoint.x - this.next.width/2);\n\t//       this.next.isPositioned = true;\n\t\n\t//       this.next.render();\n\t//     }\n\t//   }\n\t// };\n\t\n\t// Start.prototype.renderLines = function() {\n\t//   if (this.next) {\n\t//     this.drawLineTo(this.next);\n\t//   }\n\t// };\n\n\n/***/ }),\n/* 15 */\n/*!********************************************!*\\\n  !*** ./src/flowchart.symbol.subroutine.js ***!\n  \\********************************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar Symbol = __webpack_require__(/*! ./flowchart.symbol */ 2);\n\tvar inherits = __webpack_require__(/*! ./flowchart.helpers */ 1).inherits;\n\t\n\tfunction Subroutine(chart, options) {\n\t  var symbol = chart.paper.rect(0, 0, 0, 0);\n\t  options = options || {};\n\t  Symbol.call(this, chart, options, symbol);\n\t\n\t  symbol.attr({\n\t    width: this.text.getBBox().width + 4 * this.getAttr('text-margin')\n\t  });\n\t\n\t  this.text.attr({\n\t    'x': 2 * this.getAttr('text-margin')\n\t  });\n\t\n\t  var innerWrap = chart.paper.rect(0, 0, 0, 0);\n\t  innerWrap.attr({\n\t    x: this.getAttr('text-margin'),\n\t    stroke: this.getAttr('element-color'),\n\t    'stroke-width': this.getAttr('line-width'),\n\t    width: this.text.getBBox().width + 2 * this.getAttr('text-margin'),\n\t    height: this.text.getBBox().height + 2 * this.getAttr('text-margin'),\n\t    fill: this.getAttr('fill')\n\t  });\n\t  if (options.key) { innerWrap.node.id = options.key + 'i'; }\n\t\n\t  var font = this.getAttr('font');\n\t  var fontF = this.getAttr('font-family');\n\t  var fontW = this.getAttr('font-weight');\n\t\n\t  if (font) innerWrap.attr({ 'font': font });\n\t  if (fontF) innerWrap.attr({ 'font-family': fontF });\n\t  if (fontW) innerWrap.attr({ 'font-weight': fontW });\n\t\n\t  if (options.link) { innerWrap.attr('href', options.link); }\n\t  if (options.target) { innerWrap.attr('target', options.target); }\n\t  this.group.push(innerWrap);\n\t  innerWrap.insertBefore(this.text);\n\t\n\t  this.initialize();\n\t}\n\tinherits(Subroutine, Symbol);\n\t\n\tmodule.exports = Subroutine;\n\n\n/***/ }),\n/* 16 */\n/*!******************************!*\\\n  !*** ./src/jquery-plugin.js ***!\n  \\******************************/\n/***/ (function(module, exports, __webpack_require__) {\n\n\tif (typeof jQuery != 'undefined') {\n\t\tvar parse = __webpack_require__(/*! ./flowchart.parse */ 4);\n\t\t(function( $ ) {\n\t\t\t$.fn.flowChart = function( options ) {\n\t\t\t\treturn this.each(function() {\n\t\t\t\t\tvar $this = $(this);\n\t\t\t\t\tvar chart = parse($this.text());\n\t\t\t\t\t$this.html('');\n\t\t\t\t\tchart.drawSVG(this, options);\n\t\t\t\t});\n\t\t\t};\n\t\t})(jQuery); // eslint-disable-line\n\t}\n\n\n/***/ }),\n/* 17 */\n/*!**************************!*\\\n  !*** external \"Raphael\" ***!\n  \\**************************/\n/***/ (function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_17__;\n\n/***/ })\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// flowchart.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 6b54f9d606f4661d660e","require('./src/flowchart.shim');\nvar parse = require('./src/flowchart.parse');\nrequire('./src/jquery-plugin');\n\nvar FlowChart = {\n\tparse: parse\n};\n\nif (typeof window !== 'undefined') {\n\twindow.flowchart = FlowChart;\n}\n\nmodule.exports = FlowChart;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./index.js\n// module id = 0\n// module chunks = 0","function _defaults(options, defaultOptions) {\n  if (!options || typeof options === 'function') {\n    return defaultOptions;\n  }\n\n  var merged = {};\n  for (var attrname in defaultOptions) {\n    merged[attrname] = defaultOptions[attrname];\n  }\n\n  for (attrname in options) {\n    if (options[attrname]) {\n      if (typeof merged[attrname] === 'object') {\n        merged[attrname] = _defaults(merged[attrname], options[attrname]);\n      } else {\n        merged[attrname] = options[attrname];\n      }\n    }\n  }\n  return merged;\n}\n\nfunction _inherits(ctor, superCtor) {\n  if (typeof(Object.create) === 'function') {\n    // implementation from standard node.js 'util' module\n    ctor.super_ = superCtor;\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  } else {\n    // old school shim for old browsers\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n}\n\n// move dependent functions to a container so that\n// they can be overriden easier in no jquery environment (node.js)\nmodule.exports = {\n  defaults: _defaults,\n  inherits: _inherits\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.helpers.js\n// module id = 1\n// module chunks = 0","var drawAPI = require('./flowchart.functions');\nvar drawLine = drawAPI.drawLine;\nvar checkLineIntersection = drawAPI.checkLineIntersection;\n\nfunction Symbol(chart, options, symbol) {\n  this.chart = chart;\n  this.group = this.chart.paper.set();\n  this.symbol = symbol;\n  this.connectedTo = [];\n  this.symbolType = options.symbolType;\n  this.flowstate = (options.flowstate || 'future');\n  this.lineStyle = (options.lineStyle || {});\n  this.key = (options.key || '');\n\n  this.next_direction = options.next && options['direction_next'] ? options['direction_next'] : undefined;\n\n  this.text = this.chart.paper.text(0, 0, options.text);\n  //Raphael does not support the svg group tag so setting the text node id to the symbol node id plus t\n  if (options.key) { this.text.node.id = options.key + 't'; }\n  this.text.node.setAttribute('class', this.getAttr('class') + 't');\n\n  this.text.attr({\n    'text-anchor': 'start',\n    'x'          : this.getAttr('text-margin'),\n    'fill'       : this.getAttr('font-color'),\n    'font-size'  : this.getAttr('font-size')\n  });\n\n  var font  = this.getAttr('font');\n  var fontF = this.getAttr('font-family');\n  var fontW = this.getAttr('font-weight');\n\n  if (font) this.text.attr({ 'font': font });\n  if (fontF) this.text.attr({ 'font-family': fontF });\n  if (fontW) this.text.attr({ 'font-weight': fontW });\n\n  if (options.link) { this.text.attr('href', options.link); }\n  if (options.target) { this.text.attr('target', options.target); }\n\n  var maxWidth = this.getAttr('maxWidth');\n  if (maxWidth) {\n    // using this approach: http://stackoverflow.com/a/3153457/22466\n    var words = options.text.split(' ');\n    var tempText = \"\";\n    for (var i=0, ii=words.length; i<ii; i++) {\n      var word = words[i];\n      this.text.attr(\"text\", tempText + \" \" + word);\n      if (this.text.getBBox().width > maxWidth) {\n        tempText += \"\\n\" + word;\n      } else {\n        tempText += \" \" + word;\n      }\n    }\n    this.text.attr(\"text\", tempText.substring(1));\n  }\n\n  this.group.push(this.text);\n\n  if (symbol) {\n    var tmpMargin = this.getAttr('text-margin');\n\n    symbol.attr({\n      'fill' : this.getAttr('fill'),\n      'stroke' : this.getAttr('element-color'),\n      'stroke-width' : this.getAttr('line-width'),\n      'width' : this.text.getBBox().width + 2 * tmpMargin,\n      'height' : this.text.getBBox().height + 2 * tmpMargin\n    });\n\n    symbol.node.setAttribute('class', this.getAttr('class'));\n\n    if (options.link) { symbol.attr('href', options.link); }\n    if (options.target) { symbol.attr('target', options.target); }\n    if (options.key) { symbol.node.id = options.key; }\n\n    this.group.push(symbol);\n    symbol.insertBefore(this.text);\n\n    this.text.attr({\n      'y': symbol.getBBox().height/2\n    });\n\n    this.initialize();\n  }\n\n}\n\n/* Gets the attribute based on Flowstate, Symbol-Name and default, first found wins */\nSymbol.prototype.getAttr = function(attName) {\n  if (!this.chart) {\n    return undefined;\n  }\n  var opt3 = (this.chart.options) ? this.chart.options[attName] : undefined;\n  var opt2 = (this.chart.options.symbols) ? this.chart.options.symbols[this.symbolType][attName] : undefined;\n  var opt1;\n  if (this.chart.options.flowstate && this.chart.options.flowstate[this.flowstate]) {\n    opt1 = this.chart.options.flowstate[this.flowstate][attName];\n  }\n  return (opt1 || opt2 || opt3);\n};\n\nSymbol.prototype.initialize = function() {\n  this.group.transform('t' + this.getAttr('line-width') + ',' + this.getAttr('line-width'));\n\n  this.width = this.group.getBBox().width;\n  this.height = this.group.getBBox().height;\n};\n\nSymbol.prototype.getCenter = function() {\n  return {x: this.getX() + this.width/2,\n          y: this.getY() + this.height/2};\n};\n\nSymbol.prototype.getX = function() {\n  return this.group.getBBox().x;\n};\n\nSymbol.prototype.getY = function() {\n  return this.group.getBBox().y;\n};\n\nSymbol.prototype.shiftX = function(x) {\n  this.group.transform('t' + (this.getX() + x) + ',' + this.getY());\n};\n\nSymbol.prototype.setX = function(x) {\n  this.group.transform('t' + x + ',' + this.getY());\n};\n\nSymbol.prototype.shiftY = function(y) {\n  this.group.transform('t' + this.getX() + ',' + (this.getY() + y));\n};\n\nSymbol.prototype.setY = function(y) {\n  this.group.transform('t' + this.getX() + ',' + y);\n};\n\nSymbol.prototype.getTop = function() {\n  var y = this.getY();\n  var x = this.getX() + this.width/2;\n  return {x: x, y: y};\n};\n\nSymbol.prototype.getBottom = function() {\n  var y = this.getY() + this.height;\n  var x = this.getX() + this.width/2;\n  return {x: x, y: y};\n};\n\nSymbol.prototype.getLeft = function() {\n  var y = this.getY() + this.group.getBBox().height/2;\n  var x = this.getX();\n  return {x: x, y: y};\n};\n\nSymbol.prototype.getRight = function() {\n  var y = this.getY() + this.group.getBBox().height/2;\n  var x = this.getX() + this.group.getBBox().width;\n  return {x: x, y: y};\n};\n\nSymbol.prototype.getLineLength=function(){\n  return this.getAttr('line-length');\n}\n\nSymbol.prototype.render = function() {\n  if (this.next) {\n\n    var lineLength = this.getLineLength();// this.getAttr('line-length');\n\n    if (this.next_direction === 'right') {\n\n      var rightPoint = this.getRight();\n\n      if (!this.next.isPositioned) {\n\n        this.next.setY(rightPoint.y - this.next.height/2);\n        this.next.shiftX(this.group.getBBox().x + this.width + lineLength);\n\n        var self = this;\n        (function shift() {\n          var hasSymbolUnder = false;\n          var symb;\n          for (var i = 0, len = self.chart.symbols.length; i < len; i++) {\n            symb = self.chart.symbols[i];\n\n            var diff = Math.abs(symb.getCenter().x - self.next.getCenter().x);\n            if (symb.getCenter().y > self.next.getCenter().y && diff <= self.next.width/2) {\n              hasSymbolUnder = true;\n              break;\n            }\n          }\n\n          if (hasSymbolUnder) {\n            self.next.setX(symb.getX() + symb.width + lineLength);\n            shift();\n          }\n        })();\n\n        this.next.isPositioned = true;\n\n        this.next.render();\n      }\n    } else {\n      var bottomPoint = this.getBottom();\n\n      if (!this.next.isPositioned) {\n        this.next.shiftY(this.getY() + this.height + lineLength);\n        this.next.setX(bottomPoint.x - this.next.width/2);\n        this.next.isPositioned = true;\n\n        this.next.render();\n      }\n    }\n  }\n};\n\nSymbol.prototype.renderLines = function() {\n  if (this.next) {\n    if (this.next_direction) {\n      this.drawLineTo(this.next, '', this.next_direction);\n    } else {\n      this.drawLineTo(this.next);\n    }\n  }\n};\n\nSymbol.prototype.drawLineTo = function(symbol, text, origin) {\n  if (this.connectedTo.indexOf(symbol) < 0) {\n    this.connectedTo.push(symbol);\n  }\n\n  var x = this.getCenter().x,\n      y = this.getCenter().y,\n      top = this.getTop(),\n      right = this.getRight(),\n      bottom = this.getBottom(),\n      left = this.getLeft();\n\n  var symbolX = symbol.getCenter().x,\n      symbolY = symbol.getCenter().y,\n      symbolTop = symbol.getTop(),\n      symbolBottom = symbol.getBottom(),\n      symbolRight = symbol.getRight(),\n      symbolLeft = symbol.getLeft();\n\n  var isOnSameColumn = x === symbolX,\n      isOnSameLine = bottom.y > symbolTop.y && top.y < symbolBottom.y, // y === symbolY,\n      isUnder = bottom.y < symbolTop.y, // y < symbolY && symbolTop.y < bottom,\n      isUpper = y > symbolY || this === symbol,\n      isLeft = x > symbolX,\n      isRight = x < symbolX;\n\n  var maxX = 0,\n      line,\n      lineLength = this.getLineLength();// this.getAttr('line-length'),\n      lineWith = this.getAttr('line-width');\n\n  if ((!origin || origin === 'bottom') && isOnSameColumn && isUnder) {\n    line = drawLine(this.chart, bottom, symbolTop, text);\n    this.bottomStart = true;\n    symbol.topEnd = true;\n    maxX = bottom.x;\n  } else if ((!origin || origin === 'right') && isOnSameLine && isRight) {\n    line = drawLine(this.chart, right, symbolLeft, text);\n    this.rightStart = true;\n    symbol.leftEnd = true;\n    maxX = symbolLeft.x;\n  } else if ((!origin || origin === 'left') && isOnSameLine && isLeft) {\n    line = drawLine(this.chart, left, symbolRight, text);\n    this.leftStart = true;\n    symbol.rightEnd = true;\n    maxX = symbolRight.x;\n  } else if ((!origin || origin === 'right') && isOnSameColumn && isUpper) {\n    line = drawLine(this.chart, right, [\n      {x: right.x + lineLength/2, y: right.y},\n      {x: right.x + lineLength/2, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y}\n    ], text);\n    this.rightStart = true;\n    symbol.topEnd = true;\n    maxX = right.x + lineLength/2;\n  } else if ((!origin || origin === 'right') && isOnSameColumn && isUnder) {\n    line = drawLine(this.chart, right, [\n      {x: right.x + lineLength/2, y: right.y},\n      {x: right.x + lineLength/2, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y}\n    ], text);\n    this.rightStart = true;\n    symbol.topEnd = true;\n    maxX = right.x + lineLength/2;\n  } else if ((!origin || origin === 'bottom') && isLeft) {\n    if (this.leftEnd && isUpper) {\n      line = drawLine(this.chart, bottom, [\n        {x: bottom.x, y: bottom.y + lineLength/2},\n        {x: bottom.x + (bottom.x - symbolTop.x)/2, y: bottom.y + lineLength/2},\n        {x: bottom.x + (bottom.x - symbolTop.x)/2, y: symbolTop.y - lineLength/2},\n        {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n        {x: symbolTop.x, y: symbolTop.y}\n      ], text);\n    } else {\n      line = drawLine(this.chart, bottom, [\n        {x: bottom.x, y: symbolTop.y - lineLength/2},\n        {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n        {x: symbolTop.x, y: symbolTop.y}\n      ], text);\n    }\n    this.bottomStart = true;\n    symbol.topEnd = true;\n    maxX = bottom.x + (bottom.x - symbolTop.x)/2;\n  } else if ((!origin || origin === 'bottom') && isRight) {\n    line = drawLine(this.chart, bottom, [\n      {x: bottom.x, y: bottom.y + lineLength/2},\n      {x: bottom.x + (bottom.x - symbolTop.x)/2, y: bottom.y + lineLength/2},\n      {x: bottom.x + (bottom.x - symbolTop.x)/2, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y}\n    ], text);\n    this.bottomStart = true;\n    symbol.topEnd = true;\n    maxX = bottom.x + (bottom.x - symbolTop.x)/2;\n  } else if ((origin && origin === 'right') && isLeft) {\n    line = drawLine(this.chart, right, [\n      {x: right.x + lineLength/2, y: right.y},\n      {x: right.x + lineLength/2, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y}\n    ], text);\n    this.rightStart = true;\n    symbol.topEnd = true;\n    maxX = right.x + lineLength/2;\n  } else if ((origin && origin === 'right') && isRight) {\n    line = drawLine(this.chart, right, [\n      {x: symbolTop.x, y: right.y},\n      {x: symbolTop.x, y: symbolTop.y}\n    ], text);\n    this.rightStart = true;\n    symbol.topEnd = true;\n    maxX = right.x + lineLength/2;\n  } else if ((origin && origin === 'bottom') && isOnSameColumn && isUpper) {\n    line = drawLine(this.chart, bottom, [\n      {x: bottom.x, y: bottom.y + lineLength/2},\n      {x: right.x + lineLength/2, y: bottom.y + lineLength/2},\n      {x: right.x + lineLength/2, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y}\n    ], text);\n    this.bottomStart = true;\n    symbol.topEnd = true;\n    maxX = bottom.x + lineLength/2;\n  } else if ((origin === 'left') && isOnSameColumn && isUpper) {\n    var diffX = left.x - lineLength/2;\n    if (symbolLeft.x < left.x) {\n      diffX = symbolLeft.x - lineLength/2;\n    }\n    line = drawLine(this.chart, left, [\n      {x: diffX, y: left.y},\n      {x: diffX, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y}\n    ], text);\n    this.leftStart = true;\n    symbol.topEnd = true;\n    maxX = left.x;\n  } else if ((origin === 'left')) {\n    line = drawLine(this.chart, left, [\n      {x: symbolTop.x + (left.x - symbolTop.x)/ 2, y: left.y},\n      {x: symbolTop.x + (left.x - symbolTop.x)/ 2, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y - lineLength/2},\n      {x: symbolTop.x, y: symbolTop.y}\n    ], text);\n    this.leftStart = true;\n    symbol.topEnd = true;\n    maxX = left.x;\n  }\n\n  //update line style\n  if (this.lineStyle[symbol.key] && line){\n      line.attr( this.lineStyle[symbol.key]);\n  }\n\n  if (line) {\n    for (var l = 0, llen = this.chart.lines.length; l < llen; l++) {\n      var otherLine = this.chart.lines[l];\n      var len;\n\n      var ePath = otherLine.attr('path'),\n          lPath = line.attr('path');\n\n      for (var iP = 0, lenP = ePath.length - 1; iP < lenP; iP++) {\n        var newPath = [];\n        newPath.push(['M', ePath[iP][1], ePath[iP][2]]);\n        newPath.push(['L', ePath[iP + 1][1], ePath[iP + 1][2]]);\n\n        var line1_from_x = newPath[0][1];\n        var line1_from_y = newPath[0][2];\n        var line1_to_x = newPath[1][1];\n        var line1_to_y = newPath[1][2];\n\n        for (var lP = 0, lenlP = lPath.length - 1; lP < lenlP; lP++) {\n          var newLinePath = [];\n          newLinePath.push(['M', lPath[lP][1], lPath[lP][2]]);\n          newLinePath.push(['L', lPath[lP + 1][1], lPath[lP + 1][2]]);\n\n          var line2_from_x = newLinePath[0][1];\n          var line2_from_y = newLinePath[0][2];\n          var line2_to_x = newLinePath[1][1];\n          var line2_to_y = newLinePath[1][2];\n\n          var res = checkLineIntersection(line1_from_x, line1_from_y, line1_to_x, line1_to_y, line2_from_x, line2_from_y, line2_to_x, line2_to_y);\n          if (res.onLine1 && res.onLine2) {\n\n            var newSegment;\n            if (line2_from_y === line2_to_y) {\n              if (line2_from_x > line2_to_x) {\n                newSegment = ['L', res.x + lineWith * 2,  line2_from_y];\n                lPath.splice(lP + 1, 0, newSegment);\n                newSegment = ['C', res.x + lineWith * 2,  line2_from_y, res.x, line2_from_y - lineWith * 4, res.x - lineWith * 2, line2_from_y];\n                lPath.splice(lP + 2, 0, newSegment);\n                line.attr('path', lPath);\n              } else {\n                newSegment = ['L', res.x - lineWith * 2,  line2_from_y];\n                lPath.splice(lP + 1, 0, newSegment);\n                newSegment = ['C', res.x - lineWith * 2,  line2_from_y, res.x, line2_from_y - lineWith * 4, res.x + lineWith * 2, line2_from_y];\n                lPath.splice(lP + 2, 0, newSegment);\n                line.attr('path', lPath);\n              }\n            } else {\n              if (line2_from_y > line2_to_y) {\n                newSegment = ['L', line2_from_x, res.y + lineWith * 2];\n                lPath.splice(lP + 1, 0, newSegment);\n                newSegment = ['C', line2_from_x, res.y + lineWith * 2, line2_from_x + lineWith * 4, res.y, line2_from_x, res.y - lineWith * 2];\n                lPath.splice(lP + 2, 0, newSegment);\n                line.attr('path', lPath);\n              } else {\n                newSegment = ['L', line2_from_x, res.y - lineWith * 2];\n                lPath.splice(lP + 1, 0, newSegment);\n                newSegment = ['C', line2_from_x, res.y - lineWith * 2, line2_from_x + lineWith * 4, res.y, line2_from_x, res.y + lineWith * 2];\n                lPath.splice(lP + 2, 0, newSegment);\n                line.attr('path', lPath);\n              }\n            }\n\n            lP += 2;\n            len += 2;\n          }\n        }\n      }\n    }\n\n    this.chart.lines.push(line);\n  }\n\n  if (!this.chart.maxXFromLine || (this.chart.maxXFromLine && maxX > this.chart.maxXFromLine)) {\n    this.chart.maxXFromLine = maxX;\n  }\n};\n\nmodule.exports = Symbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.symbol.js\n// module id = 2\n// module chunks = 0","function drawPath(chart, location, points) {\n  var i, len;\n  var path = 'M{0},{1}';\n  for (i = 2, len = 2 * points.length + 2; i < len; i+=2) {\n    path += ' L{' + i + '},{' + (i + 1) + '}';\n  }\n  var pathValues = [location.x, location.y];\n  for (i = 0, len = points.length; i < len; i++) {\n    pathValues.push(points[i].x);\n    pathValues.push(points[i].y);\n  }\n  var symbol = chart.paper.path(path, pathValues);\n  symbol.attr('stroke', chart.options['element-color']);\n  symbol.attr('stroke-width', chart.options['line-width']);\n\n  var font = chart.options.font;\n  var fontF = chart.options['font-family'];\n  var fontW = chart.options['font-weight'];\n\n  if (font) symbol.attr({ 'font': font });\n  if (fontF) symbol.attr({ 'font-family': fontF });\n  if (fontW) symbol.attr({ 'font-weight': fontW });\n\n  return symbol;\n}\n\nfunction drawLine(chart, from, to, text) {\n  var i, len;\n\n  if (Object.prototype.toString.call(to) !== '[object Array]') {\n    to = [to];\n  }\n\n  var path = 'M{0},{1}';\n  for (i = 2, len = 2 * to.length + 2; i < len; i+=2) {\n    path += ' L{' + i + '},{' + (i + 1) + '}';\n  }\n  var pathValues = [from.x, from.y];\n  for (i = 0, len = to.length; i < len; i++) {\n    pathValues.push(to[i].x);\n    pathValues.push(to[i].y);\n  }\n\n  var line = chart.paper.path(path, pathValues);\n  line.attr({\n    stroke: chart.options['line-color'],\n    'stroke-width': chart.options['line-width'],\n    'arrow-end': chart.options['arrow-end']\n  });\n\n  var font = chart.options.font;\n  var fontF = chart.options['font-family'];\n  var fontW = chart.options['font-weight'];\n\n  if (font) line.attr({ 'font': font });\n  if (fontF) line.attr({ 'font-family': fontF });\n  if (fontW) line.attr({ 'font-weight': fontW });\n\n  if (text) {\n\n    var centerText = false;\n\n    var textPath = chart.paper.text(0, 0, text);\n\n    var isHorizontal = false;\n    var firstTo = to[0];\n\n    if (from.y === firstTo.y) {\n      isHorizontal = true;\n    }\n\n    var x = 0,\n        y = 0;\n\n    if (centerText) {\n      if (from.x > firstTo.x) {\n        x = from.x - (from.x - firstTo.x)/2;\n      } else {\n        x = firstTo.x - (firstTo.x - from.x)/2;\n      }\n\n      if (from.y > firstTo.y) {\n        y = from.y - (from.y - firstTo.y)/2;\n      } else {\n        y = firstTo.y - (firstTo.y - from.y)/2;\n      }\n\n      if (isHorizontal) {\n        x -= textPath.getBBox().width/2;\n        y -= chart.options['text-margin'];\n      } else {\n        x += chart.options['text-margin'];\n        y -= textPath.getBBox().height/2;\n      }\n    } else {\n      x = from.x;\n      y = from.y;\n\n      if (isHorizontal) {\n        x += chart.options['text-margin']/2;\n        y -= chart.options['text-margin'];\n      } else {\n        x += chart.options['text-margin']/2;\n        y += chart.options['text-margin'];\n      }\n    }\n\n    textPath.attr({\n      'text-anchor': 'start',\n      'font-size': chart.options['font-size'],\n      'fill': chart.options['font-color'],\n      x: x,\n      y: y\n    });\n\n    if (font) textPath.attr({ 'font': font });\n    if (fontF) textPath.attr({ 'font-family': fontF });\n    if (fontW) textPath.attr({ 'font-weight': fontW });\n  }\n\n  return line;\n}\n\nfunction checkLineIntersection(line1StartX, line1StartY, line1EndX, line1EndY, line2StartX, line2StartY, line2EndX, line2EndY) {\n  // if the lines intersect, the result contains the x and y of the intersection (treating the lines as infinite) and booleans for whether line segment 1 or line segment 2 contain the point\n  var denominator, a, b, numerator1, numerator2, result = {\n    x: null,\n    y: null,\n    onLine1: false,\n    onLine2: false\n  };\n  denominator = ((line2EndY - line2StartY) * (line1EndX - line1StartX)) - ((line2EndX - line2StartX) * (line1EndY - line1StartY));\n  if (denominator === 0) {\n    return result;\n  }\n  a = line1StartY - line2StartY;\n  b = line1StartX - line2StartX;\n  numerator1 = ((line2EndX - line2StartX) * a) - ((line2EndY - line2StartY) * b);\n  numerator2 = ((line1EndX - line1StartX) * a) - ((line1EndY - line1StartY) * b);\n  a = numerator1 / denominator;\n  b = numerator2 / denominator;\n\n  // if we cast these lines infinitely in both directions, they intersect here:\n  result.x = line1StartX + (a * (line1EndX - line1StartX));\n  result.y = line1StartY + (a * (line1EndY - line1StartY));\n  /*\n  // it is worth noting that this should be the same as:\n  x = line2StartX + (b * (line2EndX - line2StartX));\n  y = line2StartX + (b * (line2EndY - line2StartY));\n  */\n  // if line1 is a segment and line2 is infinite, they intersect if:\n  if (a > 0 && a < 1) {\n    result.onLine1 = true;\n  }\n  // if line2 is a segment and line1 is infinite, they intersect if:\n  if (b > 0 && b < 1) {\n    result.onLine2 = true;\n  }\n  // if line1 and line2 are segments, they intersect if both of the above are true\n  return result;\n}\n\nmodule.exports = {\n\tdrawPath: drawPath,\n\tdrawLine: drawLine,\n\tcheckLineIntersection: checkLineIntersection\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.functions.js\n// module id = 3\n// module chunks = 0","var FlowChart = require('./flowchart.chart');\nvar Start = require('./flowchart.symbol.start');\nvar End = require('./flowchart.symbol.end');\nvar Operation = require('./flowchart.symbol.operation');\nvar Database = require('./flowchart.symbol.database');\nvar InputOutput = require('./flowchart.symbol.inputoutput');\nvar Subroutine = require('./flowchart.symbol.subroutine');\nvar Condition = require('./flowchart.symbol.condition');\nvar Cloud = require('./flowchart.symbol.cloud');\n\nfunction parse(input) {\n  input = input || '';\n  input = input.trim();\n\n  var chart = {\n    symbols: {},\n    start: null,\n    drawSVG: function(container, options) {\n      var self = this;\n      if (this.diagram) {\n        this.diagram.clean();\n      }\n\n      var diagram = new FlowChart(container, options);\n      this.diagram = diagram;\n      var dispSymbols = {};\n\n      function getDisplaySymbol(s) {\n        if (dispSymbols[s.key]) {\n          return dispSymbols[s.key];\n        }\n        switch (s.symbolType) {\n          case 'start':\n            dispSymbols[s.key] = new Start(diagram, s);\n            break;\n          case 'end':\n            dispSymbols[s.key] = new End(diagram, s);\n            break;\n          case 'operation':\n            dispSymbols[s.key] = new Operation(diagram, s);\n            break;\n          case 'inputoutput':\n            dispSymbols[s.key] = new InputOutput(diagram, s);\n            break;\n          case 'subroutine':\n            dispSymbols[s.key] = new Subroutine(diagram, s);\n            break;\n          case 'condition':\n            dispSymbols[s.key] = new Condition(diagram, s);\n            break;\n          case 'database':\n            dispSymbols[s.key] = new Database(diagram, s);\n            break;\n          case 'cloud':\n            dispSymbols[s.key] = new Cloud(diagram, s);\n            break;\n          default:\n            return new Error('Wrong symbol type!');\n        }\n\n        return dispSymbols[s.key];\n      }\n\n      (function constructChart(s, prevDisp, prev) {\n        var dispSymb = getDisplaySymbol(s);\n\n        if (self.start === s) {\n          diagram.startWith(dispSymb);\n        } else if (prevDisp && prev && !prevDisp.pathOk) {\n          if (prevDisp instanceof(Condition)) {\n            if (prev.yes === s) {\n              prevDisp.yes(dispSymb);\n            }\n            if (prev.no === s) {\n              prevDisp.no(dispSymb);\n            }\n          } else {\n            prevDisp.then(dispSymb);\n          }\n        }\n\n        if (dispSymb.pathOk) {\n          return dispSymb;\n        }\n\n        if (dispSymb instanceof(Condition)) {\n          if (s.yes) {\n            constructChart(s.yes, dispSymb, s);\n          }\n          if (s.no) {\n            constructChart(s.no, dispSymb, s);\n          }\n        } else if (s.next) {\n          constructChart(s.next, dispSymb, s);\n        }\n\n        return dispSymb;\n      })(this.start);\n\n      diagram.render();\n    },\n    clean: function() {\n      this.diagram.clean();\n    }\n  };\n\n  var lines = [];\n  var prevBreak = 0;\n  for (var i0 = 1, i0len = input.length; i0 < i0len; i0++) {\n    if(input[i0] === '\\n' && input[i0 - 1] !== '\\\\') {\n      var line0 = input.substring(prevBreak, i0);\n      prevBreak = i0 + 1;\n      lines.push(line0.replace(/\\\\\\n/g, '\\n'));\n    }\n  }\n\n  if(prevBreak < input.length) {\n    lines.push(input.substr(prevBreak));\n  }\n\n  for (var l = 1, len = lines.length; l < len;) {\n    var currentLine = lines[l];\n\n    if (currentLine.indexOf('->') < 0 && currentLine.indexOf('=>') < 0 && currentLine.indexOf('@>') < 0) {\n      lines[l - 1] += '\\n' + currentLine;\n      lines.splice(l, 1);\n      len--;\n    } else {\n      l++;\n    }\n  }\n\n  function getStyle(s){\n    var startIndex = s.indexOf('(') + 1;\n    var endIndex = s.indexOf(')');\n    if (startIndex >= 0 && endIndex >= 0) {\n      return s.substring(startIndex,endIndex);\n    }\n    return '{}';\n  }\n\n  function getSymbol(s) {\n    var startIndex = s.indexOf('(') + 1;\n    var endIndex = s.indexOf(')');\n    if (startIndex >= 0 && endIndex >= 0) {\n      return chart.symbols[s.substring(0, startIndex - 1)];\n    }\n    return chart.symbols[s];\n  }\n\n  function getNextPath(s) {\n    var next = 'next';\n    var startIndex = s.indexOf('(') + 1;\n    var endIndex = s.indexOf(')');\n    if (startIndex >= 0 && endIndex >= 0) {\n      next = flowSymb.substring(startIndex, endIndex);\n      if (next.indexOf(',') < 0) {\n        if (next !== 'yes' && next !== 'no') {\n          next = 'next, ' + next;\n        }\n      }\n    }\n    return next;\n  }\n\n  while (lines.length > 0) {\n    var line = lines.splice(0, 1)[0].trim();\n\n    if (line.indexOf('=>') >= 0) {\n      // definition\n      var parts = line.split('=>');\n      var symbol = {\n        key: parts[0].replace(/\\(.*\\)/, ''),\n        symbolType: parts[1],\n        text: null,\n        link: null,\n        target: null,\n        flowstate: null,\n        lineStyle: {},\n        params: {}\n      };\n\n      //parse parameters\n      var params = parts[0].match(/\\((.*)\\)/);\n      if (params && params.length > 1){\n        var entries = params[1].split(',');\n        for(var i = 0; i < entries.length; i++) {\n          var entry = entries[0].split('=');\n          if (entry.length == 2){\n            symbol.params[entry[0]] = entry[1];\n          }\n        }\n      }\n\n      var sub;\n\n      if (symbol.symbolType.indexOf(': ') >= 0) {\n        sub = symbol.symbolType.split(': ');\n        symbol.symbolType = sub.shift();\n        symbol.text = sub.join(': ');\n      }\n\n      if (symbol.text && symbol.text.indexOf(':>') >= 0) {\n        sub = symbol.text.split(':>');\n        symbol.text = sub.shift();\n        symbol.link = sub.join(':>');\n      } else if (symbol.symbolType.indexOf(':>') >= 0) {\n        sub = symbol.symbolType.split(':>');\n        symbol.symbolType = sub.shift();\n        symbol.link = sub.join(':>');\n      }\n\n      if (symbol.symbolType.indexOf('\\n') >= 0) {\n        symbol.symbolType = symbol.symbolType.split('\\n')[0];\n      }\n\n      /* adding support for links */\n      if (symbol.link) {\n        var startIndex = symbol.link.indexOf('[') + 1;\n        var endIndex = symbol.link.indexOf(']');\n        if (startIndex >= 0 && endIndex >= 0) {\n          symbol.target = symbol.link.substring(startIndex, endIndex);\n          symbol.link = symbol.link.substring(0, startIndex - 1);\n        }\n      }\n      /* end of link support */\n\n      /* adding support for flowstates */\n      if (symbol.text) {\n        if (symbol.text.indexOf('|') >= 0) {\n          var txtAndState = symbol.text.split('|');\n          symbol.flowstate = txtAndState.pop().trim();\n          symbol.text = txtAndState.join('|');\n        }\n      }\n      /* end of flowstate support */\n\n      chart.symbols[symbol.key] = symbol;\n\n    } else if (line.indexOf('->') >= 0) {\n      // flow\n      var flowSymbols = line.split('->');\n      for (var i = 0, lenS = flowSymbols.length; i < lenS; i++) {\n        var flowSymb = flowSymbols[i];\n\n        var realSymb = getSymbol(flowSymb);\n        var next = getNextPath(flowSymb);\n\n        var direction = null;\n        if (next.indexOf(',') >= 0) {\n          var condOpt = next.split(',');\n          next = condOpt[0];\n          direction = condOpt[1].trim();\n        }\n\n        if (!chart.start) {\n          chart.start = realSymb;\n        }\n\n        if (i + 1 < lenS) {\n          var nextSymb = flowSymbols[i + 1];\n          realSymb[next] = getSymbol(nextSymb);\n          realSymb['direction_' + next] = direction;\n          direction = null;\n        }\n      }\n    } else if (line.indexOf('@>') >= 0) {\n\n      // line style\n      var lineStyleSymbols = line.split('@>');\n      for (var i = 0, lenS = lineStyleSymbols.length; i < lenS; i++) {\n\n        if ((i+1) != lenS){\n          var curSymb = getSymbol(lineStyleSymbols[i]);\n          var nextSymb = getSymbol(lineStyleSymbols[i+1])\n\n          curSymb['lineStyle'][nextSymb.key] = JSON.parse(getStyle(lineStyleSymbols[i+1]));\n        }\n      }\n    }\n\n  }\n  return chart;\n}\n\nmodule.exports = parse;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.parse.js\n// module id = 4\n// module chunks = 0","var Symbol = require('./flowchart.symbol');\nvar inherits = require('./flowchart.helpers').inherits;\nvar drawAPI = require('./flowchart.functions');\nvar drawPath = drawAPI.drawPath;\n\nfunction Condition(chart, options) {\n  options = options || {};\n  Symbol.call(this, chart, options);\n  this.textMargin = this.getAttr('text-margin');\n  this.yes_direction = 'bottom';\n  this.no_direction = 'right';\n  this.params = options.params;\n  if (options.yes && options.direction_yes && options.no && !options.direction_no) {\n    if (options.direction_yes === 'right') {\n      this.no_direction = 'bottom';\n      this.yes_direction = 'right';\n    } else {\n      this.no_direction = 'right';\n      this.yes_direction = 'bottom';\n    }\n  } else if (options.yes && !options.direction_yes && options.no && options.direction_no) {\n    if (options.direction_no === 'right') {\n      this.yes_direction = 'bottom';\n      this.no_direction = 'right';\n    } else {\n      this.yes_direction = 'right';\n      this.no_direction = 'bottom';\n    }\n  } else {\n    this.yes_direction = 'bottom';\n    this.no_direction = 'right';\n  }\n\n  this.yes_direction = this.yes_direction || 'bottom';\n  this.no_direction = this.no_direction || 'right';\n\n  this.text.attr({\n    x: this.textMargin * 2\n  });\n\n  var width = this.text.getBBox().width + 3 * this.textMargin;\n  width += width/2;\n  var height = this.text.getBBox().height + 2 * this.textMargin;\n  height += height/2;\n  height = Math.max(width * 0.5, height);\n  var startX = width/4;\n  var startY = height/4;\n\n  this.text.attr({\n    x: startX + this.textMargin/2\n  });\n\n  var start = {x: startX, y: startY};\n  var points = [\n    {x: startX - width/4, y: startY + height/4},\n    {x: startX - width/4 + width/2, y: startY + height/4 + height/2},\n    {x: startX - width/4 + width, y: startY + height/4},\n    {x: startX - width/4 + width/2, y: startY + height/4 - height/2},\n    {x: startX - width/4, y: startY + height/4}\n  ];\n\n  var symbol = drawPath(chart, start, points);\n\n  symbol.attr({\n    stroke: this.getAttr('element-color'),\n    'stroke-width': this.getAttr('line-width'),\n    fill: this.getAttr('fill')\n  });\n  if (options.link) { symbol.attr('href', options.link); }\n  if (options.target) { symbol.attr('target', options.target); }\n  if (options.key) { symbol.node.id = options.key; }\n  symbol.node.setAttribute('class', this.getAttr('class'));\n\n  this.text.attr({\n    y: symbol.getBBox().height/2\n  });\n\n  this.group.push(symbol);\n  symbol.insertBefore(this.text);\n\n  this.initialize();\n}\ninherits(Condition, Symbol);\n\nCondition.prototype.render = function() {\n\n  if (this.yes_direction) {\n    this[this.yes_direction + '_symbol'] = this.yes_symbol;\n  }\n\n  if (this.no_direction) {\n    this[this.no_direction + '_symbol'] = this.no_symbol;\n  }\n\n  var lineLength = this.getAttr('line-length');\n\n  if (this.bottom_symbol) {\n    var bottomPoint = this.getBottom();\n\n    if (!this.bottom_symbol.isPositioned) {\n      this.bottom_symbol.shiftY(this.getY() + this.height + lineLength);\n      this.bottom_symbol.setX(bottomPoint.x - this.bottom_symbol.width/2);\n      this.bottom_symbol.isPositioned = true;\n\n      this.bottom_symbol.render();\n    }\n  }\n\n  if (this.right_symbol) {\n    var rightPoint = this.getRight();\n\n    if (!this.right_symbol.isPositioned) {\n\n      this.right_symbol.setY(rightPoint.y - this.right_symbol.height/2);\n      this.right_symbol.shiftX(this.group.getBBox().x + this.width + lineLength);\n\n      var self = this;\n      (function shift() {\n        var hasSymbolUnder = false;\n        var symb;\n        for (var i = 0, len = self.chart.symbols.length; i < len; i++) {\n          symb = self.chart.symbols[i];\n\n          if (!self.params['align-next'] || self.params['align-next'] !== 'no') { \n            var diff = Math.abs(symb.getCenter().x - self.right_symbol.getCenter().x);\n            if (symb.getCenter().y > self.right_symbol.getCenter().y && diff <= self.right_symbol.width/2) {\n              hasSymbolUnder = true;\n              break;\n            }\n          }\n        }\n\n        if (hasSymbolUnder) {\n          self.right_symbol.setX(symb.getX() + symb.width + lineLength);\n          shift();\n        }\n      })();\n\n      this.right_symbol.isPositioned = true;\n\n      this.right_symbol.render();\n    }\n  }\n};\n\nCondition.prototype.renderLines = function() {\n  if (this.yes_symbol) {\n    this.drawLineTo(this.yes_symbol, this.getAttr('yes-text'), this.yes_direction);\n  }\n\n  if (this.no_symbol) {\n    this.drawLineTo(this.no_symbol, this.getAttr('no-text'), this.no_direction);\n  }\n};\n\nmodule.exports = Condition;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.symbol.condition.js\n// module id = 5\n// module chunks = 0","var Raphael = require('raphael');\nvar defaults = require('./flowchart.helpers').defaults;\nvar defaultOptions = require('./flowchart.defaults');\nvar Condition = require('./flowchart.symbol.condition');\n\nfunction FlowChart(container, options) {\n  options = options || {};\n\n  this.paper = new Raphael(container);\n\n  this.options = defaults(options, defaultOptions);\n\n  this.symbols = [];\n  this.lines = [];\n  this.start = null;\n}\n\nFlowChart.prototype.handle = function(symbol) {\n  if (this.symbols.indexOf(symbol) <= -1) {\n    this.symbols.push(symbol);\n  }\n\n  var flowChart = this;\n\n  if (symbol instanceof(Condition)) {\n    symbol.yes = function(nextSymbol) {\n      symbol.yes_symbol = nextSymbol;\n      if(symbol.no_symbol) {\n        symbol.pathOk = true;\n      }\n      return flowChart.handle(nextSymbol);\n    };\n    symbol.no = function(nextSymbol) {\n      symbol.no_symbol = nextSymbol;\n      if(symbol.yes_symbol) {\n        symbol.pathOk = true;\n      }\n      return flowChart.handle(nextSymbol);\n    };\n  } else {\n    symbol.then = function(nextSymbol) {\n      symbol.next = nextSymbol;\n      symbol.pathOk = true;\n      return flowChart.handle(nextSymbol);\n    };\n  }\n\n  return symbol;\n};\n\nFlowChart.prototype.startWith = function(symbol) {\n  this.start = symbol;\n  return this.handle(symbol);\n};\n\nFlowChart.prototype.render = function() {\n  var maxWidth = 0,\n      maxHeight = 0,\n      i = 0,\n      len = 0,\n      maxX = 0,\n      maxY = 0,\n      minX = 0,\n      minY = 0,\n      symbol,\n      line;\n\n  for (i = 0, len = this.symbols.length; i < len; i++) {\n    symbol = this.symbols[i];\n    if (symbol.width > maxWidth) {\n      maxWidth = symbol.width;\n    }\n    if (symbol.height > maxHeight) {\n      maxHeight = symbol.height;\n    }\n  }\n\n  for (i = 0, len = this.symbols.length; i < len; i++) {\n    symbol = this.symbols[i];\n    symbol.shiftX(this.options.x + (maxWidth - symbol.width)/2 + this.options['line-width']);\n    symbol.shiftY(this.options.y + (maxHeight - symbol.height)/2 + this.options['line-width']);\n  }\n\n  this.start.render();\n  // for (i = 0, len = this.symbols.length; i < len; i++) {\n  //   symbol = this.symbols[i];\n  //   symbol.render();\n  // }\n\n  for (i = 0, len = this.symbols.length; i < len; i++) {\n    symbol = this.symbols[i];\n    symbol.renderLines();\n  }\n\n  maxX = this.maxXFromLine;\n\n  var x;\n  var y;\n\n  for (i = 0, len = this.symbols.length; i < len; i++) {\n    symbol = this.symbols[i];\n    x = symbol.getX() + symbol.width;\n    y = symbol.getY() + symbol.height;\n    if (x > maxX) {\n      maxX = x;\n    }\n    if (y > maxY) {\n      maxY = y;\n    }\n  }\n\n  for (i = 0, len = this.lines.length; i < len; i++) {\n    line = this.lines[i].getBBox();\n    x = line.x;\n    y = line.y;\n    var x2 = line.x2;\n    var y2 = line.y2;\n    if (x < minX) {\n      minX = x;\n    }\n    if (y < minY) {\n      minY = y;\n    }\n    if (x2 > maxX) {\n      maxX = x2;\n    }\n    if (y2 > maxY) {\n      maxY = y2;\n    }\n  }\n\n  var scale = this.options['scale'];\n  var lineWidth = this.options['line-width'];\n\n  if (minX < 0) minX -= lineWidth;\n  if (minY < 0) minY -= lineWidth;\n\n  var width = maxX + lineWidth - minX;\n  var height = maxY + lineWidth - minY;\n\n  this.paper.setSize(width * scale, height * scale);\n  this.paper.setViewBox(minX, minY, width, height, true);\n};\n\nFlowChart.prototype.clean = function() {\n  if (this.paper) {\n    var paperDom = this.paper.canvas;\n    paperDom.parentNode.removeChild(paperDom);\n  }\n};\n\nmodule.exports = FlowChart;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.chart.js\n// module id = 6\n// module chunks = 0","// defaults\nmodule.exports = {\n  'x': 0,\n  'y': 0,\n  'line-width': 3,\n  'line-length': 50,\n  'text-margin': 10,\n  'font-size': 14,\n  'font-color': 'black',\n  // 'font': 'normal',\n  // 'font-family': 'calibri',\n  // 'font-weight': 'normal',\n  'line-color': 'black',\n  'element-color': 'black',\n  'fill': 'white',\n  'yes-text': 'yes',\n  'no-text': 'no',\n  'arrow-end': 'block',\n  'class': 'flowchart',\n  'scale': 1,\n  'symbols': {\n    'start': {},\n    'end': {},\n    'condition': {},\n    'inputoutput': {},\n    'operation': {},\n    'subroutine': {},\n    'database':{},\n    'cloud':{}\n  }//,\n  // 'flowstate' : {\n  //   'past' : { 'fill': '#CCCCCC', 'font-size': 12},\n  //   'current' : {'fill': 'yellow', 'font-color': 'red', 'font-weight': 'bold'},\n  //   'future' : { 'fill': '#FFFF99'},\n  //   'invalid': {'fill': '#444444'}\n  // }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.defaults.js\n// module id = 7\n// module chunks = 0","// add indexOf to non ECMA-262 standard compliant browsers\nif (!Array.prototype.indexOf) {\n  Array.prototype.indexOf = function (searchElement /*, fromIndex */ ) {\n    \"use strict\";\n    if (this === null) {\n      throw new TypeError();\n    }\n    var t = Object(this);\n    var len = t.length >>> 0;\n    if (len === 0) {\n      return -1;\n    }\n    var n = 0;\n    if (arguments.length > 0) {\n      n = Number(arguments[1]);\n      if (n != n) { // shortcut for verifying if it's NaN\n        n = 0;\n      } else if (n !== 0 && n != Infinity && n != -Infinity) {\n        n = (n > 0 || -1) * Math.floor(Math.abs(n));\n      }\n    }\n    if (n >= len) {\n      return -1;\n    }\n    var k = n >= 0 ? n : Math.max(len - Math.abs(n), 0);\n    for (; k < len; k++) {\n      if (k in t && t[k] === searchElement) {\n        return k;\n      }\n    }\n    return -1;\n  };\n}\n\n// add lastIndexOf to non ECMA-262 standard compliant browsers\nif (!Array.prototype.lastIndexOf) {\n  Array.prototype.lastIndexOf = function(searchElement /*, fromIndex*/) {\n    \"use strict\";\n    if (this === null) {\n      throw new TypeError();\n    }\n    var t = Object(this);\n    var len = t.length >>> 0;\n    if (len === 0) {\n      return -1;\n    }\n    var n = len;\n    if (arguments.length > 1) {\n      n = Number(arguments[1]);\n      if (n != n) {\n        n = 0;\n      } else if (n !== 0 && n != (1 / 0) && n != -(1 / 0)) {\n        n = (n > 0 || -1) * Math.floor(Math.abs(n));\n      }\n    }\n    var k = n >= 0 ? Math.min(n, len - 1) : len - Math.abs(n);\n    for (; k >= 0; k--) {\n      if (k in t && t[k] === searchElement) {\n        return k;\n      }\n    }\n    return -1;\n  };\n}\n\nif (!String.prototype.trim) {\n  String.prototype.trim = function() {\n    return this.replace(/^\\s+|\\s+$/g, '');\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.shim.js\n// module id = 8\n// module chunks = 0","var Symbol = require('./flowchart.symbol');\nvar inherits = require('./flowchart.helpers').inherits;\nvar drawAPI = require('./flowchart.functions');\nvar drawPath = drawAPI.drawPath;\n\nfunction Cloud(chart, options) {\n  options = options || {};\n  Symbol.call(this, chart, options);\n\n  var originX = 0;\n  var originY = 0;\n\n  this.textMargin = this.getAttr('text-margin');\n\n  // Set width to box width increased by 4 times the text margin\n  var textWidth = this.text.getBBox().width + 2 * this.textMargin;\n  // Height set to box height increased by 2 times text margin\n  var textHeight = this.text.getBBox().height + 2 * this.textMargin;\n  \n  var b = 0.75 * textWidth;\n  var h = 0.25 * textWidth;\n  var ngl = Math.cos(0.3762);\n  var coeff = 1.0752;\n  var r = coeff * b / 2 / ngl;\n  var topBubbleHeight = h/2 + r * (1 - Math.sin(0.3762));\n  var r3 = 0.90 * h;\n\n  var cv1r = textHeight/1.95;\n  \n  var cv1y1 = originY + topBubbleHeight + textHeight;\n  var cv1x = originX + textHeight/2.5;//2/1.025641;//cv1r;\n  var cv1y2 = originY + topBubbleHeight;\n  \n  cv1 = \"M\"+cv1x+\",\"+cv1y1+\" A\"+cv1r+\",\"+cv1r+\" 0 0,1 \"+cv1x+\",\"+cv1y2;\n  \n  cv2 = \"A\"+r+\",\"+r + \" 0 0,1 \"+(b+cv1x)+\",\"+ (cv1y2- h);\n  cv3 = \"A\"+r3+\",\"+r3+ \" 0 0,1 \"+(textWidth+cv1x)+\",\"+(cv1y2);\n  cv4 = \"A\"+cv1r+\",\"+cv1r + \" 0 0,1 \"+(textWidth+cv1x)+\",\"+ (cv1y1);\n  base = \"H \" + cv1x\n  var symbol = chart.paper.path(cv1 + cv2 + cv3 + cv4 + base);\n  symbol.attr({\n    stroke: this.getAttr('element-color'),\n    'stroke-width': this.getAttr('line-width'),\n    fill: this.getAttr('fill')\n  });\n\n  this.group.push(symbol);\n  \n  symbol.insertBefore(this.text);\n  \n  this.text.attr({\n    y: this.group.getBBox().height / 2,\n    x: cv1x + this.textMargin\n  });\n\n  this.startRight = textWidth + cv1x;\n\n  this.initialize();\n}\ninherits(Cloud, Symbol);\n\nCloud.prototype.getLeft = function() {\n  var x = this.getX() + this.textMargin;\n  var y = this.getY() + this.group.getBBox().height/2;\n  return {x: x, y: y};\n};\n\nCloud.prototype.getRight = function() {\n  var x = this.getX() + this.startRight; // this.group.getBBox().width;// - this.textMargin;\n  var y = this.getY() + this.group.getBBox().height/2;\n  return {x: x, y: y};\n};\n\nCloud.prototype.getTop = function() {\n  var y = this.getY();\n  var x = this.getX() + this.width/2;\n  return {x: x, y: y};\n};\n\n// Cloud.prototype.getLineLength=function(){\n//   return this.getAttr('line-length') * 1.75;\n// }\n\nmodule.exports = Cloud;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.symbol.cloud.js\n// module id = 9\n// module chunks = 0","var Symbol = require('./flowchart.symbol');\nvar inherits = require('./flowchart.helpers').inherits;\nvar drawAPI = require('./flowchart.functions');\nvar drawPath = drawAPI.drawPath;\n\nfunction Database(chart, options) {\n  options = options || {};\n  Symbol.call(this, chart, options);\n  this.textMargin = this.getAttr('text-margin');\n\n  // Set width to box width increased by 4 times the text margin\n  var width = this.text.getBBox().width + 2 * this.textMargin;\n  var ellipseHeight = width / 6.5;\n  // Height set to box height increased by 2 times text margin\n  var height = this.text.getBBox().height + 2 * this.textMargin + ellipseHeight/2;\n\n  // bottom ellipse will be centered at height of box in y direction\n  var bottomEllipse = chart.paper.ellipse(width/2, height + ellipseHeight, width/2, ellipseHeight/2);\n  bottomEllipse.attr({\n    stroke: this.getAttr('element-color'),\n    'stroke-width': this.getAttr('line-width'),\n    fill: this.getAttr('fill')\n  });\n\n  var textArea = chart.paper.rect(0, ellipseHeight/2, width, height + ellipseHeight/2); \n  textArea.attr({\n    stroke: this.getAttr('element-color'),\n    'stroke-width': 0,\n    fill: this.getAttr('fill')\n  });\n\n  // top ellipse needs to \"get out of the way\" of the text box; it will go completely above the text box\n  var topEllipse = chart.paper.ellipse(width/2, ellipseHeight/2, width/2, ellipseHeight/2);\n  topEllipse.attr({\n    stroke: this.getAttr('element-color'),\n    'stroke-width': this.getAttr('line-width'),\n    fill: this.getAttr('fill')\n  });\n\n  var leftBorder = drawPath(chart, {x: 0, y: ellipseHeight/2}, [{x:0, y:height + ellipseHeight}]);\n  \n  leftBorder.attr({\n    stroke: this.getAttr('element-color'),\n    'stroke-width': this.getAttr('line-width')\n  });\n\n  var rightBorder = drawPath(chart, {x: width, y: ellipseHeight/2}, [{x:width, y:height + ellipseHeight}]);\n  \n  rightBorder.attr({\n    stroke: this.getAttr('element-color'),\n    'stroke-width': this.getAttr('line-width')\n  });\n\n  console.debug(this.group.getBBox());\n  this.group.push( leftBorder, bottomEllipse, textArea, topEllipse, rightBorder);//(symbol, topEllipse);\n  console.debug(this.group.getBBox());\n  \n  bottomEllipse.insertBefore(this.text);\n  textArea.insertBefore(this.text);\n  topEllipse.insertBefore(this.text);\n  \n  this.text.attr({\n    y: this.group.getBBox().height / 2 \n  });\n\n  this.initialize();\n}\ninherits(Database, Symbol);\n\nDatabase.prototype.getLeft = function() {\n  var x = this.getX() + this.textMargin;\n  var y = this.getY() + this.group.getBBox().height/2;\n  return {x: x, y: y};\n};\n\nDatabase.prototype.getRight = function() {\n  var x = this.getX() + this.group.getBBox().width;// - this.textMargin;\n  var y = this.getY() + this.group.getBBox().height/2;\n  return {x: x, y: y};\n};\n\n\nmodule.exports = Database;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.symbol.database.js\n// module id = 10\n// module chunks = 0","var Symbol = require('./flowchart.symbol');\nvar inherits = require('./flowchart.helpers').inherits;\n\nfunction End(chart, options) {\n  var symbol = chart.paper.rect(0, 0, 0, 0, 20);\n  options = options || {};\n  options.text = options.text || 'End';\n  Symbol.call(this, chart, options, symbol);\n}\ninherits(End, Symbol);\n\nmodule.exports = End;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.symbol.end.js\n// module id = 11\n// module chunks = 0","var Symbol = require('./flowchart.symbol');\nvar inherits = require('./flowchart.helpers').inherits;\nvar drawAPI = require('./flowchart.functions');\nvar drawPath = drawAPI.drawPath;\n\nfunction InputOutput(chart, options) {\n  options = options || {};\n  Symbol.call(this, chart, options);\n  this.textMargin = this.getAttr('text-margin');\n\n  this.text.attr({\n    x: this.textMargin * 3\n  });\n\n  var width = this.text.getBBox().width + 4 * this.textMargin;\n  var height = this.text.getBBox().height + 2 * this.textMargin;\n  var startX = this.textMargin;\n  var startY = height/2;\n\n  var start = {x: startX, y: startY};\n  var points = [\n    {x: startX - this.textMargin, y: height},\n    {x: startX - this.textMargin + width, y: height},\n    {x: startX - this.textMargin + width + 2 * this.textMargin, y: 0},\n    {x: startX - this.textMargin + 2 * this.textMargin, y: 0},\n    {x: startX, y: startY}\n  ];\n\n  var symbol = drawPath(chart, start, points);\n\n  symbol.attr({\n    stroke: this.getAttr('element-color'),\n    'stroke-width': this.getAttr('line-width'),\n    fill: this.getAttr('fill')\n  });\n  if (options.link) { symbol.attr('href', options.link); }\n  if (options.target) { symbol.attr('target', options.target); }\n  if (options.key) { symbol.node.id = options.key; }\n  symbol.node.setAttribute('class', this.getAttr('class'));\n\n  this.text.attr({\n    y: symbol.getBBox().height/2\n  });\n\n  this.group.push(symbol);\n  symbol.insertBefore(this.text);\n\n  this.initialize();\n}\ninherits(InputOutput, Symbol);\n\nInputOutput.prototype.getLeft = function() {\n  var y = this.getY() + this.group.getBBox().height/2;\n  var x = this.getX() + this.textMargin;\n  return {x: x, y: y};\n};\n\nInputOutput.prototype.getRight = function() {\n  var y = this.getY() + this.group.getBBox().height/2;\n  var x = this.getX() + this.group.getBBox().width - this.textMargin;\n  return {x: x, y: y};\n};\n\nmodule.exports = InputOutput;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.symbol.inputoutput.js\n// module id = 12\n// module chunks = 0","var Symbol = require('./flowchart.symbol');\nvar inherits = require('./flowchart.helpers').inherits;\n\nfunction Operation(chart, options) {\n  var symbol = chart.paper.rect(0, 0, 0, 0);\n  options = options || {};\n  Symbol.call(this, chart, options, symbol);\n}\ninherits(Operation, Symbol);\n\nmodule.exports = Operation;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.symbol.operation.js\n// module id = 13\n// module chunks = 0","var Symbol = require('./flowchart.symbol');\nvar inherits = require('./flowchart.helpers').inherits;\n\nfunction Start(chart, options) {\n  var symbol = chart.paper.rect(0, 0, 0, 0, 20);\n  options = options || {};\n  options.text = options.text || 'Start';\n  Symbol.call(this, chart, options, symbol);\n}\ninherits(Start, Symbol);\n\nmodule.exports = Start;\n\n// Start.prototype.render = function() {\n//   if (this.next) {\n//     var lineLength = this.chart.options.symbols[this.symbolType]['line-length'] || this.chart.options['line-length'];\n\n//     var bottomPoint = this.getBottom();\n//     var topPoint = this.next.getTop();\n\n//     if (!this.next.isPositioned) {\n//       this.next.shiftY(this.getY() + this.height + lineLength);\n//       this.next.setX(bottomPoint.x - this.next.width/2);\n//       this.next.isPositioned = true;\n\n//       this.next.render();\n//     }\n//   }\n// };\n\n// Start.prototype.renderLines = function() {\n//   if (this.next) {\n//     this.drawLineTo(this.next);\n//   }\n// };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.symbol.start.js\n// module id = 14\n// module chunks = 0","var Symbol = require('./flowchart.symbol');\nvar inherits = require('./flowchart.helpers').inherits;\n\nfunction Subroutine(chart, options) {\n  var symbol = chart.paper.rect(0, 0, 0, 0);\n  options = options || {};\n  Symbol.call(this, chart, options, symbol);\n\n  symbol.attr({\n    width: this.text.getBBox().width + 4 * this.getAttr('text-margin')\n  });\n\n  this.text.attr({\n    'x': 2 * this.getAttr('text-margin')\n  });\n\n  var innerWrap = chart.paper.rect(0, 0, 0, 0);\n  innerWrap.attr({\n    x: this.getAttr('text-margin'),\n    stroke: this.getAttr('element-color'),\n    'stroke-width': this.getAttr('line-width'),\n    width: this.text.getBBox().width + 2 * this.getAttr('text-margin'),\n    height: this.text.getBBox().height + 2 * this.getAttr('text-margin'),\n    fill: this.getAttr('fill')\n  });\n  if (options.key) { innerWrap.node.id = options.key + 'i'; }\n\n  var font = this.getAttr('font');\n  var fontF = this.getAttr('font-family');\n  var fontW = this.getAttr('font-weight');\n\n  if (font) innerWrap.attr({ 'font': font });\n  if (fontF) innerWrap.attr({ 'font-family': fontF });\n  if (fontW) innerWrap.attr({ 'font-weight': fontW });\n\n  if (options.link) { innerWrap.attr('href', options.link); }\n  if (options.target) { innerWrap.attr('target', options.target); }\n  this.group.push(innerWrap);\n  innerWrap.insertBefore(this.text);\n\n  this.initialize();\n}\ninherits(Subroutine, Symbol);\n\nmodule.exports = Subroutine;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/flowchart.symbol.subroutine.js\n// module id = 15\n// module chunks = 0","if (typeof jQuery != 'undefined') {\n\tvar parse = require('./flowchart.parse');\n\t(function( $ ) {\n\t\t$.fn.flowChart = function( options ) {\n\t\t\treturn this.each(function() {\n\t\t\t\tvar $this = $(this);\n\t\t\t\tvar chart = parse($this.text());\n\t\t\t\t$this.html('');\n\t\t\t\tchart.drawSVG(this, options);\n\t\t\t});\n\t\t};\n\t})(jQuery); // eslint-disable-line\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/jquery-plugin.js\n// module id = 16\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_17__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"Raphael\"\n// module id = 17\n// module chunks = 0"],"sourceRoot":""}